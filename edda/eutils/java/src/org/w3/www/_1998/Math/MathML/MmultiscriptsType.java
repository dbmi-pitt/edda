/**
 * MmultiscriptsType.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package org.w3.www._1998.Math.MathML;

public class MmultiscriptsType  implements java.io.Serializable {
    private org.w3.www._1998.Math.MathML.MiType mi;

    private org.w3.www._1998.Math.MathML.MoType mo;

    private org.w3.www._1998.Math.MathML.MnType mn;

    private org.w3.www._1998.Math.MathML.MtextType mtext;

    private org.w3.www._1998.Math.MathML.MsType ms;

    private org.w3.www._1998.Math.MathML.MrowType mrow;

    private org.w3.www._1998.Math.MathML.MfracType mfrac;

    private org.w3.www._1998.Math.MathML.MsqrtType msqrt;

    private org.w3.www._1998.Math.MathML.MrootType mroot;

    private org.w3.www._1998.Math.MathML.MpaddedType mpadded;

    private org.w3.www._1998.Math.MathML.MphantomType mphantom;

    private org.w3.www._1998.Math.MathML.MfencedType mfenced;

    private org.w3.www._1998.Math.MathML.MencloseType menclose;

    private org.w3.www._1998.Math.MathML.MsubType msub;

    private org.w3.www._1998.Math.MathML.MsupType msup;

    private org.w3.www._1998.Math.MathML.MsubsupType msubsup;

    private org.w3.www._1998.Math.MathML.MunderType munder;

    private org.w3.www._1998.Math.MathML.MoverType mover;

    private org.w3.www._1998.Math.MathML.MunderoverType munderover;

    private org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts;

    private org.w3.www._1998.Math.MathML.MtableType mtable;

    private org.w3.www._1998.Math.MathML.MaligngroupType maligngroup;

    private org.w3.www._1998.Math.MathML.MalignmarkType malignmark;

    private org.w3.www._1998.Math.MathML.MspaceType mspace;

    private org.w3.www._1998.Math.MathML.MactionType maction;

    private org.w3.www._1998.Math.MathML.MerrorType merror;

    private org.w3.www._1998.Math.MathML.MstyleType mstyle;

    private org.w3.www._1998.Math.MathML.CnType cn;

    private org.w3.www._1998.Math.MathML.CiType ci;

    private org.w3.www._1998.Math.MathML.CsymbolType csymbol;

    private org.w3.www._1998.Math.MathML.ArithType abs;

    private org.w3.www._1998.Math.MathML.ArithType conjugate;

    private org.w3.www._1998.Math.MathML.ArithType factorial;

    private org.w3.www._1998.Math.MathML.ArithType arg;

    private org.w3.www._1998.Math.MathML.ArithType real;

    private org.w3.www._1998.Math.MathML.ArithType imaginary;

    private org.w3.www._1998.Math.MathML.ArithType floor;

    private org.w3.www._1998.Math.MathML.ArithType ceiling;

    private org.w3.www._1998.Math.MathML.ArithType quotient;

    private org.w3.www._1998.Math.MathML.ArithType divide;

    private org.w3.www._1998.Math.MathML.ArithType rem;

    private org.w3.www._1998.Math.MathML.ArithType minus;

    private org.w3.www._1998.Math.MathML.ArithType plus;

    private org.w3.www._1998.Math.MathML.ArithType times;

    private org.w3.www._1998.Math.MathML.ArithType power;

    private org.w3.www._1998.Math.MathML.ArithType root;

    private org.w3.www._1998.Math.MathML.ArithType max;

    private org.w3.www._1998.Math.MathML.ArithType min;

    private org.w3.www._1998.Math.MathML.ArithType gcd;

    private org.w3.www._1998.Math.MathML.ArithType lcm;

    private org.w3.www._1998.Math.MathML.ArithType sum;

    private org.w3.www._1998.Math.MathML.ArithType product;

    private org.w3.www._1998.Math.MathML.FunctionsType compose;

    private org.w3.www._1998.Math.MathML.FunctionsType domain;

    private org.w3.www._1998.Math.MathML.FunctionsType codomain;

    private org.w3.www._1998.Math.MathML.FunctionsType image;

    private org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication;

    private org.w3.www._1998.Math.MathML.FunctionsType ident;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType and;

    private org.w3.www._1998.Math.MathML.LogicType or;

    private org.w3.www._1998.Math.MathML.LogicType xor;

    private org.w3.www._1998.Math.MathML.LogicType not;

    private org.w3.www._1998.Math.MathML.LogicType exists;

    private org.w3.www._1998.Math.MathML.LogicType forall;

    private org.w3.www._1998.Math.MathML.LogicType implies;

    private org.w3.www._1998.Math.MathML.ConstantType naturalnumbers;

    private org.w3.www._1998.Math.MathML.ConstantType primes;

    private org.w3.www._1998.Math.MathML.ConstantType integers;

    private org.w3.www._1998.Math.MathML.ConstantType rationals;

    private org.w3.www._1998.Math.MathML.ConstantType reals;

    private org.w3.www._1998.Math.MathML.ConstantType complexes;

    private org.w3.www._1998.Math.MathML.ConstantType emptyset;

    private org.w3.www._1998.Math.MathML.ConstantType exponentiale;

    private org.w3.www._1998.Math.MathML.ConstantType imaginaryi;

    private org.w3.www._1998.Math.MathML.ConstantType pi;

    private org.w3.www._1998.Math.MathML.ConstantType eulergamma;

    private org.w3.www._1998.Math.MathML.ConstantType _true;

    private org.w3.www._1998.Math.MathML.ConstantType _false;

    private org.w3.www._1998.Math.MathML.ConstantType infinity;

    private org.w3.www._1998.Math.MathML.ConstantType notanumber;

    private org.w3.www._1998.Math.MathML.SetType set;

    private org.w3.www._1998.Math.MathML.ListType list;

    private org.w3.www._1998.Math.MathML.UnionType union;

    private org.w3.www._1998.Math.MathML.IntersectType intersect;

    private org.w3.www._1998.Math.MathML.InType in;

    private org.w3.www._1998.Math.MathML.NotinType notin;

    private org.w3.www._1998.Math.MathML.SubsetType subset;

    private org.w3.www._1998.Math.MathML.PrsubsetType prsubset;

    private org.w3.www._1998.Math.MathML.NotsubsetType notsubset;

    private org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset;

    private org.w3.www._1998.Math.MathML.SetdiffType setdiff;

    private org.w3.www._1998.Math.MathML.CardType card;

    private org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct;

    private org.w3.www._1998.Math.MathML.RelationsType eq;

    private org.w3.www._1998.Math.MathML.RelationsType neq;

    private org.w3.www._1998.Math.MathML.RelationsType leq;

    private org.w3.www._1998.Math.MathML.RelationsType lt;

    private org.w3.www._1998.Math.MathML.RelationsType geq;

    private org.w3.www._1998.Math.MathML.RelationsType gt;

    private org.w3.www._1998.Math.MathML.RelationsType equivalent;

    private org.w3.www._1998.Math.MathML.RelationsType approx;

    private org.w3.www._1998.Math.MathML.RelationsType factorof;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType log;

    private org.w3.www._1998.Math.MathML.LogbaseType logbase;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh;

    private org.w3.www._1998.Math.MathML.IntType _int;

    private org.w3.www._1998.Math.MathML.DiffType diff;

    private org.w3.www._1998.Math.MathML.PartialdiffType partialdiff;

    private org.w3.www._1998.Math.MathML.LimitType limit;

    private org.w3.www._1998.Math.MathML.LowlimitType lowlimit;

    private org.w3.www._1998.Math.MathML.UplimitType uplimit;

    private org.w3.www._1998.Math.MathML.TendstoType tendsto;

    private org.w3.www._1998.Math.MathML.VectorType vector;

    private org.w3.www._1998.Math.MathML.MatrixType matrix;

    private org.w3.www._1998.Math.MathML.DeterminantType determinant;

    private org.w3.www._1998.Math.MathML.TransposeType transpose;

    private org.w3.www._1998.Math.MathML.SelectorType selector;

    private org.w3.www._1998.Math.MathML.VectorproductType vectorproduct;

    private org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct;

    private org.w3.www._1998.Math.MathML.OuterproductType outerproduct;

    private org.w3.www._1998.Math.MathML.DivergenceType divergence;

    private org.w3.www._1998.Math.MathML.GradType grad;

    private org.w3.www._1998.Math.MathML.CurlType curl;

    private org.w3.www._1998.Math.MathML.LaplacianType laplacian;

    private org.w3.www._1998.Math.MathML.MeanType mean;

    private org.w3.www._1998.Math.MathML.SdevType sdev;

    private org.w3.www._1998.Math.MathML.VarianceType variance;

    private org.w3.www._1998.Math.MathML.MedianType median;

    private org.w3.www._1998.Math.MathML.ModeType mode;

    private org.w3.www._1998.Math.MathML.MomentType moment;

    private org.w3.www._1998.Math.MathML.MomentaboutType momentabout;

    private org.w3.www._1998.Math.MathML.ApplyType apply;

    private org.w3.www._1998.Math.MathML.IntervalType interval;

    private org.w3.www._1998.Math.MathML.InverseType inverse;

    private org.w3.www._1998.Math.MathML.ConditionType condition;

    private org.w3.www._1998.Math.MathML.DeclareType declare;

    private org.w3.www._1998.Math.MathML.LambdaType lambda;

    private org.w3.www._1998.Math.MathML.PiecewiseType piecewise;

    private org.w3.www._1998.Math.MathML.BvarType bvar;

    private org.w3.www._1998.Math.MathML.DegreeType degree;

    private org.w3.www._1998.Math.MathML.SemanticsType semantics;

    private org.w3.www._1998.Math.MathML.MiType mi2;

    private org.w3.www._1998.Math.MathML.MoType mo2;

    private org.w3.www._1998.Math.MathML.MnType mn2;

    private org.w3.www._1998.Math.MathML.MtextType mtext2;

    private org.w3.www._1998.Math.MathML.MsType ms2;

    private org.w3.www._1998.Math.MathML.MrowType mrow2;

    private org.w3.www._1998.Math.MathML.MfracType mfrac2;

    private org.w3.www._1998.Math.MathML.MsqrtType msqrt2;

    private org.w3.www._1998.Math.MathML.MrootType mroot2;

    private org.w3.www._1998.Math.MathML.MpaddedType mpadded2;

    private org.w3.www._1998.Math.MathML.MphantomType mphantom2;

    private org.w3.www._1998.Math.MathML.MfencedType mfenced2;

    private org.w3.www._1998.Math.MathML.MencloseType menclose2;

    private org.w3.www._1998.Math.MathML.MsubType msub2;

    private org.w3.www._1998.Math.MathML.MsupType msup2;

    private org.w3.www._1998.Math.MathML.MsubsupType msubsup2;

    private org.w3.www._1998.Math.MathML.MunderType munder2;

    private org.w3.www._1998.Math.MathML.MoverType mover2;

    private org.w3.www._1998.Math.MathML.MunderoverType munderover2;

    private org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts2;

    private org.w3.www._1998.Math.MathML.MtableType mtable2;

    private org.w3.www._1998.Math.MathML.MaligngroupType maligngroup2;

    private org.w3.www._1998.Math.MathML.MalignmarkType malignmark2;

    private org.w3.www._1998.Math.MathML.MspaceType mspace2;

    private org.w3.www._1998.Math.MathML.MactionType maction2;

    private org.w3.www._1998.Math.MathML.MerrorType merror2;

    private org.w3.www._1998.Math.MathML.MstyleType mstyle2;

    private org.w3.www._1998.Math.MathML.CnType cn2;

    private org.w3.www._1998.Math.MathML.CiType ci2;

    private org.w3.www._1998.Math.MathML.CsymbolType csymbol2;

    private org.w3.www._1998.Math.MathML.ArithType abs2;

    private org.w3.www._1998.Math.MathML.ArithType conjugate2;

    private org.w3.www._1998.Math.MathML.ArithType factorial2;

    private org.w3.www._1998.Math.MathML.ArithType arg2;

    private org.w3.www._1998.Math.MathML.ArithType real2;

    private org.w3.www._1998.Math.MathML.ArithType imaginary2;

    private org.w3.www._1998.Math.MathML.ArithType floor2;

    private org.w3.www._1998.Math.MathML.ArithType ceiling2;

    private org.w3.www._1998.Math.MathML.ArithType quotient2;

    private org.w3.www._1998.Math.MathML.ArithType divide2;

    private org.w3.www._1998.Math.MathML.ArithType rem2;

    private org.w3.www._1998.Math.MathML.ArithType minus2;

    private org.w3.www._1998.Math.MathML.ArithType plus2;

    private org.w3.www._1998.Math.MathML.ArithType times2;

    private org.w3.www._1998.Math.MathML.ArithType power2;

    private org.w3.www._1998.Math.MathML.ArithType root2;

    private org.w3.www._1998.Math.MathML.ArithType max2;

    private org.w3.www._1998.Math.MathML.ArithType min2;

    private org.w3.www._1998.Math.MathML.ArithType gcd2;

    private org.w3.www._1998.Math.MathML.ArithType lcm2;

    private org.w3.www._1998.Math.MathML.ArithType sum2;

    private org.w3.www._1998.Math.MathML.ArithType product2;

    private org.w3.www._1998.Math.MathML.FunctionsType compose2;

    private org.w3.www._1998.Math.MathML.FunctionsType domain2;

    private org.w3.www._1998.Math.MathML.FunctionsType codomain2;

    private org.w3.www._1998.Math.MathML.FunctionsType image2;

    private org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication2;

    private org.w3.www._1998.Math.MathML.FunctionsType ident2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType and2;

    private org.w3.www._1998.Math.MathML.LogicType or2;

    private org.w3.www._1998.Math.MathML.LogicType xor2;

    private org.w3.www._1998.Math.MathML.LogicType not2;

    private org.w3.www._1998.Math.MathML.LogicType exists2;

    private org.w3.www._1998.Math.MathML.LogicType forall2;

    private org.w3.www._1998.Math.MathML.LogicType implies2;

    private org.w3.www._1998.Math.MathML.ConstantType naturalnumbers2;

    private org.w3.www._1998.Math.MathML.ConstantType primes2;

    private org.w3.www._1998.Math.MathML.ConstantType integers2;

    private org.w3.www._1998.Math.MathML.ConstantType rationals2;

    private org.w3.www._1998.Math.MathML.ConstantType reals2;

    private org.w3.www._1998.Math.MathML.ConstantType complexes2;

    private org.w3.www._1998.Math.MathML.ConstantType emptyset2;

    private org.w3.www._1998.Math.MathML.ConstantType exponentiale2;

    private org.w3.www._1998.Math.MathML.ConstantType imaginaryi2;

    private org.w3.www._1998.Math.MathML.ConstantType pi2;

    private org.w3.www._1998.Math.MathML.ConstantType eulergamma2;

    private org.w3.www._1998.Math.MathML.ConstantType _true2;

    private org.w3.www._1998.Math.MathML.ConstantType _false2;

    private org.w3.www._1998.Math.MathML.ConstantType infinity2;

    private org.w3.www._1998.Math.MathML.ConstantType notanumber2;

    private org.w3.www._1998.Math.MathML.SetType set2;

    private org.w3.www._1998.Math.MathML.ListType list2;

    private org.w3.www._1998.Math.MathML.UnionType union2;

    private org.w3.www._1998.Math.MathML.IntersectType intersect2;

    private org.w3.www._1998.Math.MathML.InType in2;

    private org.w3.www._1998.Math.MathML.NotinType notin2;

    private org.w3.www._1998.Math.MathML.SubsetType subset2;

    private org.w3.www._1998.Math.MathML.PrsubsetType prsubset2;

    private org.w3.www._1998.Math.MathML.NotsubsetType notsubset2;

    private org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset2;

    private org.w3.www._1998.Math.MathML.SetdiffType setdiff2;

    private org.w3.www._1998.Math.MathML.CardType card2;

    private org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct2;

    private org.w3.www._1998.Math.MathML.RelationsType eq2;

    private org.w3.www._1998.Math.MathML.RelationsType neq2;

    private org.w3.www._1998.Math.MathML.RelationsType leq2;

    private org.w3.www._1998.Math.MathML.RelationsType lt2;

    private org.w3.www._1998.Math.MathML.RelationsType geq2;

    private org.w3.www._1998.Math.MathML.RelationsType gt2;

    private org.w3.www._1998.Math.MathML.RelationsType equivalent2;

    private org.w3.www._1998.Math.MathML.RelationsType approx2;

    private org.w3.www._1998.Math.MathML.RelationsType factorof2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType log2;

    private org.w3.www._1998.Math.MathML.LogbaseType logbase2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh2;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh2;

    private org.w3.www._1998.Math.MathML.IntType _int2;

    private org.w3.www._1998.Math.MathML.DiffType diff2;

    private org.w3.www._1998.Math.MathML.PartialdiffType partialdiff2;

    private org.w3.www._1998.Math.MathML.LimitType limit2;

    private org.w3.www._1998.Math.MathML.LowlimitType lowlimit2;

    private org.w3.www._1998.Math.MathML.UplimitType uplimit2;

    private org.w3.www._1998.Math.MathML.TendstoType tendsto2;

    private org.w3.www._1998.Math.MathML.VectorType vector2;

    private org.w3.www._1998.Math.MathML.MatrixType matrix2;

    private org.w3.www._1998.Math.MathML.DeterminantType determinant2;

    private org.w3.www._1998.Math.MathML.TransposeType transpose2;

    private org.w3.www._1998.Math.MathML.SelectorType selector2;

    private org.w3.www._1998.Math.MathML.VectorproductType vectorproduct2;

    private org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct2;

    private org.w3.www._1998.Math.MathML.OuterproductType outerproduct2;

    private org.w3.www._1998.Math.MathML.DivergenceType divergence2;

    private org.w3.www._1998.Math.MathML.GradType grad2;

    private org.w3.www._1998.Math.MathML.CurlType curl2;

    private org.w3.www._1998.Math.MathML.LaplacianType laplacian2;

    private org.w3.www._1998.Math.MathML.MeanType mean2;

    private org.w3.www._1998.Math.MathML.SdevType sdev2;

    private org.w3.www._1998.Math.MathML.VarianceType variance2;

    private org.w3.www._1998.Math.MathML.MedianType median2;

    private org.w3.www._1998.Math.MathML.ModeType mode2;

    private org.w3.www._1998.Math.MathML.MomentType moment2;

    private org.w3.www._1998.Math.MathML.MomentaboutType momentabout2;

    private org.w3.www._1998.Math.MathML.ApplyType apply2;

    private org.w3.www._1998.Math.MathML.IntervalType interval2;

    private org.w3.www._1998.Math.MathML.InverseType inverse2;

    private org.w3.www._1998.Math.MathML.ConditionType condition2;

    private org.w3.www._1998.Math.MathML.DeclareType declare2;

    private org.w3.www._1998.Math.MathML.LambdaType lambda2;

    private org.w3.www._1998.Math.MathML.PiecewiseType piecewise2;

    private org.w3.www._1998.Math.MathML.BvarType bvar2;

    private org.w3.www._1998.Math.MathML.DegreeType degree2;

    private org.w3.www._1998.Math.MathML.SemanticsType semantics2;

    private org.w3.www._1998.Math.MathML.NoneType none;

    private org.w3.www._1998.Math.MathML.MiType mi3;

    private org.w3.www._1998.Math.MathML.MoType mo3;

    private org.w3.www._1998.Math.MathML.MnType mn3;

    private org.w3.www._1998.Math.MathML.MtextType mtext3;

    private org.w3.www._1998.Math.MathML.MsType ms3;

    private org.w3.www._1998.Math.MathML.MrowType mrow3;

    private org.w3.www._1998.Math.MathML.MfracType mfrac3;

    private org.w3.www._1998.Math.MathML.MsqrtType msqrt3;

    private org.w3.www._1998.Math.MathML.MrootType mroot3;

    private org.w3.www._1998.Math.MathML.MpaddedType mpadded3;

    private org.w3.www._1998.Math.MathML.MphantomType mphantom3;

    private org.w3.www._1998.Math.MathML.MfencedType mfenced3;

    private org.w3.www._1998.Math.MathML.MencloseType menclose3;

    private org.w3.www._1998.Math.MathML.MsubType msub3;

    private org.w3.www._1998.Math.MathML.MsupType msup3;

    private org.w3.www._1998.Math.MathML.MsubsupType msubsup3;

    private org.w3.www._1998.Math.MathML.MunderType munder3;

    private org.w3.www._1998.Math.MathML.MoverType mover3;

    private org.w3.www._1998.Math.MathML.MunderoverType munderover3;

    private org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts3;

    private org.w3.www._1998.Math.MathML.MtableType mtable3;

    private org.w3.www._1998.Math.MathML.MaligngroupType maligngroup3;

    private org.w3.www._1998.Math.MathML.MalignmarkType malignmark3;

    private org.w3.www._1998.Math.MathML.MspaceType mspace3;

    private org.w3.www._1998.Math.MathML.MactionType maction3;

    private org.w3.www._1998.Math.MathML.MerrorType merror3;

    private org.w3.www._1998.Math.MathML.MstyleType mstyle3;

    private org.w3.www._1998.Math.MathML.CnType cn3;

    private org.w3.www._1998.Math.MathML.CiType ci3;

    private org.w3.www._1998.Math.MathML.CsymbolType csymbol3;

    private org.w3.www._1998.Math.MathML.ArithType abs3;

    private org.w3.www._1998.Math.MathML.ArithType conjugate3;

    private org.w3.www._1998.Math.MathML.ArithType factorial3;

    private org.w3.www._1998.Math.MathML.ArithType arg3;

    private org.w3.www._1998.Math.MathML.ArithType real3;

    private org.w3.www._1998.Math.MathML.ArithType imaginary3;

    private org.w3.www._1998.Math.MathML.ArithType floor3;

    private org.w3.www._1998.Math.MathML.ArithType ceiling3;

    private org.w3.www._1998.Math.MathML.ArithType quotient3;

    private org.w3.www._1998.Math.MathML.ArithType divide3;

    private org.w3.www._1998.Math.MathML.ArithType rem3;

    private org.w3.www._1998.Math.MathML.ArithType minus3;

    private org.w3.www._1998.Math.MathML.ArithType plus3;

    private org.w3.www._1998.Math.MathML.ArithType times3;

    private org.w3.www._1998.Math.MathML.ArithType power3;

    private org.w3.www._1998.Math.MathML.ArithType root3;

    private org.w3.www._1998.Math.MathML.ArithType max3;

    private org.w3.www._1998.Math.MathML.ArithType min3;

    private org.w3.www._1998.Math.MathML.ArithType gcd3;

    private org.w3.www._1998.Math.MathML.ArithType lcm3;

    private org.w3.www._1998.Math.MathML.ArithType sum3;

    private org.w3.www._1998.Math.MathML.ArithType product3;

    private org.w3.www._1998.Math.MathML.FunctionsType compose3;

    private org.w3.www._1998.Math.MathML.FunctionsType domain3;

    private org.w3.www._1998.Math.MathML.FunctionsType codomain3;

    private org.w3.www._1998.Math.MathML.FunctionsType image3;

    private org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication3;

    private org.w3.www._1998.Math.MathML.FunctionsType ident3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType and3;

    private org.w3.www._1998.Math.MathML.LogicType or3;

    private org.w3.www._1998.Math.MathML.LogicType xor3;

    private org.w3.www._1998.Math.MathML.LogicType not3;

    private org.w3.www._1998.Math.MathML.LogicType exists3;

    private org.w3.www._1998.Math.MathML.LogicType forall3;

    private org.w3.www._1998.Math.MathML.LogicType implies3;

    private org.w3.www._1998.Math.MathML.ConstantType naturalnumbers3;

    private org.w3.www._1998.Math.MathML.ConstantType primes3;

    private org.w3.www._1998.Math.MathML.ConstantType integers3;

    private org.w3.www._1998.Math.MathML.ConstantType rationals3;

    private org.w3.www._1998.Math.MathML.ConstantType reals3;

    private org.w3.www._1998.Math.MathML.ConstantType complexes3;

    private org.w3.www._1998.Math.MathML.ConstantType emptyset3;

    private org.w3.www._1998.Math.MathML.ConstantType exponentiale3;

    private org.w3.www._1998.Math.MathML.ConstantType imaginaryi3;

    private org.w3.www._1998.Math.MathML.ConstantType pi3;

    private org.w3.www._1998.Math.MathML.ConstantType eulergamma3;

    private org.w3.www._1998.Math.MathML.ConstantType _true3;

    private org.w3.www._1998.Math.MathML.ConstantType _false3;

    private org.w3.www._1998.Math.MathML.ConstantType infinity3;

    private org.w3.www._1998.Math.MathML.ConstantType notanumber3;

    private org.w3.www._1998.Math.MathML.SetType set3;

    private org.w3.www._1998.Math.MathML.ListType list3;

    private org.w3.www._1998.Math.MathML.UnionType union3;

    private org.w3.www._1998.Math.MathML.IntersectType intersect3;

    private org.w3.www._1998.Math.MathML.InType in3;

    private org.w3.www._1998.Math.MathML.NotinType notin3;

    private org.w3.www._1998.Math.MathML.SubsetType subset3;

    private org.w3.www._1998.Math.MathML.PrsubsetType prsubset3;

    private org.w3.www._1998.Math.MathML.NotsubsetType notsubset3;

    private org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset3;

    private org.w3.www._1998.Math.MathML.SetdiffType setdiff3;

    private org.w3.www._1998.Math.MathML.CardType card3;

    private org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct3;

    private org.w3.www._1998.Math.MathML.RelationsType eq3;

    private org.w3.www._1998.Math.MathML.RelationsType neq3;

    private org.w3.www._1998.Math.MathML.RelationsType leq3;

    private org.w3.www._1998.Math.MathML.RelationsType lt3;

    private org.w3.www._1998.Math.MathML.RelationsType geq3;

    private org.w3.www._1998.Math.MathML.RelationsType gt3;

    private org.w3.www._1998.Math.MathML.RelationsType equivalent3;

    private org.w3.www._1998.Math.MathML.RelationsType approx3;

    private org.w3.www._1998.Math.MathML.RelationsType factorof3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType log3;

    private org.w3.www._1998.Math.MathML.LogbaseType logbase3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh3;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh3;

    private org.w3.www._1998.Math.MathML.IntType _int3;

    private org.w3.www._1998.Math.MathML.DiffType diff3;

    private org.w3.www._1998.Math.MathML.PartialdiffType partialdiff3;

    private org.w3.www._1998.Math.MathML.LimitType limit3;

    private org.w3.www._1998.Math.MathML.LowlimitType lowlimit3;

    private org.w3.www._1998.Math.MathML.UplimitType uplimit3;

    private org.w3.www._1998.Math.MathML.TendstoType tendsto3;

    private org.w3.www._1998.Math.MathML.VectorType vector3;

    private org.w3.www._1998.Math.MathML.MatrixType matrix3;

    private org.w3.www._1998.Math.MathML.DeterminantType determinant3;

    private org.w3.www._1998.Math.MathML.TransposeType transpose3;

    private org.w3.www._1998.Math.MathML.SelectorType selector3;

    private org.w3.www._1998.Math.MathML.VectorproductType vectorproduct3;

    private org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct3;

    private org.w3.www._1998.Math.MathML.OuterproductType outerproduct3;

    private org.w3.www._1998.Math.MathML.DivergenceType divergence3;

    private org.w3.www._1998.Math.MathML.GradType grad3;

    private org.w3.www._1998.Math.MathML.CurlType curl3;

    private org.w3.www._1998.Math.MathML.LaplacianType laplacian3;

    private org.w3.www._1998.Math.MathML.MeanType mean3;

    private org.w3.www._1998.Math.MathML.SdevType sdev3;

    private org.w3.www._1998.Math.MathML.VarianceType variance3;

    private org.w3.www._1998.Math.MathML.MedianType median3;

    private org.w3.www._1998.Math.MathML.ModeType mode3;

    private org.w3.www._1998.Math.MathML.MomentType moment3;

    private org.w3.www._1998.Math.MathML.MomentaboutType momentabout3;

    private org.w3.www._1998.Math.MathML.ApplyType apply3;

    private org.w3.www._1998.Math.MathML.IntervalType interval3;

    private org.w3.www._1998.Math.MathML.InverseType inverse3;

    private org.w3.www._1998.Math.MathML.ConditionType condition3;

    private org.w3.www._1998.Math.MathML.DeclareType declare3;

    private org.w3.www._1998.Math.MathML.LambdaType lambda3;

    private org.w3.www._1998.Math.MathML.PiecewiseType piecewise3;

    private org.w3.www._1998.Math.MathML.BvarType bvar3;

    private org.w3.www._1998.Math.MathML.DegreeType degree3;

    private org.w3.www._1998.Math.MathML.SemanticsType semantics3;

    private org.w3.www._1998.Math.MathML.NoneType none2;

    private org.w3.www._1998.Math.MathML.MprescriptsType mprescripts;

    private org.w3.www._1998.Math.MathML.MiType mi4;

    private org.w3.www._1998.Math.MathML.MoType mo4;

    private org.w3.www._1998.Math.MathML.MnType mn4;

    private org.w3.www._1998.Math.MathML.MtextType mtext4;

    private org.w3.www._1998.Math.MathML.MsType ms4;

    private org.w3.www._1998.Math.MathML.MrowType mrow4;

    private org.w3.www._1998.Math.MathML.MfracType mfrac4;

    private org.w3.www._1998.Math.MathML.MsqrtType msqrt4;

    private org.w3.www._1998.Math.MathML.MrootType mroot4;

    private org.w3.www._1998.Math.MathML.MpaddedType mpadded4;

    private org.w3.www._1998.Math.MathML.MphantomType mphantom4;

    private org.w3.www._1998.Math.MathML.MfencedType mfenced4;

    private org.w3.www._1998.Math.MathML.MencloseType menclose4;

    private org.w3.www._1998.Math.MathML.MsubType msub4;

    private org.w3.www._1998.Math.MathML.MsupType msup4;

    private org.w3.www._1998.Math.MathML.MsubsupType msubsup4;

    private org.w3.www._1998.Math.MathML.MunderType munder4;

    private org.w3.www._1998.Math.MathML.MoverType mover4;

    private org.w3.www._1998.Math.MathML.MunderoverType munderover4;

    private org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts4;

    private org.w3.www._1998.Math.MathML.MtableType mtable4;

    private org.w3.www._1998.Math.MathML.MaligngroupType maligngroup4;

    private org.w3.www._1998.Math.MathML.MalignmarkType malignmark4;

    private org.w3.www._1998.Math.MathML.MspaceType mspace4;

    private org.w3.www._1998.Math.MathML.MactionType maction4;

    private org.w3.www._1998.Math.MathML.MerrorType merror4;

    private org.w3.www._1998.Math.MathML.MstyleType mstyle4;

    private org.w3.www._1998.Math.MathML.CnType cn4;

    private org.w3.www._1998.Math.MathML.CiType ci4;

    private org.w3.www._1998.Math.MathML.CsymbolType csymbol4;

    private org.w3.www._1998.Math.MathML.ArithType abs4;

    private org.w3.www._1998.Math.MathML.ArithType conjugate4;

    private org.w3.www._1998.Math.MathML.ArithType factorial4;

    private org.w3.www._1998.Math.MathML.ArithType arg4;

    private org.w3.www._1998.Math.MathML.ArithType real4;

    private org.w3.www._1998.Math.MathML.ArithType imaginary4;

    private org.w3.www._1998.Math.MathML.ArithType floor4;

    private org.w3.www._1998.Math.MathML.ArithType ceiling4;

    private org.w3.www._1998.Math.MathML.ArithType quotient4;

    private org.w3.www._1998.Math.MathML.ArithType divide4;

    private org.w3.www._1998.Math.MathML.ArithType rem4;

    private org.w3.www._1998.Math.MathML.ArithType minus4;

    private org.w3.www._1998.Math.MathML.ArithType plus4;

    private org.w3.www._1998.Math.MathML.ArithType times4;

    private org.w3.www._1998.Math.MathML.ArithType power4;

    private org.w3.www._1998.Math.MathML.ArithType root4;

    private org.w3.www._1998.Math.MathML.ArithType max4;

    private org.w3.www._1998.Math.MathML.ArithType min4;

    private org.w3.www._1998.Math.MathML.ArithType gcd4;

    private org.w3.www._1998.Math.MathML.ArithType lcm4;

    private org.w3.www._1998.Math.MathML.ArithType sum4;

    private org.w3.www._1998.Math.MathML.ArithType product4;

    private org.w3.www._1998.Math.MathML.FunctionsType compose4;

    private org.w3.www._1998.Math.MathML.FunctionsType domain4;

    private org.w3.www._1998.Math.MathML.FunctionsType codomain4;

    private org.w3.www._1998.Math.MathML.FunctionsType image4;

    private org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication4;

    private org.w3.www._1998.Math.MathML.FunctionsType ident4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType and4;

    private org.w3.www._1998.Math.MathML.LogicType or4;

    private org.w3.www._1998.Math.MathML.LogicType xor4;

    private org.w3.www._1998.Math.MathML.LogicType not4;

    private org.w3.www._1998.Math.MathML.LogicType exists4;

    private org.w3.www._1998.Math.MathML.LogicType forall4;

    private org.w3.www._1998.Math.MathML.LogicType implies4;

    private org.w3.www._1998.Math.MathML.ConstantType naturalnumbers4;

    private org.w3.www._1998.Math.MathML.ConstantType primes4;

    private org.w3.www._1998.Math.MathML.ConstantType integers4;

    private org.w3.www._1998.Math.MathML.ConstantType rationals4;

    private org.w3.www._1998.Math.MathML.ConstantType reals4;

    private org.w3.www._1998.Math.MathML.ConstantType complexes4;

    private org.w3.www._1998.Math.MathML.ConstantType emptyset4;

    private org.w3.www._1998.Math.MathML.ConstantType exponentiale4;

    private org.w3.www._1998.Math.MathML.ConstantType imaginaryi4;

    private org.w3.www._1998.Math.MathML.ConstantType pi4;

    private org.w3.www._1998.Math.MathML.ConstantType eulergamma4;

    private org.w3.www._1998.Math.MathML.ConstantType _true4;

    private org.w3.www._1998.Math.MathML.ConstantType _false4;

    private org.w3.www._1998.Math.MathML.ConstantType infinity4;

    private org.w3.www._1998.Math.MathML.ConstantType notanumber4;

    private org.w3.www._1998.Math.MathML.SetType set4;

    private org.w3.www._1998.Math.MathML.ListType list4;

    private org.w3.www._1998.Math.MathML.UnionType union4;

    private org.w3.www._1998.Math.MathML.IntersectType intersect4;

    private org.w3.www._1998.Math.MathML.InType in4;

    private org.w3.www._1998.Math.MathML.NotinType notin4;

    private org.w3.www._1998.Math.MathML.SubsetType subset4;

    private org.w3.www._1998.Math.MathML.PrsubsetType prsubset4;

    private org.w3.www._1998.Math.MathML.NotsubsetType notsubset4;

    private org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset4;

    private org.w3.www._1998.Math.MathML.SetdiffType setdiff4;

    private org.w3.www._1998.Math.MathML.CardType card4;

    private org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct4;

    private org.w3.www._1998.Math.MathML.RelationsType eq4;

    private org.w3.www._1998.Math.MathML.RelationsType neq4;

    private org.w3.www._1998.Math.MathML.RelationsType leq4;

    private org.w3.www._1998.Math.MathML.RelationsType lt4;

    private org.w3.www._1998.Math.MathML.RelationsType geq4;

    private org.w3.www._1998.Math.MathML.RelationsType gt4;

    private org.w3.www._1998.Math.MathML.RelationsType equivalent4;

    private org.w3.www._1998.Math.MathML.RelationsType approx4;

    private org.w3.www._1998.Math.MathML.RelationsType factorof4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType log4;

    private org.w3.www._1998.Math.MathML.LogbaseType logbase4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh4;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh4;

    private org.w3.www._1998.Math.MathML.IntType _int4;

    private org.w3.www._1998.Math.MathML.DiffType diff4;

    private org.w3.www._1998.Math.MathML.PartialdiffType partialdiff4;

    private org.w3.www._1998.Math.MathML.LimitType limit4;

    private org.w3.www._1998.Math.MathML.LowlimitType lowlimit4;

    private org.w3.www._1998.Math.MathML.UplimitType uplimit4;

    private org.w3.www._1998.Math.MathML.TendstoType tendsto4;

    private org.w3.www._1998.Math.MathML.VectorType vector4;

    private org.w3.www._1998.Math.MathML.MatrixType matrix4;

    private org.w3.www._1998.Math.MathML.DeterminantType determinant4;

    private org.w3.www._1998.Math.MathML.TransposeType transpose4;

    private org.w3.www._1998.Math.MathML.SelectorType selector4;

    private org.w3.www._1998.Math.MathML.VectorproductType vectorproduct4;

    private org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct4;

    private org.w3.www._1998.Math.MathML.OuterproductType outerproduct4;

    private org.w3.www._1998.Math.MathML.DivergenceType divergence4;

    private org.w3.www._1998.Math.MathML.GradType grad4;

    private org.w3.www._1998.Math.MathML.CurlType curl4;

    private org.w3.www._1998.Math.MathML.LaplacianType laplacian4;

    private org.w3.www._1998.Math.MathML.MeanType mean4;

    private org.w3.www._1998.Math.MathML.SdevType sdev4;

    private org.w3.www._1998.Math.MathML.VarianceType variance4;

    private org.w3.www._1998.Math.MathML.MedianType median4;

    private org.w3.www._1998.Math.MathML.ModeType mode4;

    private org.w3.www._1998.Math.MathML.MomentType moment4;

    private org.w3.www._1998.Math.MathML.MomentaboutType momentabout4;

    private org.w3.www._1998.Math.MathML.ApplyType apply4;

    private org.w3.www._1998.Math.MathML.IntervalType interval4;

    private org.w3.www._1998.Math.MathML.InverseType inverse4;

    private org.w3.www._1998.Math.MathML.ConditionType condition4;

    private org.w3.www._1998.Math.MathML.DeclareType declare4;

    private org.w3.www._1998.Math.MathML.LambdaType lambda4;

    private org.w3.www._1998.Math.MathML.PiecewiseType piecewise4;

    private org.w3.www._1998.Math.MathML.BvarType bvar4;

    private org.w3.www._1998.Math.MathML.DegreeType degree4;

    private org.w3.www._1998.Math.MathML.SemanticsType semantics4;

    private org.w3.www._1998.Math.MathML.NoneType none3;

    private org.w3.www._1998.Math.MathML.MiType mi5;

    private org.w3.www._1998.Math.MathML.MoType mo5;

    private org.w3.www._1998.Math.MathML.MnType mn5;

    private org.w3.www._1998.Math.MathML.MtextType mtext5;

    private org.w3.www._1998.Math.MathML.MsType ms5;

    private org.w3.www._1998.Math.MathML.MrowType mrow5;

    private org.w3.www._1998.Math.MathML.MfracType mfrac5;

    private org.w3.www._1998.Math.MathML.MsqrtType msqrt5;

    private org.w3.www._1998.Math.MathML.MrootType mroot5;

    private org.w3.www._1998.Math.MathML.MpaddedType mpadded5;

    private org.w3.www._1998.Math.MathML.MphantomType mphantom5;

    private org.w3.www._1998.Math.MathML.MfencedType mfenced5;

    private org.w3.www._1998.Math.MathML.MencloseType menclose5;

    private org.w3.www._1998.Math.MathML.MsubType msub5;

    private org.w3.www._1998.Math.MathML.MsupType msup5;

    private org.w3.www._1998.Math.MathML.MsubsupType msubsup5;

    private org.w3.www._1998.Math.MathML.MunderType munder5;

    private org.w3.www._1998.Math.MathML.MoverType mover5;

    private org.w3.www._1998.Math.MathML.MunderoverType munderover5;

    private org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts5;

    private org.w3.www._1998.Math.MathML.MtableType mtable5;

    private org.w3.www._1998.Math.MathML.MaligngroupType maligngroup5;

    private org.w3.www._1998.Math.MathML.MalignmarkType malignmark5;

    private org.w3.www._1998.Math.MathML.MspaceType mspace5;

    private org.w3.www._1998.Math.MathML.MactionType maction5;

    private org.w3.www._1998.Math.MathML.MerrorType merror5;

    private org.w3.www._1998.Math.MathML.MstyleType mstyle5;

    private org.w3.www._1998.Math.MathML.CnType cn5;

    private org.w3.www._1998.Math.MathML.CiType ci5;

    private org.w3.www._1998.Math.MathML.CsymbolType csymbol5;

    private org.w3.www._1998.Math.MathML.ArithType abs5;

    private org.w3.www._1998.Math.MathML.ArithType conjugate5;

    private org.w3.www._1998.Math.MathML.ArithType factorial5;

    private org.w3.www._1998.Math.MathML.ArithType arg5;

    private org.w3.www._1998.Math.MathML.ArithType real5;

    private org.w3.www._1998.Math.MathML.ArithType imaginary5;

    private org.w3.www._1998.Math.MathML.ArithType floor5;

    private org.w3.www._1998.Math.MathML.ArithType ceiling5;

    private org.w3.www._1998.Math.MathML.ArithType quotient5;

    private org.w3.www._1998.Math.MathML.ArithType divide5;

    private org.w3.www._1998.Math.MathML.ArithType rem5;

    private org.w3.www._1998.Math.MathML.ArithType minus5;

    private org.w3.www._1998.Math.MathML.ArithType plus5;

    private org.w3.www._1998.Math.MathML.ArithType times5;

    private org.w3.www._1998.Math.MathML.ArithType power5;

    private org.w3.www._1998.Math.MathML.ArithType root5;

    private org.w3.www._1998.Math.MathML.ArithType max5;

    private org.w3.www._1998.Math.MathML.ArithType min5;

    private org.w3.www._1998.Math.MathML.ArithType gcd5;

    private org.w3.www._1998.Math.MathML.ArithType lcm5;

    private org.w3.www._1998.Math.MathML.ArithType sum5;

    private org.w3.www._1998.Math.MathML.ArithType product5;

    private org.w3.www._1998.Math.MathML.FunctionsType compose5;

    private org.w3.www._1998.Math.MathML.FunctionsType domain5;

    private org.w3.www._1998.Math.MathML.FunctionsType codomain5;

    private org.w3.www._1998.Math.MathML.FunctionsType image5;

    private org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication5;

    private org.w3.www._1998.Math.MathML.FunctionsType ident5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType and5;

    private org.w3.www._1998.Math.MathML.LogicType or5;

    private org.w3.www._1998.Math.MathML.LogicType xor5;

    private org.w3.www._1998.Math.MathML.LogicType not5;

    private org.w3.www._1998.Math.MathML.LogicType exists5;

    private org.w3.www._1998.Math.MathML.LogicType forall5;

    private org.w3.www._1998.Math.MathML.LogicType implies5;

    private org.w3.www._1998.Math.MathML.ConstantType naturalnumbers5;

    private org.w3.www._1998.Math.MathML.ConstantType primes5;

    private org.w3.www._1998.Math.MathML.ConstantType integers5;

    private org.w3.www._1998.Math.MathML.ConstantType rationals5;

    private org.w3.www._1998.Math.MathML.ConstantType reals5;

    private org.w3.www._1998.Math.MathML.ConstantType complexes5;

    private org.w3.www._1998.Math.MathML.ConstantType emptyset5;

    private org.w3.www._1998.Math.MathML.ConstantType exponentiale5;

    private org.w3.www._1998.Math.MathML.ConstantType imaginaryi5;

    private org.w3.www._1998.Math.MathML.ConstantType pi5;

    private org.w3.www._1998.Math.MathML.ConstantType eulergamma5;

    private org.w3.www._1998.Math.MathML.ConstantType _true5;

    private org.w3.www._1998.Math.MathML.ConstantType _false5;

    private org.w3.www._1998.Math.MathML.ConstantType infinity5;

    private org.w3.www._1998.Math.MathML.ConstantType notanumber5;

    private org.w3.www._1998.Math.MathML.SetType set5;

    private org.w3.www._1998.Math.MathML.ListType list5;

    private org.w3.www._1998.Math.MathML.UnionType union5;

    private org.w3.www._1998.Math.MathML.IntersectType intersect5;

    private org.w3.www._1998.Math.MathML.InType in5;

    private org.w3.www._1998.Math.MathML.NotinType notin5;

    private org.w3.www._1998.Math.MathML.SubsetType subset5;

    private org.w3.www._1998.Math.MathML.PrsubsetType prsubset5;

    private org.w3.www._1998.Math.MathML.NotsubsetType notsubset5;

    private org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset5;

    private org.w3.www._1998.Math.MathML.SetdiffType setdiff5;

    private org.w3.www._1998.Math.MathML.CardType card5;

    private org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct5;

    private org.w3.www._1998.Math.MathML.RelationsType eq5;

    private org.w3.www._1998.Math.MathML.RelationsType neq5;

    private org.w3.www._1998.Math.MathML.RelationsType leq5;

    private org.w3.www._1998.Math.MathML.RelationsType lt5;

    private org.w3.www._1998.Math.MathML.RelationsType geq5;

    private org.w3.www._1998.Math.MathML.RelationsType gt5;

    private org.w3.www._1998.Math.MathML.RelationsType equivalent5;

    private org.w3.www._1998.Math.MathML.RelationsType approx5;

    private org.w3.www._1998.Math.MathML.RelationsType factorof5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType log5;

    private org.w3.www._1998.Math.MathML.LogbaseType logbase5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh5;

    private org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh5;

    private org.w3.www._1998.Math.MathML.IntType _int5;

    private org.w3.www._1998.Math.MathML.DiffType diff5;

    private org.w3.www._1998.Math.MathML.PartialdiffType partialdiff5;

    private org.w3.www._1998.Math.MathML.LimitType limit5;

    private org.w3.www._1998.Math.MathML.LowlimitType lowlimit5;

    private org.w3.www._1998.Math.MathML.UplimitType uplimit5;

    private org.w3.www._1998.Math.MathML.TendstoType tendsto5;

    private org.w3.www._1998.Math.MathML.VectorType vector5;

    private org.w3.www._1998.Math.MathML.MatrixType matrix5;

    private org.w3.www._1998.Math.MathML.DeterminantType determinant5;

    private org.w3.www._1998.Math.MathML.TransposeType transpose5;

    private org.w3.www._1998.Math.MathML.SelectorType selector5;

    private org.w3.www._1998.Math.MathML.VectorproductType vectorproduct5;

    private org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct5;

    private org.w3.www._1998.Math.MathML.OuterproductType outerproduct5;

    private org.w3.www._1998.Math.MathML.DivergenceType divergence5;

    private org.w3.www._1998.Math.MathML.GradType grad5;

    private org.w3.www._1998.Math.MathML.CurlType curl5;

    private org.w3.www._1998.Math.MathML.LaplacianType laplacian5;

    private org.w3.www._1998.Math.MathML.MeanType mean5;

    private org.w3.www._1998.Math.MathML.SdevType sdev5;

    private org.w3.www._1998.Math.MathML.VarianceType variance5;

    private org.w3.www._1998.Math.MathML.MedianType median5;

    private org.w3.www._1998.Math.MathML.ModeType mode5;

    private org.w3.www._1998.Math.MathML.MomentType moment5;

    private org.w3.www._1998.Math.MathML.MomentaboutType momentabout5;

    private org.w3.www._1998.Math.MathML.ApplyType apply5;

    private org.w3.www._1998.Math.MathML.IntervalType interval5;

    private org.w3.www._1998.Math.MathML.InverseType inverse5;

    private org.w3.www._1998.Math.MathML.ConditionType condition5;

    private org.w3.www._1998.Math.MathML.DeclareType declare5;

    private org.w3.www._1998.Math.MathML.LambdaType lambda5;

    private org.w3.www._1998.Math.MathML.PiecewiseType piecewise5;

    private org.w3.www._1998.Math.MathML.BvarType bvar5;

    private org.w3.www._1998.Math.MathML.DegreeType degree5;

    private org.w3.www._1998.Math.MathML.SemanticsType semantics5;

    private org.w3.www._1998.Math.MathML.NoneType none4;

    private org.apache.axis.types.NMTokens _class;  // attribute

    private java.lang.String style;  // attribute

    private org.apache.axis.types.IDRef xref;  // attribute

    private org.apache.axis.types.Id id;  // attribute

    private java.lang.Object href;  // attribute

    public MmultiscriptsType() {
    }

    public MmultiscriptsType(MmultiscriptsType o) {
           this.mi = o.mi;
           this.mo = o.mo;
           this.mn = o.mn;
           this.mtext = o.mtext;
           this.ms = o.ms;
           this.mrow = o.mrow;
           this.mfrac = o.mfrac;
           this.msqrt = o.msqrt;
           this.mroot = o.mroot;
           this.mpadded = o.mpadded;
           this.mphantom = o.mphantom;
           this.mfenced = o.mfenced;
           this.menclose = o.menclose;
           this.msub = o.msub;
           this.msup = o.msup;
           this.msubsup = o.msubsup;
           this.munder = o.munder;
           this.mover = o.mover;
           this.munderover = o.munderover;
           this.mmultiscripts = o.mmultiscripts;
           this.mtable = o.mtable;
           this.maligngroup = o.maligngroup;
           this.malignmark = o.malignmark;
           this.mspace = o.mspace;
           this.maction = o.maction;
           this.merror = o.merror;
           this.mstyle = o.mstyle;
           this.cn = o.cn;
           this.ci = o.ci;
           this.csymbol = o.csymbol;
           this.abs = o.abs;
           this.conjugate = o.conjugate;
           this.factorial = o.factorial;
           this.arg = o.arg;
           this.real = o.real;
           this.imaginary = o.imaginary;
           this.floor = o.floor;
           this.ceiling = o.ceiling;
           this.quotient = o.quotient;
           this.divide = o.divide;
           this.rem = o.rem;
           this.minus = o.minus;
           this.plus = o.plus;
           this.times = o.times;
           this.power = o.power;
           this.root = o.root;
           this.max = o.max;
           this.min = o.min;
           this.gcd = o.gcd;
           this.lcm = o.lcm;
           this.sum = o.sum;
           this.product = o.product;
           this.compose = o.compose;
           this.domain = o.domain;
           this.codomain = o.codomain;
           this.image = o.image;
           this.domainofapplication = o.domainofapplication;
           this.ident = o.ident;
           this.and = o.and;
           this.or = o.or;
           this.xor = o.xor;
           this.not = o.not;
           this.exists = o.exists;
           this.forall = o.forall;
           this.implies = o.implies;
           this.naturalnumbers = o.naturalnumbers;
           this.primes = o.primes;
           this.integers = o.integers;
           this.rationals = o.rationals;
           this.reals = o.reals;
           this.complexes = o.complexes;
           this.emptyset = o.emptyset;
           this.exponentiale = o.exponentiale;
           this.imaginaryi = o.imaginaryi;
           this.pi = o.pi;
           this.eulergamma = o.eulergamma;
           this._true = o._true;
           this._false = o._false;
           this.infinity = o.infinity;
           this.notanumber = o.notanumber;
           this.set = o.set;
           this.list = o.list;
           this.union = o.union;
           this.intersect = o.intersect;
           this.in = o.in;
           this.notin = o.notin;
           this.subset = o.subset;
           this.prsubset = o.prsubset;
           this.notsubset = o.notsubset;
           this.notprsubset = o.notprsubset;
           this.setdiff = o.setdiff;
           this.card = o.card;
           this.cartesianproduct = o.cartesianproduct;
           this.eq = o.eq;
           this.neq = o.neq;
           this.leq = o.leq;
           this.lt = o.lt;
           this.geq = o.geq;
           this.gt = o.gt;
           this.equivalent = o.equivalent;
           this.approx = o.approx;
           this.factorof = o.factorof;
           this.exp = o.exp;
           this.ln = o.ln;
           this.log = o.log;
           this.logbase = o.logbase;
           this.sin = o.sin;
           this.cos = o.cos;
           this.tan = o.tan;
           this.sec = o.sec;
           this.csc = o.csc;
           this.cot = o.cot;
           this.arcsin = o.arcsin;
           this.arccos = o.arccos;
           this.arctan = o.arctan;
           this.arcsec = o.arcsec;
           this.arccsc = o.arccsc;
           this.arccot = o.arccot;
           this.sinh = o.sinh;
           this.cosh = o.cosh;
           this.tanh = o.tanh;
           this.sech = o.sech;
           this.csch = o.csch;
           this.coth = o.coth;
           this.arccosh = o.arccosh;
           this.arccoth = o.arccoth;
           this.arccsch = o.arccsch;
           this.arcsech = o.arcsech;
           this.arcsinh = o.arcsinh;
           this.arctanh = o.arctanh;
           this._int = o._int;
           this.diff = o.diff;
           this.partialdiff = o.partialdiff;
           this.limit = o.limit;
           this.lowlimit = o.lowlimit;
           this.uplimit = o.uplimit;
           this.tendsto = o.tendsto;
           this.vector = o.vector;
           this.matrix = o.matrix;
           this.determinant = o.determinant;
           this.transpose = o.transpose;
           this.selector = o.selector;
           this.vectorproduct = o.vectorproduct;
           this.scalarproduct = o.scalarproduct;
           this.outerproduct = o.outerproduct;
           this.divergence = o.divergence;
           this.grad = o.grad;
           this.curl = o.curl;
           this.laplacian = o.laplacian;
           this.mean = o.mean;
           this.sdev = o.sdev;
           this.variance = o.variance;
           this.median = o.median;
           this.mode = o.mode;
           this.moment = o.moment;
           this.momentabout = o.momentabout;
           this.apply = o.apply;
           this.interval = o.interval;
           this.inverse = o.inverse;
           this.condition = o.condition;
           this.declare = o.declare;
           this.lambda = o.lambda;
           this.piecewise = o.piecewise;
           this.bvar = o.bvar;
           this.degree = o.degree;
           this.semantics = o.semantics;
           this.mi2 = o.mi2;
           this.mo2 = o.mo2;
           this.mn2 = o.mn2;
           this.mtext2 = o.mtext2;
           this.ms2 = o.ms2;
           this.mrow2 = o.mrow2;
           this.mfrac2 = o.mfrac2;
           this.msqrt2 = o.msqrt2;
           this.mroot2 = o.mroot2;
           this.mpadded2 = o.mpadded2;
           this.mphantom2 = o.mphantom2;
           this.mfenced2 = o.mfenced2;
           this.menclose2 = o.menclose2;
           this.msub2 = o.msub2;
           this.msup2 = o.msup2;
           this.msubsup2 = o.msubsup2;
           this.munder2 = o.munder2;
           this.mover2 = o.mover2;
           this.munderover2 = o.munderover2;
           this.mmultiscripts2 = o.mmultiscripts2;
           this.mtable2 = o.mtable2;
           this.maligngroup2 = o.maligngroup2;
           this.malignmark2 = o.malignmark2;
           this.mspace2 = o.mspace2;
           this.maction2 = o.maction2;
           this.merror2 = o.merror2;
           this.mstyle2 = o.mstyle2;
           this.cn2 = o.cn2;
           this.ci2 = o.ci2;
           this.csymbol2 = o.csymbol2;
           this.abs2 = o.abs2;
           this.conjugate2 = o.conjugate2;
           this.factorial2 = o.factorial2;
           this.arg2 = o.arg2;
           this.real2 = o.real2;
           this.imaginary2 = o.imaginary2;
           this.floor2 = o.floor2;
           this.ceiling2 = o.ceiling2;
           this.quotient2 = o.quotient2;
           this.divide2 = o.divide2;
           this.rem2 = o.rem2;
           this.minus2 = o.minus2;
           this.plus2 = o.plus2;
           this.times2 = o.times2;
           this.power2 = o.power2;
           this.root2 = o.root2;
           this.max2 = o.max2;
           this.min2 = o.min2;
           this.gcd2 = o.gcd2;
           this.lcm2 = o.lcm2;
           this.sum2 = o.sum2;
           this.product2 = o.product2;
           this.compose2 = o.compose2;
           this.domain2 = o.domain2;
           this.codomain2 = o.codomain2;
           this.image2 = o.image2;
           this.domainofapplication2 = o.domainofapplication2;
           this.ident2 = o.ident2;
           this.and2 = o.and2;
           this.or2 = o.or2;
           this.xor2 = o.xor2;
           this.not2 = o.not2;
           this.exists2 = o.exists2;
           this.forall2 = o.forall2;
           this.implies2 = o.implies2;
           this.naturalnumbers2 = o.naturalnumbers2;
           this.primes2 = o.primes2;
           this.integers2 = o.integers2;
           this.rationals2 = o.rationals2;
           this.reals2 = o.reals2;
           this.complexes2 = o.complexes2;
           this.emptyset2 = o.emptyset2;
           this.exponentiale2 = o.exponentiale2;
           this.imaginaryi2 = o.imaginaryi2;
           this.pi2 = o.pi2;
           this.eulergamma2 = o.eulergamma2;
           this._true2 = o._true2;
           this._false2 = o._false2;
           this.infinity2 = o.infinity2;
           this.notanumber2 = o.notanumber2;
           this.set2 = o.set2;
           this.list2 = o.list2;
           this.union2 = o.union2;
           this.intersect2 = o.intersect2;
           this.in2 = o.in2;
           this.notin2 = o.notin2;
           this.subset2 = o.subset2;
           this.prsubset2 = o.prsubset2;
           this.notsubset2 = o.notsubset2;
           this.notprsubset2 = o.notprsubset2;
           this.setdiff2 = o.setdiff2;
           this.card2 = o.card2;
           this.cartesianproduct2 = o.cartesianproduct2;
           this.eq2 = o.eq2;
           this.neq2 = o.neq2;
           this.leq2 = o.leq2;
           this.lt2 = o.lt2;
           this.geq2 = o.geq2;
           this.gt2 = o.gt2;
           this.equivalent2 = o.equivalent2;
           this.approx2 = o.approx2;
           this.factorof2 = o.factorof2;
           this.exp2 = o.exp2;
           this.ln2 = o.ln2;
           this.log2 = o.log2;
           this.logbase2 = o.logbase2;
           this.sin2 = o.sin2;
           this.cos2 = o.cos2;
           this.tan2 = o.tan2;
           this.sec2 = o.sec2;
           this.csc2 = o.csc2;
           this.cot2 = o.cot2;
           this.arcsin2 = o.arcsin2;
           this.arccos2 = o.arccos2;
           this.arctan2 = o.arctan2;
           this.arcsec2 = o.arcsec2;
           this.arccsc2 = o.arccsc2;
           this.arccot2 = o.arccot2;
           this.sinh2 = o.sinh2;
           this.cosh2 = o.cosh2;
           this.tanh2 = o.tanh2;
           this.sech2 = o.sech2;
           this.csch2 = o.csch2;
           this.coth2 = o.coth2;
           this.arccosh2 = o.arccosh2;
           this.arccoth2 = o.arccoth2;
           this.arccsch2 = o.arccsch2;
           this.arcsech2 = o.arcsech2;
           this.arcsinh2 = o.arcsinh2;
           this.arctanh2 = o.arctanh2;
           this._int2 = o._int2;
           this.diff2 = o.diff2;
           this.partialdiff2 = o.partialdiff2;
           this.limit2 = o.limit2;
           this.lowlimit2 = o.lowlimit2;
           this.uplimit2 = o.uplimit2;
           this.tendsto2 = o.tendsto2;
           this.vector2 = o.vector2;
           this.matrix2 = o.matrix2;
           this.determinant2 = o.determinant2;
           this.transpose2 = o.transpose2;
           this.selector2 = o.selector2;
           this.vectorproduct2 = o.vectorproduct2;
           this.scalarproduct2 = o.scalarproduct2;
           this.outerproduct2 = o.outerproduct2;
           this.divergence2 = o.divergence2;
           this.grad2 = o.grad2;
           this.curl2 = o.curl2;
           this.laplacian2 = o.laplacian2;
           this.mean2 = o.mean2;
           this.sdev2 = o.sdev2;
           this.variance2 = o.variance2;
           this.median2 = o.median2;
           this.mode2 = o.mode2;
           this.moment2 = o.moment2;
           this.momentabout2 = o.momentabout2;
           this.apply2 = o.apply2;
           this.interval2 = o.interval2;
           this.inverse2 = o.inverse2;
           this.condition2 = o.condition2;
           this.declare2 = o.declare2;
           this.lambda2 = o.lambda2;
           this.piecewise2 = o.piecewise2;
           this.bvar2 = o.bvar2;
           this.degree2 = o.degree2;
           this.semantics2 = o.semantics2;
           this.none = o.none;
           this.mi3 = o.mi3;
           this.mo3 = o.mo3;
           this.mn3 = o.mn3;
           this.mtext3 = o.mtext3;
           this.ms3 = o.ms3;
           this.mrow3 = o.mrow3;
           this.mfrac3 = o.mfrac3;
           this.msqrt3 = o.msqrt3;
           this.mroot3 = o.mroot3;
           this.mpadded3 = o.mpadded3;
           this.mphantom3 = o.mphantom3;
           this.mfenced3 = o.mfenced3;
           this.menclose3 = o.menclose3;
           this.msub3 = o.msub3;
           this.msup3 = o.msup3;
           this.msubsup3 = o.msubsup3;
           this.munder3 = o.munder3;
           this.mover3 = o.mover3;
           this.munderover3 = o.munderover3;
           this.mmultiscripts3 = o.mmultiscripts3;
           this.mtable3 = o.mtable3;
           this.maligngroup3 = o.maligngroup3;
           this.malignmark3 = o.malignmark3;
           this.mspace3 = o.mspace3;
           this.maction3 = o.maction3;
           this.merror3 = o.merror3;
           this.mstyle3 = o.mstyle3;
           this.cn3 = o.cn3;
           this.ci3 = o.ci3;
           this.csymbol3 = o.csymbol3;
           this.abs3 = o.abs3;
           this.conjugate3 = o.conjugate3;
           this.factorial3 = o.factorial3;
           this.arg3 = o.arg3;
           this.real3 = o.real3;
           this.imaginary3 = o.imaginary3;
           this.floor3 = o.floor3;
           this.ceiling3 = o.ceiling3;
           this.quotient3 = o.quotient3;
           this.divide3 = o.divide3;
           this.rem3 = o.rem3;
           this.minus3 = o.minus3;
           this.plus3 = o.plus3;
           this.times3 = o.times3;
           this.power3 = o.power3;
           this.root3 = o.root3;
           this.max3 = o.max3;
           this.min3 = o.min3;
           this.gcd3 = o.gcd3;
           this.lcm3 = o.lcm3;
           this.sum3 = o.sum3;
           this.product3 = o.product3;
           this.compose3 = o.compose3;
           this.domain3 = o.domain3;
           this.codomain3 = o.codomain3;
           this.image3 = o.image3;
           this.domainofapplication3 = o.domainofapplication3;
           this.ident3 = o.ident3;
           this.and3 = o.and3;
           this.or3 = o.or3;
           this.xor3 = o.xor3;
           this.not3 = o.not3;
           this.exists3 = o.exists3;
           this.forall3 = o.forall3;
           this.implies3 = o.implies3;
           this.naturalnumbers3 = o.naturalnumbers3;
           this.primes3 = o.primes3;
           this.integers3 = o.integers3;
           this.rationals3 = o.rationals3;
           this.reals3 = o.reals3;
           this.complexes3 = o.complexes3;
           this.emptyset3 = o.emptyset3;
           this.exponentiale3 = o.exponentiale3;
           this.imaginaryi3 = o.imaginaryi3;
           this.pi3 = o.pi3;
           this.eulergamma3 = o.eulergamma3;
           this._true3 = o._true3;
           this._false3 = o._false3;
           this.infinity3 = o.infinity3;
           this.notanumber3 = o.notanumber3;
           this.set3 = o.set3;
           this.list3 = o.list3;
           this.union3 = o.union3;
           this.intersect3 = o.intersect3;
           this.in3 = o.in3;
           this.notin3 = o.notin3;
           this.subset3 = o.subset3;
           this.prsubset3 = o.prsubset3;
           this.notsubset3 = o.notsubset3;
           this.notprsubset3 = o.notprsubset3;
           this.setdiff3 = o.setdiff3;
           this.card3 = o.card3;
           this.cartesianproduct3 = o.cartesianproduct3;
           this.eq3 = o.eq3;
           this.neq3 = o.neq3;
           this.leq3 = o.leq3;
           this.lt3 = o.lt3;
           this.geq3 = o.geq3;
           this.gt3 = o.gt3;
           this.equivalent3 = o.equivalent3;
           this.approx3 = o.approx3;
           this.factorof3 = o.factorof3;
           this.exp3 = o.exp3;
           this.ln3 = o.ln3;
           this.log3 = o.log3;
           this.logbase3 = o.logbase3;
           this.sin3 = o.sin3;
           this.cos3 = o.cos3;
           this.tan3 = o.tan3;
           this.sec3 = o.sec3;
           this.csc3 = o.csc3;
           this.cot3 = o.cot3;
           this.arcsin3 = o.arcsin3;
           this.arccos3 = o.arccos3;
           this.arctan3 = o.arctan3;
           this.arcsec3 = o.arcsec3;
           this.arccsc3 = o.arccsc3;
           this.arccot3 = o.arccot3;
           this.sinh3 = o.sinh3;
           this.cosh3 = o.cosh3;
           this.tanh3 = o.tanh3;
           this.sech3 = o.sech3;
           this.csch3 = o.csch3;
           this.coth3 = o.coth3;
           this.arccosh3 = o.arccosh3;
           this.arccoth3 = o.arccoth3;
           this.arccsch3 = o.arccsch3;
           this.arcsech3 = o.arcsech3;
           this.arcsinh3 = o.arcsinh3;
           this.arctanh3 = o.arctanh3;
           this._int3 = o._int3;
           this.diff3 = o.diff3;
           this.partialdiff3 = o.partialdiff3;
           this.limit3 = o.limit3;
           this.lowlimit3 = o.lowlimit3;
           this.uplimit3 = o.uplimit3;
           this.tendsto3 = o.tendsto3;
           this.vector3 = o.vector3;
           this.matrix3 = o.matrix3;
           this.determinant3 = o.determinant3;
           this.transpose3 = o.transpose3;
           this.selector3 = o.selector3;
           this.vectorproduct3 = o.vectorproduct3;
           this.scalarproduct3 = o.scalarproduct3;
           this.outerproduct3 = o.outerproduct3;
           this.divergence3 = o.divergence3;
           this.grad3 = o.grad3;
           this.curl3 = o.curl3;
           this.laplacian3 = o.laplacian3;
           this.mean3 = o.mean3;
           this.sdev3 = o.sdev3;
           this.variance3 = o.variance3;
           this.median3 = o.median3;
           this.mode3 = o.mode3;
           this.moment3 = o.moment3;
           this.momentabout3 = o.momentabout3;
           this.apply3 = o.apply3;
           this.interval3 = o.interval3;
           this.inverse3 = o.inverse3;
           this.condition3 = o.condition3;
           this.declare3 = o.declare3;
           this.lambda3 = o.lambda3;
           this.piecewise3 = o.piecewise3;
           this.bvar3 = o.bvar3;
           this.degree3 = o.degree3;
           this.semantics3 = o.semantics3;
           this.none2 = o.none2;
           this.mprescripts = o.mprescripts;
           this.mi4 = o.mi4;
           this.mo4 = o.mo4;
           this.mn4 = o.mn4;
           this.mtext4 = o.mtext4;
           this.ms4 = o.ms4;
           this.mrow4 = o.mrow4;
           this.mfrac4 = o.mfrac4;
           this.msqrt4 = o.msqrt4;
           this.mroot4 = o.mroot4;
           this.mpadded4 = o.mpadded4;
           this.mphantom4 = o.mphantom4;
           this.mfenced4 = o.mfenced4;
           this.menclose4 = o.menclose4;
           this.msub4 = o.msub4;
           this.msup4 = o.msup4;
           this.msubsup4 = o.msubsup4;
           this.munder4 = o.munder4;
           this.mover4 = o.mover4;
           this.munderover4 = o.munderover4;
           this.mmultiscripts4 = o.mmultiscripts4;
           this.mtable4 = o.mtable4;
           this.maligngroup4 = o.maligngroup4;
           this.malignmark4 = o.malignmark4;
           this.mspace4 = o.mspace4;
           this.maction4 = o.maction4;
           this.merror4 = o.merror4;
           this.mstyle4 = o.mstyle4;
           this.cn4 = o.cn4;
           this.ci4 = o.ci4;
           this.csymbol4 = o.csymbol4;
           this.abs4 = o.abs4;
           this.conjugate4 = o.conjugate4;
           this.factorial4 = o.factorial4;
           this.arg4 = o.arg4;
           this.real4 = o.real4;
           this.imaginary4 = o.imaginary4;
           this.floor4 = o.floor4;
           this.ceiling4 = o.ceiling4;
           this.quotient4 = o.quotient4;
           this.divide4 = o.divide4;
           this.rem4 = o.rem4;
           this.minus4 = o.minus4;
           this.plus4 = o.plus4;
           this.times4 = o.times4;
           this.power4 = o.power4;
           this.root4 = o.root4;
           this.max4 = o.max4;
           this.min4 = o.min4;
           this.gcd4 = o.gcd4;
           this.lcm4 = o.lcm4;
           this.sum4 = o.sum4;
           this.product4 = o.product4;
           this.compose4 = o.compose4;
           this.domain4 = o.domain4;
           this.codomain4 = o.codomain4;
           this.image4 = o.image4;
           this.domainofapplication4 = o.domainofapplication4;
           this.ident4 = o.ident4;
           this.and4 = o.and4;
           this.or4 = o.or4;
           this.xor4 = o.xor4;
           this.not4 = o.not4;
           this.exists4 = o.exists4;
           this.forall4 = o.forall4;
           this.implies4 = o.implies4;
           this.naturalnumbers4 = o.naturalnumbers4;
           this.primes4 = o.primes4;
           this.integers4 = o.integers4;
           this.rationals4 = o.rationals4;
           this.reals4 = o.reals4;
           this.complexes4 = o.complexes4;
           this.emptyset4 = o.emptyset4;
           this.exponentiale4 = o.exponentiale4;
           this.imaginaryi4 = o.imaginaryi4;
           this.pi4 = o.pi4;
           this.eulergamma4 = o.eulergamma4;
           this._true4 = o._true4;
           this._false4 = o._false4;
           this.infinity4 = o.infinity4;
           this.notanumber4 = o.notanumber4;
           this.set4 = o.set4;
           this.list4 = o.list4;
           this.union4 = o.union4;
           this.intersect4 = o.intersect4;
           this.in4 = o.in4;
           this.notin4 = o.notin4;
           this.subset4 = o.subset4;
           this.prsubset4 = o.prsubset4;
           this.notsubset4 = o.notsubset4;
           this.notprsubset4 = o.notprsubset4;
           this.setdiff4 = o.setdiff4;
           this.card4 = o.card4;
           this.cartesianproduct4 = o.cartesianproduct4;
           this.eq4 = o.eq4;
           this.neq4 = o.neq4;
           this.leq4 = o.leq4;
           this.lt4 = o.lt4;
           this.geq4 = o.geq4;
           this.gt4 = o.gt4;
           this.equivalent4 = o.equivalent4;
           this.approx4 = o.approx4;
           this.factorof4 = o.factorof4;
           this.exp4 = o.exp4;
           this.ln4 = o.ln4;
           this.log4 = o.log4;
           this.logbase4 = o.logbase4;
           this.sin4 = o.sin4;
           this.cos4 = o.cos4;
           this.tan4 = o.tan4;
           this.sec4 = o.sec4;
           this.csc4 = o.csc4;
           this.cot4 = o.cot4;
           this.arcsin4 = o.arcsin4;
           this.arccos4 = o.arccos4;
           this.arctan4 = o.arctan4;
           this.arcsec4 = o.arcsec4;
           this.arccsc4 = o.arccsc4;
           this.arccot4 = o.arccot4;
           this.sinh4 = o.sinh4;
           this.cosh4 = o.cosh4;
           this.tanh4 = o.tanh4;
           this.sech4 = o.sech4;
           this.csch4 = o.csch4;
           this.coth4 = o.coth4;
           this.arccosh4 = o.arccosh4;
           this.arccoth4 = o.arccoth4;
           this.arccsch4 = o.arccsch4;
           this.arcsech4 = o.arcsech4;
           this.arcsinh4 = o.arcsinh4;
           this.arctanh4 = o.arctanh4;
           this._int4 = o._int4;
           this.diff4 = o.diff4;
           this.partialdiff4 = o.partialdiff4;
           this.limit4 = o.limit4;
           this.lowlimit4 = o.lowlimit4;
           this.uplimit4 = o.uplimit4;
           this.tendsto4 = o.tendsto4;
           this.vector4 = o.vector4;
           this.matrix4 = o.matrix4;
           this.determinant4 = o.determinant4;
           this.transpose4 = o.transpose4;
           this.selector4 = o.selector4;
           this.vectorproduct4 = o.vectorproduct4;
           this.scalarproduct4 = o.scalarproduct4;
           this.outerproduct4 = o.outerproduct4;
           this.divergence4 = o.divergence4;
           this.grad4 = o.grad4;
           this.curl4 = o.curl4;
           this.laplacian4 = o.laplacian4;
           this.mean4 = o.mean4;
           this.sdev4 = o.sdev4;
           this.variance4 = o.variance4;
           this.median4 = o.median4;
           this.mode4 = o.mode4;
           this.moment4 = o.moment4;
           this.momentabout4 = o.momentabout4;
           this.apply4 = o.apply4;
           this.interval4 = o.interval4;
           this.inverse4 = o.inverse4;
           this.condition4 = o.condition4;
           this.declare4 = o.declare4;
           this.lambda4 = o.lambda4;
           this.piecewise4 = o.piecewise4;
           this.bvar4 = o.bvar4;
           this.degree4 = o.degree4;
           this.semantics4 = o.semantics4;
           this.none3 = o.none3;
           this.mi5 = o.mi5;
           this.mo5 = o.mo5;
           this.mn5 = o.mn5;
           this.mtext5 = o.mtext5;
           this.ms5 = o.ms5;
           this.mrow5 = o.mrow5;
           this.mfrac5 = o.mfrac5;
           this.msqrt5 = o.msqrt5;
           this.mroot5 = o.mroot5;
           this.mpadded5 = o.mpadded5;
           this.mphantom5 = o.mphantom5;
           this.mfenced5 = o.mfenced5;
           this.menclose5 = o.menclose5;
           this.msub5 = o.msub5;
           this.msup5 = o.msup5;
           this.msubsup5 = o.msubsup5;
           this.munder5 = o.munder5;
           this.mover5 = o.mover5;
           this.munderover5 = o.munderover5;
           this.mmultiscripts5 = o.mmultiscripts5;
           this.mtable5 = o.mtable5;
           this.maligngroup5 = o.maligngroup5;
           this.malignmark5 = o.malignmark5;
           this.mspace5 = o.mspace5;
           this.maction5 = o.maction5;
           this.merror5 = o.merror5;
           this.mstyle5 = o.mstyle5;
           this.cn5 = o.cn5;
           this.ci5 = o.ci5;
           this.csymbol5 = o.csymbol5;
           this.abs5 = o.abs5;
           this.conjugate5 = o.conjugate5;
           this.factorial5 = o.factorial5;
           this.arg5 = o.arg5;
           this.real5 = o.real5;
           this.imaginary5 = o.imaginary5;
           this.floor5 = o.floor5;
           this.ceiling5 = o.ceiling5;
           this.quotient5 = o.quotient5;
           this.divide5 = o.divide5;
           this.rem5 = o.rem5;
           this.minus5 = o.minus5;
           this.plus5 = o.plus5;
           this.times5 = o.times5;
           this.power5 = o.power5;
           this.root5 = o.root5;
           this.max5 = o.max5;
           this.min5 = o.min5;
           this.gcd5 = o.gcd5;
           this.lcm5 = o.lcm5;
           this.sum5 = o.sum5;
           this.product5 = o.product5;
           this.compose5 = o.compose5;
           this.domain5 = o.domain5;
           this.codomain5 = o.codomain5;
           this.image5 = o.image5;
           this.domainofapplication5 = o.domainofapplication5;
           this.ident5 = o.ident5;
           this.and5 = o.and5;
           this.or5 = o.or5;
           this.xor5 = o.xor5;
           this.not5 = o.not5;
           this.exists5 = o.exists5;
           this.forall5 = o.forall5;
           this.implies5 = o.implies5;
           this.naturalnumbers5 = o.naturalnumbers5;
           this.primes5 = o.primes5;
           this.integers5 = o.integers5;
           this.rationals5 = o.rationals5;
           this.reals5 = o.reals5;
           this.complexes5 = o.complexes5;
           this.emptyset5 = o.emptyset5;
           this.exponentiale5 = o.exponentiale5;
           this.imaginaryi5 = o.imaginaryi5;
           this.pi5 = o.pi5;
           this.eulergamma5 = o.eulergamma5;
           this._true5 = o._true5;
           this._false5 = o._false5;
           this.infinity5 = o.infinity5;
           this.notanumber5 = o.notanumber5;
           this.set5 = o.set5;
           this.list5 = o.list5;
           this.union5 = o.union5;
           this.intersect5 = o.intersect5;
           this.in5 = o.in5;
           this.notin5 = o.notin5;
           this.subset5 = o.subset5;
           this.prsubset5 = o.prsubset5;
           this.notsubset5 = o.notsubset5;
           this.notprsubset5 = o.notprsubset5;
           this.setdiff5 = o.setdiff5;
           this.card5 = o.card5;
           this.cartesianproduct5 = o.cartesianproduct5;
           this.eq5 = o.eq5;
           this.neq5 = o.neq5;
           this.leq5 = o.leq5;
           this.lt5 = o.lt5;
           this.geq5 = o.geq5;
           this.gt5 = o.gt5;
           this.equivalent5 = o.equivalent5;
           this.approx5 = o.approx5;
           this.factorof5 = o.factorof5;
           this.exp5 = o.exp5;
           this.ln5 = o.ln5;
           this.log5 = o.log5;
           this.logbase5 = o.logbase5;
           this.sin5 = o.sin5;
           this.cos5 = o.cos5;
           this.tan5 = o.tan5;
           this.sec5 = o.sec5;
           this.csc5 = o.csc5;
           this.cot5 = o.cot5;
           this.arcsin5 = o.arcsin5;
           this.arccos5 = o.arccos5;
           this.arctan5 = o.arctan5;
           this.arcsec5 = o.arcsec5;
           this.arccsc5 = o.arccsc5;
           this.arccot5 = o.arccot5;
           this.sinh5 = o.sinh5;
           this.cosh5 = o.cosh5;
           this.tanh5 = o.tanh5;
           this.sech5 = o.sech5;
           this.csch5 = o.csch5;
           this.coth5 = o.coth5;
           this.arccosh5 = o.arccosh5;
           this.arccoth5 = o.arccoth5;
           this.arccsch5 = o.arccsch5;
           this.arcsech5 = o.arcsech5;
           this.arcsinh5 = o.arcsinh5;
           this.arctanh5 = o.arctanh5;
           this._int5 = o._int5;
           this.diff5 = o.diff5;
           this.partialdiff5 = o.partialdiff5;
           this.limit5 = o.limit5;
           this.lowlimit5 = o.lowlimit5;
           this.uplimit5 = o.uplimit5;
           this.tendsto5 = o.tendsto5;
           this.vector5 = o.vector5;
           this.matrix5 = o.matrix5;
           this.determinant5 = o.determinant5;
           this.transpose5 = o.transpose5;
           this.selector5 = o.selector5;
           this.vectorproduct5 = o.vectorproduct5;
           this.scalarproduct5 = o.scalarproduct5;
           this.outerproduct5 = o.outerproduct5;
           this.divergence5 = o.divergence5;
           this.grad5 = o.grad5;
           this.curl5 = o.curl5;
           this.laplacian5 = o.laplacian5;
           this.mean5 = o.mean5;
           this.sdev5 = o.sdev5;
           this.variance5 = o.variance5;
           this.median5 = o.median5;
           this.mode5 = o.mode5;
           this.moment5 = o.moment5;
           this.momentabout5 = o.momentabout5;
           this.apply5 = o.apply5;
           this.interval5 = o.interval5;
           this.inverse5 = o.inverse5;
           this.condition5 = o.condition5;
           this.declare5 = o.declare5;
           this.lambda5 = o.lambda5;
           this.piecewise5 = o.piecewise5;
           this.bvar5 = o.bvar5;
           this.degree5 = o.degree5;
           this.semantics5 = o.semantics5;
           this.none4 = o.none4;
           this._class = o._class;
           this.style = o.style;
           this.xref = o.xref;
           this.id = o.id;
           this.href = o.href;
    }


    /**
     * Gets the mi value for this MmultiscriptsType.
     * 
     * @return mi
     */
    public org.w3.www._1998.Math.MathML.MiType getMi() {
        return mi;
    }


    /**
     * Sets the mi value for this MmultiscriptsType.
     * 
     * @param mi
     */
    public void setMi(org.w3.www._1998.Math.MathML.MiType mi) {
        this.mi = mi;
    }


    /**
     * Gets the mo value for this MmultiscriptsType.
     * 
     * @return mo
     */
    public org.w3.www._1998.Math.MathML.MoType getMo() {
        return mo;
    }


    /**
     * Sets the mo value for this MmultiscriptsType.
     * 
     * @param mo
     */
    public void setMo(org.w3.www._1998.Math.MathML.MoType mo) {
        this.mo = mo;
    }


    /**
     * Gets the mn value for this MmultiscriptsType.
     * 
     * @return mn
     */
    public org.w3.www._1998.Math.MathML.MnType getMn() {
        return mn;
    }


    /**
     * Sets the mn value for this MmultiscriptsType.
     * 
     * @param mn
     */
    public void setMn(org.w3.www._1998.Math.MathML.MnType mn) {
        this.mn = mn;
    }


    /**
     * Gets the mtext value for this MmultiscriptsType.
     * 
     * @return mtext
     */
    public org.w3.www._1998.Math.MathML.MtextType getMtext() {
        return mtext;
    }


    /**
     * Sets the mtext value for this MmultiscriptsType.
     * 
     * @param mtext
     */
    public void setMtext(org.w3.www._1998.Math.MathML.MtextType mtext) {
        this.mtext = mtext;
    }


    /**
     * Gets the ms value for this MmultiscriptsType.
     * 
     * @return ms
     */
    public org.w3.www._1998.Math.MathML.MsType getMs() {
        return ms;
    }


    /**
     * Sets the ms value for this MmultiscriptsType.
     * 
     * @param ms
     */
    public void setMs(org.w3.www._1998.Math.MathML.MsType ms) {
        this.ms = ms;
    }


    /**
     * Gets the mrow value for this MmultiscriptsType.
     * 
     * @return mrow
     */
    public org.w3.www._1998.Math.MathML.MrowType getMrow() {
        return mrow;
    }


    /**
     * Sets the mrow value for this MmultiscriptsType.
     * 
     * @param mrow
     */
    public void setMrow(org.w3.www._1998.Math.MathML.MrowType mrow) {
        this.mrow = mrow;
    }


    /**
     * Gets the mfrac value for this MmultiscriptsType.
     * 
     * @return mfrac
     */
    public org.w3.www._1998.Math.MathML.MfracType getMfrac() {
        return mfrac;
    }


    /**
     * Sets the mfrac value for this MmultiscriptsType.
     * 
     * @param mfrac
     */
    public void setMfrac(org.w3.www._1998.Math.MathML.MfracType mfrac) {
        this.mfrac = mfrac;
    }


    /**
     * Gets the msqrt value for this MmultiscriptsType.
     * 
     * @return msqrt
     */
    public org.w3.www._1998.Math.MathML.MsqrtType getMsqrt() {
        return msqrt;
    }


    /**
     * Sets the msqrt value for this MmultiscriptsType.
     * 
     * @param msqrt
     */
    public void setMsqrt(org.w3.www._1998.Math.MathML.MsqrtType msqrt) {
        this.msqrt = msqrt;
    }


    /**
     * Gets the mroot value for this MmultiscriptsType.
     * 
     * @return mroot
     */
    public org.w3.www._1998.Math.MathML.MrootType getMroot() {
        return mroot;
    }


    /**
     * Sets the mroot value for this MmultiscriptsType.
     * 
     * @param mroot
     */
    public void setMroot(org.w3.www._1998.Math.MathML.MrootType mroot) {
        this.mroot = mroot;
    }


    /**
     * Gets the mpadded value for this MmultiscriptsType.
     * 
     * @return mpadded
     */
    public org.w3.www._1998.Math.MathML.MpaddedType getMpadded() {
        return mpadded;
    }


    /**
     * Sets the mpadded value for this MmultiscriptsType.
     * 
     * @param mpadded
     */
    public void setMpadded(org.w3.www._1998.Math.MathML.MpaddedType mpadded) {
        this.mpadded = mpadded;
    }


    /**
     * Gets the mphantom value for this MmultiscriptsType.
     * 
     * @return mphantom
     */
    public org.w3.www._1998.Math.MathML.MphantomType getMphantom() {
        return mphantom;
    }


    /**
     * Sets the mphantom value for this MmultiscriptsType.
     * 
     * @param mphantom
     */
    public void setMphantom(org.w3.www._1998.Math.MathML.MphantomType mphantom) {
        this.mphantom = mphantom;
    }


    /**
     * Gets the mfenced value for this MmultiscriptsType.
     * 
     * @return mfenced
     */
    public org.w3.www._1998.Math.MathML.MfencedType getMfenced() {
        return mfenced;
    }


    /**
     * Sets the mfenced value for this MmultiscriptsType.
     * 
     * @param mfenced
     */
    public void setMfenced(org.w3.www._1998.Math.MathML.MfencedType mfenced) {
        this.mfenced = mfenced;
    }


    /**
     * Gets the menclose value for this MmultiscriptsType.
     * 
     * @return menclose
     */
    public org.w3.www._1998.Math.MathML.MencloseType getMenclose() {
        return menclose;
    }


    /**
     * Sets the menclose value for this MmultiscriptsType.
     * 
     * @param menclose
     */
    public void setMenclose(org.w3.www._1998.Math.MathML.MencloseType menclose) {
        this.menclose = menclose;
    }


    /**
     * Gets the msub value for this MmultiscriptsType.
     * 
     * @return msub
     */
    public org.w3.www._1998.Math.MathML.MsubType getMsub() {
        return msub;
    }


    /**
     * Sets the msub value for this MmultiscriptsType.
     * 
     * @param msub
     */
    public void setMsub(org.w3.www._1998.Math.MathML.MsubType msub) {
        this.msub = msub;
    }


    /**
     * Gets the msup value for this MmultiscriptsType.
     * 
     * @return msup
     */
    public org.w3.www._1998.Math.MathML.MsupType getMsup() {
        return msup;
    }


    /**
     * Sets the msup value for this MmultiscriptsType.
     * 
     * @param msup
     */
    public void setMsup(org.w3.www._1998.Math.MathML.MsupType msup) {
        this.msup = msup;
    }


    /**
     * Gets the msubsup value for this MmultiscriptsType.
     * 
     * @return msubsup
     */
    public org.w3.www._1998.Math.MathML.MsubsupType getMsubsup() {
        return msubsup;
    }


    /**
     * Sets the msubsup value for this MmultiscriptsType.
     * 
     * @param msubsup
     */
    public void setMsubsup(org.w3.www._1998.Math.MathML.MsubsupType msubsup) {
        this.msubsup = msubsup;
    }


    /**
     * Gets the munder value for this MmultiscriptsType.
     * 
     * @return munder
     */
    public org.w3.www._1998.Math.MathML.MunderType getMunder() {
        return munder;
    }


    /**
     * Sets the munder value for this MmultiscriptsType.
     * 
     * @param munder
     */
    public void setMunder(org.w3.www._1998.Math.MathML.MunderType munder) {
        this.munder = munder;
    }


    /**
     * Gets the mover value for this MmultiscriptsType.
     * 
     * @return mover
     */
    public org.w3.www._1998.Math.MathML.MoverType getMover() {
        return mover;
    }


    /**
     * Sets the mover value for this MmultiscriptsType.
     * 
     * @param mover
     */
    public void setMover(org.w3.www._1998.Math.MathML.MoverType mover) {
        this.mover = mover;
    }


    /**
     * Gets the munderover value for this MmultiscriptsType.
     * 
     * @return munderover
     */
    public org.w3.www._1998.Math.MathML.MunderoverType getMunderover() {
        return munderover;
    }


    /**
     * Sets the munderover value for this MmultiscriptsType.
     * 
     * @param munderover
     */
    public void setMunderover(org.w3.www._1998.Math.MathML.MunderoverType munderover) {
        this.munderover = munderover;
    }


    /**
     * Gets the mmultiscripts value for this MmultiscriptsType.
     * 
     * @return mmultiscripts
     */
    public org.w3.www._1998.Math.MathML.MmultiscriptsType getMmultiscripts() {
        return mmultiscripts;
    }


    /**
     * Sets the mmultiscripts value for this MmultiscriptsType.
     * 
     * @param mmultiscripts
     */
    public void setMmultiscripts(org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts) {
        this.mmultiscripts = mmultiscripts;
    }


    /**
     * Gets the mtable value for this MmultiscriptsType.
     * 
     * @return mtable
     */
    public org.w3.www._1998.Math.MathML.MtableType getMtable() {
        return mtable;
    }


    /**
     * Sets the mtable value for this MmultiscriptsType.
     * 
     * @param mtable
     */
    public void setMtable(org.w3.www._1998.Math.MathML.MtableType mtable) {
        this.mtable = mtable;
    }


    /**
     * Gets the maligngroup value for this MmultiscriptsType.
     * 
     * @return maligngroup
     */
    public org.w3.www._1998.Math.MathML.MaligngroupType getMaligngroup() {
        return maligngroup;
    }


    /**
     * Sets the maligngroup value for this MmultiscriptsType.
     * 
     * @param maligngroup
     */
    public void setMaligngroup(org.w3.www._1998.Math.MathML.MaligngroupType maligngroup) {
        this.maligngroup = maligngroup;
    }


    /**
     * Gets the malignmark value for this MmultiscriptsType.
     * 
     * @return malignmark
     */
    public org.w3.www._1998.Math.MathML.MalignmarkType getMalignmark() {
        return malignmark;
    }


    /**
     * Sets the malignmark value for this MmultiscriptsType.
     * 
     * @param malignmark
     */
    public void setMalignmark(org.w3.www._1998.Math.MathML.MalignmarkType malignmark) {
        this.malignmark = malignmark;
    }


    /**
     * Gets the mspace value for this MmultiscriptsType.
     * 
     * @return mspace
     */
    public org.w3.www._1998.Math.MathML.MspaceType getMspace() {
        return mspace;
    }


    /**
     * Sets the mspace value for this MmultiscriptsType.
     * 
     * @param mspace
     */
    public void setMspace(org.w3.www._1998.Math.MathML.MspaceType mspace) {
        this.mspace = mspace;
    }


    /**
     * Gets the maction value for this MmultiscriptsType.
     * 
     * @return maction
     */
    public org.w3.www._1998.Math.MathML.MactionType getMaction() {
        return maction;
    }


    /**
     * Sets the maction value for this MmultiscriptsType.
     * 
     * @param maction
     */
    public void setMaction(org.w3.www._1998.Math.MathML.MactionType maction) {
        this.maction = maction;
    }


    /**
     * Gets the merror value for this MmultiscriptsType.
     * 
     * @return merror
     */
    public org.w3.www._1998.Math.MathML.MerrorType getMerror() {
        return merror;
    }


    /**
     * Sets the merror value for this MmultiscriptsType.
     * 
     * @param merror
     */
    public void setMerror(org.w3.www._1998.Math.MathML.MerrorType merror) {
        this.merror = merror;
    }


    /**
     * Gets the mstyle value for this MmultiscriptsType.
     * 
     * @return mstyle
     */
    public org.w3.www._1998.Math.MathML.MstyleType getMstyle() {
        return mstyle;
    }


    /**
     * Sets the mstyle value for this MmultiscriptsType.
     * 
     * @param mstyle
     */
    public void setMstyle(org.w3.www._1998.Math.MathML.MstyleType mstyle) {
        this.mstyle = mstyle;
    }


    /**
     * Gets the cn value for this MmultiscriptsType.
     * 
     * @return cn
     */
    public org.w3.www._1998.Math.MathML.CnType getCn() {
        return cn;
    }


    /**
     * Sets the cn value for this MmultiscriptsType.
     * 
     * @param cn
     */
    public void setCn(org.w3.www._1998.Math.MathML.CnType cn) {
        this.cn = cn;
    }


    /**
     * Gets the ci value for this MmultiscriptsType.
     * 
     * @return ci
     */
    public org.w3.www._1998.Math.MathML.CiType getCi() {
        return ci;
    }


    /**
     * Sets the ci value for this MmultiscriptsType.
     * 
     * @param ci
     */
    public void setCi(org.w3.www._1998.Math.MathML.CiType ci) {
        this.ci = ci;
    }


    /**
     * Gets the csymbol value for this MmultiscriptsType.
     * 
     * @return csymbol
     */
    public org.w3.www._1998.Math.MathML.CsymbolType getCsymbol() {
        return csymbol;
    }


    /**
     * Sets the csymbol value for this MmultiscriptsType.
     * 
     * @param csymbol
     */
    public void setCsymbol(org.w3.www._1998.Math.MathML.CsymbolType csymbol) {
        this.csymbol = csymbol;
    }


    /**
     * Gets the abs value for this MmultiscriptsType.
     * 
     * @return abs
     */
    public org.w3.www._1998.Math.MathML.ArithType getAbs() {
        return abs;
    }


    /**
     * Sets the abs value for this MmultiscriptsType.
     * 
     * @param abs
     */
    public void setAbs(org.w3.www._1998.Math.MathML.ArithType abs) {
        this.abs = abs;
    }


    /**
     * Gets the conjugate value for this MmultiscriptsType.
     * 
     * @return conjugate
     */
    public org.w3.www._1998.Math.MathML.ArithType getConjugate() {
        return conjugate;
    }


    /**
     * Sets the conjugate value for this MmultiscriptsType.
     * 
     * @param conjugate
     */
    public void setConjugate(org.w3.www._1998.Math.MathML.ArithType conjugate) {
        this.conjugate = conjugate;
    }


    /**
     * Gets the factorial value for this MmultiscriptsType.
     * 
     * @return factorial
     */
    public org.w3.www._1998.Math.MathML.ArithType getFactorial() {
        return factorial;
    }


    /**
     * Sets the factorial value for this MmultiscriptsType.
     * 
     * @param factorial
     */
    public void setFactorial(org.w3.www._1998.Math.MathML.ArithType factorial) {
        this.factorial = factorial;
    }


    /**
     * Gets the arg value for this MmultiscriptsType.
     * 
     * @return arg
     */
    public org.w3.www._1998.Math.MathML.ArithType getArg() {
        return arg;
    }


    /**
     * Sets the arg value for this MmultiscriptsType.
     * 
     * @param arg
     */
    public void setArg(org.w3.www._1998.Math.MathML.ArithType arg) {
        this.arg = arg;
    }


    /**
     * Gets the real value for this MmultiscriptsType.
     * 
     * @return real
     */
    public org.w3.www._1998.Math.MathML.ArithType getReal() {
        return real;
    }


    /**
     * Sets the real value for this MmultiscriptsType.
     * 
     * @param real
     */
    public void setReal(org.w3.www._1998.Math.MathML.ArithType real) {
        this.real = real;
    }


    /**
     * Gets the imaginary value for this MmultiscriptsType.
     * 
     * @return imaginary
     */
    public org.w3.www._1998.Math.MathML.ArithType getImaginary() {
        return imaginary;
    }


    /**
     * Sets the imaginary value for this MmultiscriptsType.
     * 
     * @param imaginary
     */
    public void setImaginary(org.w3.www._1998.Math.MathML.ArithType imaginary) {
        this.imaginary = imaginary;
    }


    /**
     * Gets the floor value for this MmultiscriptsType.
     * 
     * @return floor
     */
    public org.w3.www._1998.Math.MathML.ArithType getFloor() {
        return floor;
    }


    /**
     * Sets the floor value for this MmultiscriptsType.
     * 
     * @param floor
     */
    public void setFloor(org.w3.www._1998.Math.MathML.ArithType floor) {
        this.floor = floor;
    }


    /**
     * Gets the ceiling value for this MmultiscriptsType.
     * 
     * @return ceiling
     */
    public org.w3.www._1998.Math.MathML.ArithType getCeiling() {
        return ceiling;
    }


    /**
     * Sets the ceiling value for this MmultiscriptsType.
     * 
     * @param ceiling
     */
    public void setCeiling(org.w3.www._1998.Math.MathML.ArithType ceiling) {
        this.ceiling = ceiling;
    }


    /**
     * Gets the quotient value for this MmultiscriptsType.
     * 
     * @return quotient
     */
    public org.w3.www._1998.Math.MathML.ArithType getQuotient() {
        return quotient;
    }


    /**
     * Sets the quotient value for this MmultiscriptsType.
     * 
     * @param quotient
     */
    public void setQuotient(org.w3.www._1998.Math.MathML.ArithType quotient) {
        this.quotient = quotient;
    }


    /**
     * Gets the divide value for this MmultiscriptsType.
     * 
     * @return divide
     */
    public org.w3.www._1998.Math.MathML.ArithType getDivide() {
        return divide;
    }


    /**
     * Sets the divide value for this MmultiscriptsType.
     * 
     * @param divide
     */
    public void setDivide(org.w3.www._1998.Math.MathML.ArithType divide) {
        this.divide = divide;
    }


    /**
     * Gets the rem value for this MmultiscriptsType.
     * 
     * @return rem
     */
    public org.w3.www._1998.Math.MathML.ArithType getRem() {
        return rem;
    }


    /**
     * Sets the rem value for this MmultiscriptsType.
     * 
     * @param rem
     */
    public void setRem(org.w3.www._1998.Math.MathML.ArithType rem) {
        this.rem = rem;
    }


    /**
     * Gets the minus value for this MmultiscriptsType.
     * 
     * @return minus
     */
    public org.w3.www._1998.Math.MathML.ArithType getMinus() {
        return minus;
    }


    /**
     * Sets the minus value for this MmultiscriptsType.
     * 
     * @param minus
     */
    public void setMinus(org.w3.www._1998.Math.MathML.ArithType minus) {
        this.minus = minus;
    }


    /**
     * Gets the plus value for this MmultiscriptsType.
     * 
     * @return plus
     */
    public org.w3.www._1998.Math.MathML.ArithType getPlus() {
        return plus;
    }


    /**
     * Sets the plus value for this MmultiscriptsType.
     * 
     * @param plus
     */
    public void setPlus(org.w3.www._1998.Math.MathML.ArithType plus) {
        this.plus = plus;
    }


    /**
     * Gets the times value for this MmultiscriptsType.
     * 
     * @return times
     */
    public org.w3.www._1998.Math.MathML.ArithType getTimes() {
        return times;
    }


    /**
     * Sets the times value for this MmultiscriptsType.
     * 
     * @param times
     */
    public void setTimes(org.w3.www._1998.Math.MathML.ArithType times) {
        this.times = times;
    }


    /**
     * Gets the power value for this MmultiscriptsType.
     * 
     * @return power
     */
    public org.w3.www._1998.Math.MathML.ArithType getPower() {
        return power;
    }


    /**
     * Sets the power value for this MmultiscriptsType.
     * 
     * @param power
     */
    public void setPower(org.w3.www._1998.Math.MathML.ArithType power) {
        this.power = power;
    }


    /**
     * Gets the root value for this MmultiscriptsType.
     * 
     * @return root
     */
    public org.w3.www._1998.Math.MathML.ArithType getRoot() {
        return root;
    }


    /**
     * Sets the root value for this MmultiscriptsType.
     * 
     * @param root
     */
    public void setRoot(org.w3.www._1998.Math.MathML.ArithType root) {
        this.root = root;
    }


    /**
     * Gets the max value for this MmultiscriptsType.
     * 
     * @return max
     */
    public org.w3.www._1998.Math.MathML.ArithType getMax() {
        return max;
    }


    /**
     * Sets the max value for this MmultiscriptsType.
     * 
     * @param max
     */
    public void setMax(org.w3.www._1998.Math.MathML.ArithType max) {
        this.max = max;
    }


    /**
     * Gets the min value for this MmultiscriptsType.
     * 
     * @return min
     */
    public org.w3.www._1998.Math.MathML.ArithType getMin() {
        return min;
    }


    /**
     * Sets the min value for this MmultiscriptsType.
     * 
     * @param min
     */
    public void setMin(org.w3.www._1998.Math.MathML.ArithType min) {
        this.min = min;
    }


    /**
     * Gets the gcd value for this MmultiscriptsType.
     * 
     * @return gcd
     */
    public org.w3.www._1998.Math.MathML.ArithType getGcd() {
        return gcd;
    }


    /**
     * Sets the gcd value for this MmultiscriptsType.
     * 
     * @param gcd
     */
    public void setGcd(org.w3.www._1998.Math.MathML.ArithType gcd) {
        this.gcd = gcd;
    }


    /**
     * Gets the lcm value for this MmultiscriptsType.
     * 
     * @return lcm
     */
    public org.w3.www._1998.Math.MathML.ArithType getLcm() {
        return lcm;
    }


    /**
     * Sets the lcm value for this MmultiscriptsType.
     * 
     * @param lcm
     */
    public void setLcm(org.w3.www._1998.Math.MathML.ArithType lcm) {
        this.lcm = lcm;
    }


    /**
     * Gets the sum value for this MmultiscriptsType.
     * 
     * @return sum
     */
    public org.w3.www._1998.Math.MathML.ArithType getSum() {
        return sum;
    }


    /**
     * Sets the sum value for this MmultiscriptsType.
     * 
     * @param sum
     */
    public void setSum(org.w3.www._1998.Math.MathML.ArithType sum) {
        this.sum = sum;
    }


    /**
     * Gets the product value for this MmultiscriptsType.
     * 
     * @return product
     */
    public org.w3.www._1998.Math.MathML.ArithType getProduct() {
        return product;
    }


    /**
     * Sets the product value for this MmultiscriptsType.
     * 
     * @param product
     */
    public void setProduct(org.w3.www._1998.Math.MathML.ArithType product) {
        this.product = product;
    }


    /**
     * Gets the compose value for this MmultiscriptsType.
     * 
     * @return compose
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCompose() {
        return compose;
    }


    /**
     * Sets the compose value for this MmultiscriptsType.
     * 
     * @param compose
     */
    public void setCompose(org.w3.www._1998.Math.MathML.FunctionsType compose) {
        this.compose = compose;
    }


    /**
     * Gets the domain value for this MmultiscriptsType.
     * 
     * @return domain
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getDomain() {
        return domain;
    }


    /**
     * Sets the domain value for this MmultiscriptsType.
     * 
     * @param domain
     */
    public void setDomain(org.w3.www._1998.Math.MathML.FunctionsType domain) {
        this.domain = domain;
    }


    /**
     * Gets the codomain value for this MmultiscriptsType.
     * 
     * @return codomain
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCodomain() {
        return codomain;
    }


    /**
     * Sets the codomain value for this MmultiscriptsType.
     * 
     * @param codomain
     */
    public void setCodomain(org.w3.www._1998.Math.MathML.FunctionsType codomain) {
        this.codomain = codomain;
    }


    /**
     * Gets the image value for this MmultiscriptsType.
     * 
     * @return image
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getImage() {
        return image;
    }


    /**
     * Sets the image value for this MmultiscriptsType.
     * 
     * @param image
     */
    public void setImage(org.w3.www._1998.Math.MathML.FunctionsType image) {
        this.image = image;
    }


    /**
     * Gets the domainofapplication value for this MmultiscriptsType.
     * 
     * @return domainofapplication
     */
    public org.w3.www._1998.Math.MathML.DomainofapplicationType getDomainofapplication() {
        return domainofapplication;
    }


    /**
     * Sets the domainofapplication value for this MmultiscriptsType.
     * 
     * @param domainofapplication
     */
    public void setDomainofapplication(org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication) {
        this.domainofapplication = domainofapplication;
    }


    /**
     * Gets the ident value for this MmultiscriptsType.
     * 
     * @return ident
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getIdent() {
        return ident;
    }


    /**
     * Sets the ident value for this MmultiscriptsType.
     * 
     * @param ident
     */
    public void setIdent(org.w3.www._1998.Math.MathML.FunctionsType ident) {
        this.ident = ident;
    }


    /**
     * Gets the and value for this MmultiscriptsType.
     * 
     * @return and
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getAnd() {
        return and;
    }


    /**
     * Sets the and value for this MmultiscriptsType.
     * 
     * @param and
     */
    public void setAnd(org.w3.www._1998.Math.MathML.ElementaryFunctionsType and) {
        this.and = and;
    }


    /**
     * Gets the or value for this MmultiscriptsType.
     * 
     * @return or
     */
    public org.w3.www._1998.Math.MathML.LogicType getOr() {
        return or;
    }


    /**
     * Sets the or value for this MmultiscriptsType.
     * 
     * @param or
     */
    public void setOr(org.w3.www._1998.Math.MathML.LogicType or) {
        this.or = or;
    }


    /**
     * Gets the xor value for this MmultiscriptsType.
     * 
     * @return xor
     */
    public org.w3.www._1998.Math.MathML.LogicType getXor() {
        return xor;
    }


    /**
     * Sets the xor value for this MmultiscriptsType.
     * 
     * @param xor
     */
    public void setXor(org.w3.www._1998.Math.MathML.LogicType xor) {
        this.xor = xor;
    }


    /**
     * Gets the not value for this MmultiscriptsType.
     * 
     * @return not
     */
    public org.w3.www._1998.Math.MathML.LogicType getNot() {
        return not;
    }


    /**
     * Sets the not value for this MmultiscriptsType.
     * 
     * @param not
     */
    public void setNot(org.w3.www._1998.Math.MathML.LogicType not) {
        this.not = not;
    }


    /**
     * Gets the exists value for this MmultiscriptsType.
     * 
     * @return exists
     */
    public org.w3.www._1998.Math.MathML.LogicType getExists() {
        return exists;
    }


    /**
     * Sets the exists value for this MmultiscriptsType.
     * 
     * @param exists
     */
    public void setExists(org.w3.www._1998.Math.MathML.LogicType exists) {
        this.exists = exists;
    }


    /**
     * Gets the forall value for this MmultiscriptsType.
     * 
     * @return forall
     */
    public org.w3.www._1998.Math.MathML.LogicType getForall() {
        return forall;
    }


    /**
     * Sets the forall value for this MmultiscriptsType.
     * 
     * @param forall
     */
    public void setForall(org.w3.www._1998.Math.MathML.LogicType forall) {
        this.forall = forall;
    }


    /**
     * Gets the implies value for this MmultiscriptsType.
     * 
     * @return implies
     */
    public org.w3.www._1998.Math.MathML.LogicType getImplies() {
        return implies;
    }


    /**
     * Sets the implies value for this MmultiscriptsType.
     * 
     * @param implies
     */
    public void setImplies(org.w3.www._1998.Math.MathML.LogicType implies) {
        this.implies = implies;
    }


    /**
     * Gets the naturalnumbers value for this MmultiscriptsType.
     * 
     * @return naturalnumbers
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNaturalnumbers() {
        return naturalnumbers;
    }


    /**
     * Sets the naturalnumbers value for this MmultiscriptsType.
     * 
     * @param naturalnumbers
     */
    public void setNaturalnumbers(org.w3.www._1998.Math.MathML.ConstantType naturalnumbers) {
        this.naturalnumbers = naturalnumbers;
    }


    /**
     * Gets the primes value for this MmultiscriptsType.
     * 
     * @return primes
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPrimes() {
        return primes;
    }


    /**
     * Sets the primes value for this MmultiscriptsType.
     * 
     * @param primes
     */
    public void setPrimes(org.w3.www._1998.Math.MathML.ConstantType primes) {
        this.primes = primes;
    }


    /**
     * Gets the integers value for this MmultiscriptsType.
     * 
     * @return integers
     */
    public org.w3.www._1998.Math.MathML.ConstantType getIntegers() {
        return integers;
    }


    /**
     * Sets the integers value for this MmultiscriptsType.
     * 
     * @param integers
     */
    public void setIntegers(org.w3.www._1998.Math.MathML.ConstantType integers) {
        this.integers = integers;
    }


    /**
     * Gets the rationals value for this MmultiscriptsType.
     * 
     * @return rationals
     */
    public org.w3.www._1998.Math.MathML.ConstantType getRationals() {
        return rationals;
    }


    /**
     * Sets the rationals value for this MmultiscriptsType.
     * 
     * @param rationals
     */
    public void setRationals(org.w3.www._1998.Math.MathML.ConstantType rationals) {
        this.rationals = rationals;
    }


    /**
     * Gets the reals value for this MmultiscriptsType.
     * 
     * @return reals
     */
    public org.w3.www._1998.Math.MathML.ConstantType getReals() {
        return reals;
    }


    /**
     * Sets the reals value for this MmultiscriptsType.
     * 
     * @param reals
     */
    public void setReals(org.w3.www._1998.Math.MathML.ConstantType reals) {
        this.reals = reals;
    }


    /**
     * Gets the complexes value for this MmultiscriptsType.
     * 
     * @return complexes
     */
    public org.w3.www._1998.Math.MathML.ConstantType getComplexes() {
        return complexes;
    }


    /**
     * Sets the complexes value for this MmultiscriptsType.
     * 
     * @param complexes
     */
    public void setComplexes(org.w3.www._1998.Math.MathML.ConstantType complexes) {
        this.complexes = complexes;
    }


    /**
     * Gets the emptyset value for this MmultiscriptsType.
     * 
     * @return emptyset
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEmptyset() {
        return emptyset;
    }


    /**
     * Sets the emptyset value for this MmultiscriptsType.
     * 
     * @param emptyset
     */
    public void setEmptyset(org.w3.www._1998.Math.MathML.ConstantType emptyset) {
        this.emptyset = emptyset;
    }


    /**
     * Gets the exponentiale value for this MmultiscriptsType.
     * 
     * @return exponentiale
     */
    public org.w3.www._1998.Math.MathML.ConstantType getExponentiale() {
        return exponentiale;
    }


    /**
     * Sets the exponentiale value for this MmultiscriptsType.
     * 
     * @param exponentiale
     */
    public void setExponentiale(org.w3.www._1998.Math.MathML.ConstantType exponentiale) {
        this.exponentiale = exponentiale;
    }


    /**
     * Gets the imaginaryi value for this MmultiscriptsType.
     * 
     * @return imaginaryi
     */
    public org.w3.www._1998.Math.MathML.ConstantType getImaginaryi() {
        return imaginaryi;
    }


    /**
     * Sets the imaginaryi value for this MmultiscriptsType.
     * 
     * @param imaginaryi
     */
    public void setImaginaryi(org.w3.www._1998.Math.MathML.ConstantType imaginaryi) {
        this.imaginaryi = imaginaryi;
    }


    /**
     * Gets the pi value for this MmultiscriptsType.
     * 
     * @return pi
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPi() {
        return pi;
    }


    /**
     * Sets the pi value for this MmultiscriptsType.
     * 
     * @param pi
     */
    public void setPi(org.w3.www._1998.Math.MathML.ConstantType pi) {
        this.pi = pi;
    }


    /**
     * Gets the eulergamma value for this MmultiscriptsType.
     * 
     * @return eulergamma
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEulergamma() {
        return eulergamma;
    }


    /**
     * Sets the eulergamma value for this MmultiscriptsType.
     * 
     * @param eulergamma
     */
    public void setEulergamma(org.w3.www._1998.Math.MathML.ConstantType eulergamma) {
        this.eulergamma = eulergamma;
    }


    /**
     * Gets the _true value for this MmultiscriptsType.
     * 
     * @return _true
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_true() {
        return _true;
    }


    /**
     * Sets the _true value for this MmultiscriptsType.
     * 
     * @param _true
     */
    public void set_true(org.w3.www._1998.Math.MathML.ConstantType _true) {
        this._true = _true;
    }


    /**
     * Gets the _false value for this MmultiscriptsType.
     * 
     * @return _false
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_false() {
        return _false;
    }


    /**
     * Sets the _false value for this MmultiscriptsType.
     * 
     * @param _false
     */
    public void set_false(org.w3.www._1998.Math.MathML.ConstantType _false) {
        this._false = _false;
    }


    /**
     * Gets the infinity value for this MmultiscriptsType.
     * 
     * @return infinity
     */
    public org.w3.www._1998.Math.MathML.ConstantType getInfinity() {
        return infinity;
    }


    /**
     * Sets the infinity value for this MmultiscriptsType.
     * 
     * @param infinity
     */
    public void setInfinity(org.w3.www._1998.Math.MathML.ConstantType infinity) {
        this.infinity = infinity;
    }


    /**
     * Gets the notanumber value for this MmultiscriptsType.
     * 
     * @return notanumber
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNotanumber() {
        return notanumber;
    }


    /**
     * Sets the notanumber value for this MmultiscriptsType.
     * 
     * @param notanumber
     */
    public void setNotanumber(org.w3.www._1998.Math.MathML.ConstantType notanumber) {
        this.notanumber = notanumber;
    }


    /**
     * Gets the set value for this MmultiscriptsType.
     * 
     * @return set
     */
    public org.w3.www._1998.Math.MathML.SetType getSet() {
        return set;
    }


    /**
     * Sets the set value for this MmultiscriptsType.
     * 
     * @param set
     */
    public void setSet(org.w3.www._1998.Math.MathML.SetType set) {
        this.set = set;
    }


    /**
     * Gets the list value for this MmultiscriptsType.
     * 
     * @return list
     */
    public org.w3.www._1998.Math.MathML.ListType getList() {
        return list;
    }


    /**
     * Sets the list value for this MmultiscriptsType.
     * 
     * @param list
     */
    public void setList(org.w3.www._1998.Math.MathML.ListType list) {
        this.list = list;
    }


    /**
     * Gets the union value for this MmultiscriptsType.
     * 
     * @return union
     */
    public org.w3.www._1998.Math.MathML.UnionType getUnion() {
        return union;
    }


    /**
     * Sets the union value for this MmultiscriptsType.
     * 
     * @param union
     */
    public void setUnion(org.w3.www._1998.Math.MathML.UnionType union) {
        this.union = union;
    }


    /**
     * Gets the intersect value for this MmultiscriptsType.
     * 
     * @return intersect
     */
    public org.w3.www._1998.Math.MathML.IntersectType getIntersect() {
        return intersect;
    }


    /**
     * Sets the intersect value for this MmultiscriptsType.
     * 
     * @param intersect
     */
    public void setIntersect(org.w3.www._1998.Math.MathML.IntersectType intersect) {
        this.intersect = intersect;
    }


    /**
     * Gets the in value for this MmultiscriptsType.
     * 
     * @return in
     */
    public org.w3.www._1998.Math.MathML.InType getIn() {
        return in;
    }


    /**
     * Sets the in value for this MmultiscriptsType.
     * 
     * @param in
     */
    public void setIn(org.w3.www._1998.Math.MathML.InType in) {
        this.in = in;
    }


    /**
     * Gets the notin value for this MmultiscriptsType.
     * 
     * @return notin
     */
    public org.w3.www._1998.Math.MathML.NotinType getNotin() {
        return notin;
    }


    /**
     * Sets the notin value for this MmultiscriptsType.
     * 
     * @param notin
     */
    public void setNotin(org.w3.www._1998.Math.MathML.NotinType notin) {
        this.notin = notin;
    }


    /**
     * Gets the subset value for this MmultiscriptsType.
     * 
     * @return subset
     */
    public org.w3.www._1998.Math.MathML.SubsetType getSubset() {
        return subset;
    }


    /**
     * Sets the subset value for this MmultiscriptsType.
     * 
     * @param subset
     */
    public void setSubset(org.w3.www._1998.Math.MathML.SubsetType subset) {
        this.subset = subset;
    }


    /**
     * Gets the prsubset value for this MmultiscriptsType.
     * 
     * @return prsubset
     */
    public org.w3.www._1998.Math.MathML.PrsubsetType getPrsubset() {
        return prsubset;
    }


    /**
     * Sets the prsubset value for this MmultiscriptsType.
     * 
     * @param prsubset
     */
    public void setPrsubset(org.w3.www._1998.Math.MathML.PrsubsetType prsubset) {
        this.prsubset = prsubset;
    }


    /**
     * Gets the notsubset value for this MmultiscriptsType.
     * 
     * @return notsubset
     */
    public org.w3.www._1998.Math.MathML.NotsubsetType getNotsubset() {
        return notsubset;
    }


    /**
     * Sets the notsubset value for this MmultiscriptsType.
     * 
     * @param notsubset
     */
    public void setNotsubset(org.w3.www._1998.Math.MathML.NotsubsetType notsubset) {
        this.notsubset = notsubset;
    }


    /**
     * Gets the notprsubset value for this MmultiscriptsType.
     * 
     * @return notprsubset
     */
    public org.w3.www._1998.Math.MathML.NotprsubsetType getNotprsubset() {
        return notprsubset;
    }


    /**
     * Sets the notprsubset value for this MmultiscriptsType.
     * 
     * @param notprsubset
     */
    public void setNotprsubset(org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset) {
        this.notprsubset = notprsubset;
    }


    /**
     * Gets the setdiff value for this MmultiscriptsType.
     * 
     * @return setdiff
     */
    public org.w3.www._1998.Math.MathML.SetdiffType getSetdiff() {
        return setdiff;
    }


    /**
     * Sets the setdiff value for this MmultiscriptsType.
     * 
     * @param setdiff
     */
    public void setSetdiff(org.w3.www._1998.Math.MathML.SetdiffType setdiff) {
        this.setdiff = setdiff;
    }


    /**
     * Gets the card value for this MmultiscriptsType.
     * 
     * @return card
     */
    public org.w3.www._1998.Math.MathML.CardType getCard() {
        return card;
    }


    /**
     * Sets the card value for this MmultiscriptsType.
     * 
     * @param card
     */
    public void setCard(org.w3.www._1998.Math.MathML.CardType card) {
        this.card = card;
    }


    /**
     * Gets the cartesianproduct value for this MmultiscriptsType.
     * 
     * @return cartesianproduct
     */
    public org.w3.www._1998.Math.MathML.CartesianproductType getCartesianproduct() {
        return cartesianproduct;
    }


    /**
     * Sets the cartesianproduct value for this MmultiscriptsType.
     * 
     * @param cartesianproduct
     */
    public void setCartesianproduct(org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct) {
        this.cartesianproduct = cartesianproduct;
    }


    /**
     * Gets the eq value for this MmultiscriptsType.
     * 
     * @return eq
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEq() {
        return eq;
    }


    /**
     * Sets the eq value for this MmultiscriptsType.
     * 
     * @param eq
     */
    public void setEq(org.w3.www._1998.Math.MathML.RelationsType eq) {
        this.eq = eq;
    }


    /**
     * Gets the neq value for this MmultiscriptsType.
     * 
     * @return neq
     */
    public org.w3.www._1998.Math.MathML.RelationsType getNeq() {
        return neq;
    }


    /**
     * Sets the neq value for this MmultiscriptsType.
     * 
     * @param neq
     */
    public void setNeq(org.w3.www._1998.Math.MathML.RelationsType neq) {
        this.neq = neq;
    }


    /**
     * Gets the leq value for this MmultiscriptsType.
     * 
     * @return leq
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLeq() {
        return leq;
    }


    /**
     * Sets the leq value for this MmultiscriptsType.
     * 
     * @param leq
     */
    public void setLeq(org.w3.www._1998.Math.MathML.RelationsType leq) {
        this.leq = leq;
    }


    /**
     * Gets the lt value for this MmultiscriptsType.
     * 
     * @return lt
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLt() {
        return lt;
    }


    /**
     * Sets the lt value for this MmultiscriptsType.
     * 
     * @param lt
     */
    public void setLt(org.w3.www._1998.Math.MathML.RelationsType lt) {
        this.lt = lt;
    }


    /**
     * Gets the geq value for this MmultiscriptsType.
     * 
     * @return geq
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGeq() {
        return geq;
    }


    /**
     * Sets the geq value for this MmultiscriptsType.
     * 
     * @param geq
     */
    public void setGeq(org.w3.www._1998.Math.MathML.RelationsType geq) {
        this.geq = geq;
    }


    /**
     * Gets the gt value for this MmultiscriptsType.
     * 
     * @return gt
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGt() {
        return gt;
    }


    /**
     * Sets the gt value for this MmultiscriptsType.
     * 
     * @param gt
     */
    public void setGt(org.w3.www._1998.Math.MathML.RelationsType gt) {
        this.gt = gt;
    }


    /**
     * Gets the equivalent value for this MmultiscriptsType.
     * 
     * @return equivalent
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEquivalent() {
        return equivalent;
    }


    /**
     * Sets the equivalent value for this MmultiscriptsType.
     * 
     * @param equivalent
     */
    public void setEquivalent(org.w3.www._1998.Math.MathML.RelationsType equivalent) {
        this.equivalent = equivalent;
    }


    /**
     * Gets the approx value for this MmultiscriptsType.
     * 
     * @return approx
     */
    public org.w3.www._1998.Math.MathML.RelationsType getApprox() {
        return approx;
    }


    /**
     * Sets the approx value for this MmultiscriptsType.
     * 
     * @param approx
     */
    public void setApprox(org.w3.www._1998.Math.MathML.RelationsType approx) {
        this.approx = approx;
    }


    /**
     * Gets the factorof value for this MmultiscriptsType.
     * 
     * @return factorof
     */
    public org.w3.www._1998.Math.MathML.RelationsType getFactorof() {
        return factorof;
    }


    /**
     * Sets the factorof value for this MmultiscriptsType.
     * 
     * @param factorof
     */
    public void setFactorof(org.w3.www._1998.Math.MathML.RelationsType factorof) {
        this.factorof = factorof;
    }


    /**
     * Gets the exp value for this MmultiscriptsType.
     * 
     * @return exp
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getExp() {
        return exp;
    }


    /**
     * Sets the exp value for this MmultiscriptsType.
     * 
     * @param exp
     */
    public void setExp(org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp) {
        this.exp = exp;
    }


    /**
     * Gets the ln value for this MmultiscriptsType.
     * 
     * @return ln
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLn() {
        return ln;
    }


    /**
     * Sets the ln value for this MmultiscriptsType.
     * 
     * @param ln
     */
    public void setLn(org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln) {
        this.ln = ln;
    }


    /**
     * Gets the log value for this MmultiscriptsType.
     * 
     * @return log
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLog() {
        return log;
    }


    /**
     * Sets the log value for this MmultiscriptsType.
     * 
     * @param log
     */
    public void setLog(org.w3.www._1998.Math.MathML.ElementaryFunctionsType log) {
        this.log = log;
    }


    /**
     * Gets the logbase value for this MmultiscriptsType.
     * 
     * @return logbase
     */
    public org.w3.www._1998.Math.MathML.LogbaseType getLogbase() {
        return logbase;
    }


    /**
     * Sets the logbase value for this MmultiscriptsType.
     * 
     * @param logbase
     */
    public void setLogbase(org.w3.www._1998.Math.MathML.LogbaseType logbase) {
        this.logbase = logbase;
    }


    /**
     * Gets the sin value for this MmultiscriptsType.
     * 
     * @return sin
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSin() {
        return sin;
    }


    /**
     * Sets the sin value for this MmultiscriptsType.
     * 
     * @param sin
     */
    public void setSin(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin) {
        this.sin = sin;
    }


    /**
     * Gets the cos value for this MmultiscriptsType.
     * 
     * @return cos
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCos() {
        return cos;
    }


    /**
     * Sets the cos value for this MmultiscriptsType.
     * 
     * @param cos
     */
    public void setCos(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos) {
        this.cos = cos;
    }


    /**
     * Gets the tan value for this MmultiscriptsType.
     * 
     * @return tan
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTan() {
        return tan;
    }


    /**
     * Sets the tan value for this MmultiscriptsType.
     * 
     * @param tan
     */
    public void setTan(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan) {
        this.tan = tan;
    }


    /**
     * Gets the sec value for this MmultiscriptsType.
     * 
     * @return sec
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSec() {
        return sec;
    }


    /**
     * Sets the sec value for this MmultiscriptsType.
     * 
     * @param sec
     */
    public void setSec(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec) {
        this.sec = sec;
    }


    /**
     * Gets the csc value for this MmultiscriptsType.
     * 
     * @return csc
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsc() {
        return csc;
    }


    /**
     * Sets the csc value for this MmultiscriptsType.
     * 
     * @param csc
     */
    public void setCsc(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc) {
        this.csc = csc;
    }


    /**
     * Gets the cot value for this MmultiscriptsType.
     * 
     * @return cot
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCot() {
        return cot;
    }


    /**
     * Sets the cot value for this MmultiscriptsType.
     * 
     * @param cot
     */
    public void setCot(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot) {
        this.cot = cot;
    }


    /**
     * Gets the arcsin value for this MmultiscriptsType.
     * 
     * @return arcsin
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsin() {
        return arcsin;
    }


    /**
     * Sets the arcsin value for this MmultiscriptsType.
     * 
     * @param arcsin
     */
    public void setArcsin(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin) {
        this.arcsin = arcsin;
    }


    /**
     * Gets the arccos value for this MmultiscriptsType.
     * 
     * @return arccos
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccos() {
        return arccos;
    }


    /**
     * Sets the arccos value for this MmultiscriptsType.
     * 
     * @param arccos
     */
    public void setArccos(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos) {
        this.arccos = arccos;
    }


    /**
     * Gets the arctan value for this MmultiscriptsType.
     * 
     * @return arctan
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctan() {
        return arctan;
    }


    /**
     * Sets the arctan value for this MmultiscriptsType.
     * 
     * @param arctan
     */
    public void setArctan(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan) {
        this.arctan = arctan;
    }


    /**
     * Gets the arcsec value for this MmultiscriptsType.
     * 
     * @return arcsec
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsec() {
        return arcsec;
    }


    /**
     * Sets the arcsec value for this MmultiscriptsType.
     * 
     * @param arcsec
     */
    public void setArcsec(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec) {
        this.arcsec = arcsec;
    }


    /**
     * Gets the arccsc value for this MmultiscriptsType.
     * 
     * @return arccsc
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsc() {
        return arccsc;
    }


    /**
     * Sets the arccsc value for this MmultiscriptsType.
     * 
     * @param arccsc
     */
    public void setArccsc(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc) {
        this.arccsc = arccsc;
    }


    /**
     * Gets the arccot value for this MmultiscriptsType.
     * 
     * @return arccot
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccot() {
        return arccot;
    }


    /**
     * Sets the arccot value for this MmultiscriptsType.
     * 
     * @param arccot
     */
    public void setArccot(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot) {
        this.arccot = arccot;
    }


    /**
     * Gets the sinh value for this MmultiscriptsType.
     * 
     * @return sinh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSinh() {
        return sinh;
    }


    /**
     * Sets the sinh value for this MmultiscriptsType.
     * 
     * @param sinh
     */
    public void setSinh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh) {
        this.sinh = sinh;
    }


    /**
     * Gets the cosh value for this MmultiscriptsType.
     * 
     * @return cosh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCosh() {
        return cosh;
    }


    /**
     * Sets the cosh value for this MmultiscriptsType.
     * 
     * @param cosh
     */
    public void setCosh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh) {
        this.cosh = cosh;
    }


    /**
     * Gets the tanh value for this MmultiscriptsType.
     * 
     * @return tanh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTanh() {
        return tanh;
    }


    /**
     * Sets the tanh value for this MmultiscriptsType.
     * 
     * @param tanh
     */
    public void setTanh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh) {
        this.tanh = tanh;
    }


    /**
     * Gets the sech value for this MmultiscriptsType.
     * 
     * @return sech
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSech() {
        return sech;
    }


    /**
     * Sets the sech value for this MmultiscriptsType.
     * 
     * @param sech
     */
    public void setSech(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech) {
        this.sech = sech;
    }


    /**
     * Gets the csch value for this MmultiscriptsType.
     * 
     * @return csch
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsch() {
        return csch;
    }


    /**
     * Sets the csch value for this MmultiscriptsType.
     * 
     * @param csch
     */
    public void setCsch(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch) {
        this.csch = csch;
    }


    /**
     * Gets the coth value for this MmultiscriptsType.
     * 
     * @return coth
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCoth() {
        return coth;
    }


    /**
     * Sets the coth value for this MmultiscriptsType.
     * 
     * @param coth
     */
    public void setCoth(org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth) {
        this.coth = coth;
    }


    /**
     * Gets the arccosh value for this MmultiscriptsType.
     * 
     * @return arccosh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccosh() {
        return arccosh;
    }


    /**
     * Sets the arccosh value for this MmultiscriptsType.
     * 
     * @param arccosh
     */
    public void setArccosh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh) {
        this.arccosh = arccosh;
    }


    /**
     * Gets the arccoth value for this MmultiscriptsType.
     * 
     * @return arccoth
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccoth() {
        return arccoth;
    }


    /**
     * Sets the arccoth value for this MmultiscriptsType.
     * 
     * @param arccoth
     */
    public void setArccoth(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth) {
        this.arccoth = arccoth;
    }


    /**
     * Gets the arccsch value for this MmultiscriptsType.
     * 
     * @return arccsch
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsch() {
        return arccsch;
    }


    /**
     * Sets the arccsch value for this MmultiscriptsType.
     * 
     * @param arccsch
     */
    public void setArccsch(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch) {
        this.arccsch = arccsch;
    }


    /**
     * Gets the arcsech value for this MmultiscriptsType.
     * 
     * @return arcsech
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsech() {
        return arcsech;
    }


    /**
     * Sets the arcsech value for this MmultiscriptsType.
     * 
     * @param arcsech
     */
    public void setArcsech(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech) {
        this.arcsech = arcsech;
    }


    /**
     * Gets the arcsinh value for this MmultiscriptsType.
     * 
     * @return arcsinh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsinh() {
        return arcsinh;
    }


    /**
     * Sets the arcsinh value for this MmultiscriptsType.
     * 
     * @param arcsinh
     */
    public void setArcsinh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh) {
        this.arcsinh = arcsinh;
    }


    /**
     * Gets the arctanh value for this MmultiscriptsType.
     * 
     * @return arctanh
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctanh() {
        return arctanh;
    }


    /**
     * Sets the arctanh value for this MmultiscriptsType.
     * 
     * @param arctanh
     */
    public void setArctanh(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh) {
        this.arctanh = arctanh;
    }


    /**
     * Gets the _int value for this MmultiscriptsType.
     * 
     * @return _int
     */
    public org.w3.www._1998.Math.MathML.IntType get_int() {
        return _int;
    }


    /**
     * Sets the _int value for this MmultiscriptsType.
     * 
     * @param _int
     */
    public void set_int(org.w3.www._1998.Math.MathML.IntType _int) {
        this._int = _int;
    }


    /**
     * Gets the diff value for this MmultiscriptsType.
     * 
     * @return diff
     */
    public org.w3.www._1998.Math.MathML.DiffType getDiff() {
        return diff;
    }


    /**
     * Sets the diff value for this MmultiscriptsType.
     * 
     * @param diff
     */
    public void setDiff(org.w3.www._1998.Math.MathML.DiffType diff) {
        this.diff = diff;
    }


    /**
     * Gets the partialdiff value for this MmultiscriptsType.
     * 
     * @return partialdiff
     */
    public org.w3.www._1998.Math.MathML.PartialdiffType getPartialdiff() {
        return partialdiff;
    }


    /**
     * Sets the partialdiff value for this MmultiscriptsType.
     * 
     * @param partialdiff
     */
    public void setPartialdiff(org.w3.www._1998.Math.MathML.PartialdiffType partialdiff) {
        this.partialdiff = partialdiff;
    }


    /**
     * Gets the limit value for this MmultiscriptsType.
     * 
     * @return limit
     */
    public org.w3.www._1998.Math.MathML.LimitType getLimit() {
        return limit;
    }


    /**
     * Sets the limit value for this MmultiscriptsType.
     * 
     * @param limit
     */
    public void setLimit(org.w3.www._1998.Math.MathML.LimitType limit) {
        this.limit = limit;
    }


    /**
     * Gets the lowlimit value for this MmultiscriptsType.
     * 
     * @return lowlimit
     */
    public org.w3.www._1998.Math.MathML.LowlimitType getLowlimit() {
        return lowlimit;
    }


    /**
     * Sets the lowlimit value for this MmultiscriptsType.
     * 
     * @param lowlimit
     */
    public void setLowlimit(org.w3.www._1998.Math.MathML.LowlimitType lowlimit) {
        this.lowlimit = lowlimit;
    }


    /**
     * Gets the uplimit value for this MmultiscriptsType.
     * 
     * @return uplimit
     */
    public org.w3.www._1998.Math.MathML.UplimitType getUplimit() {
        return uplimit;
    }


    /**
     * Sets the uplimit value for this MmultiscriptsType.
     * 
     * @param uplimit
     */
    public void setUplimit(org.w3.www._1998.Math.MathML.UplimitType uplimit) {
        this.uplimit = uplimit;
    }


    /**
     * Gets the tendsto value for this MmultiscriptsType.
     * 
     * @return tendsto
     */
    public org.w3.www._1998.Math.MathML.TendstoType getTendsto() {
        return tendsto;
    }


    /**
     * Sets the tendsto value for this MmultiscriptsType.
     * 
     * @param tendsto
     */
    public void setTendsto(org.w3.www._1998.Math.MathML.TendstoType tendsto) {
        this.tendsto = tendsto;
    }


    /**
     * Gets the vector value for this MmultiscriptsType.
     * 
     * @return vector
     */
    public org.w3.www._1998.Math.MathML.VectorType getVector() {
        return vector;
    }


    /**
     * Sets the vector value for this MmultiscriptsType.
     * 
     * @param vector
     */
    public void setVector(org.w3.www._1998.Math.MathML.VectorType vector) {
        this.vector = vector;
    }


    /**
     * Gets the matrix value for this MmultiscriptsType.
     * 
     * @return matrix
     */
    public org.w3.www._1998.Math.MathML.MatrixType getMatrix() {
        return matrix;
    }


    /**
     * Sets the matrix value for this MmultiscriptsType.
     * 
     * @param matrix
     */
    public void setMatrix(org.w3.www._1998.Math.MathML.MatrixType matrix) {
        this.matrix = matrix;
    }


    /**
     * Gets the determinant value for this MmultiscriptsType.
     * 
     * @return determinant
     */
    public org.w3.www._1998.Math.MathML.DeterminantType getDeterminant() {
        return determinant;
    }


    /**
     * Sets the determinant value for this MmultiscriptsType.
     * 
     * @param determinant
     */
    public void setDeterminant(org.w3.www._1998.Math.MathML.DeterminantType determinant) {
        this.determinant = determinant;
    }


    /**
     * Gets the transpose value for this MmultiscriptsType.
     * 
     * @return transpose
     */
    public org.w3.www._1998.Math.MathML.TransposeType getTranspose() {
        return transpose;
    }


    /**
     * Sets the transpose value for this MmultiscriptsType.
     * 
     * @param transpose
     */
    public void setTranspose(org.w3.www._1998.Math.MathML.TransposeType transpose) {
        this.transpose = transpose;
    }


    /**
     * Gets the selector value for this MmultiscriptsType.
     * 
     * @return selector
     */
    public org.w3.www._1998.Math.MathML.SelectorType getSelector() {
        return selector;
    }


    /**
     * Sets the selector value for this MmultiscriptsType.
     * 
     * @param selector
     */
    public void setSelector(org.w3.www._1998.Math.MathML.SelectorType selector) {
        this.selector = selector;
    }


    /**
     * Gets the vectorproduct value for this MmultiscriptsType.
     * 
     * @return vectorproduct
     */
    public org.w3.www._1998.Math.MathML.VectorproductType getVectorproduct() {
        return vectorproduct;
    }


    /**
     * Sets the vectorproduct value for this MmultiscriptsType.
     * 
     * @param vectorproduct
     */
    public void setVectorproduct(org.w3.www._1998.Math.MathML.VectorproductType vectorproduct) {
        this.vectorproduct = vectorproduct;
    }


    /**
     * Gets the scalarproduct value for this MmultiscriptsType.
     * 
     * @return scalarproduct
     */
    public org.w3.www._1998.Math.MathML.ScalarproductType getScalarproduct() {
        return scalarproduct;
    }


    /**
     * Sets the scalarproduct value for this MmultiscriptsType.
     * 
     * @param scalarproduct
     */
    public void setScalarproduct(org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct) {
        this.scalarproduct = scalarproduct;
    }


    /**
     * Gets the outerproduct value for this MmultiscriptsType.
     * 
     * @return outerproduct
     */
    public org.w3.www._1998.Math.MathML.OuterproductType getOuterproduct() {
        return outerproduct;
    }


    /**
     * Sets the outerproduct value for this MmultiscriptsType.
     * 
     * @param outerproduct
     */
    public void setOuterproduct(org.w3.www._1998.Math.MathML.OuterproductType outerproduct) {
        this.outerproduct = outerproduct;
    }


    /**
     * Gets the divergence value for this MmultiscriptsType.
     * 
     * @return divergence
     */
    public org.w3.www._1998.Math.MathML.DivergenceType getDivergence() {
        return divergence;
    }


    /**
     * Sets the divergence value for this MmultiscriptsType.
     * 
     * @param divergence
     */
    public void setDivergence(org.w3.www._1998.Math.MathML.DivergenceType divergence) {
        this.divergence = divergence;
    }


    /**
     * Gets the grad value for this MmultiscriptsType.
     * 
     * @return grad
     */
    public org.w3.www._1998.Math.MathML.GradType getGrad() {
        return grad;
    }


    /**
     * Sets the grad value for this MmultiscriptsType.
     * 
     * @param grad
     */
    public void setGrad(org.w3.www._1998.Math.MathML.GradType grad) {
        this.grad = grad;
    }


    /**
     * Gets the curl value for this MmultiscriptsType.
     * 
     * @return curl
     */
    public org.w3.www._1998.Math.MathML.CurlType getCurl() {
        return curl;
    }


    /**
     * Sets the curl value for this MmultiscriptsType.
     * 
     * @param curl
     */
    public void setCurl(org.w3.www._1998.Math.MathML.CurlType curl) {
        this.curl = curl;
    }


    /**
     * Gets the laplacian value for this MmultiscriptsType.
     * 
     * @return laplacian
     */
    public org.w3.www._1998.Math.MathML.LaplacianType getLaplacian() {
        return laplacian;
    }


    /**
     * Sets the laplacian value for this MmultiscriptsType.
     * 
     * @param laplacian
     */
    public void setLaplacian(org.w3.www._1998.Math.MathML.LaplacianType laplacian) {
        this.laplacian = laplacian;
    }


    /**
     * Gets the mean value for this MmultiscriptsType.
     * 
     * @return mean
     */
    public org.w3.www._1998.Math.MathML.MeanType getMean() {
        return mean;
    }


    /**
     * Sets the mean value for this MmultiscriptsType.
     * 
     * @param mean
     */
    public void setMean(org.w3.www._1998.Math.MathML.MeanType mean) {
        this.mean = mean;
    }


    /**
     * Gets the sdev value for this MmultiscriptsType.
     * 
     * @return sdev
     */
    public org.w3.www._1998.Math.MathML.SdevType getSdev() {
        return sdev;
    }


    /**
     * Sets the sdev value for this MmultiscriptsType.
     * 
     * @param sdev
     */
    public void setSdev(org.w3.www._1998.Math.MathML.SdevType sdev) {
        this.sdev = sdev;
    }


    /**
     * Gets the variance value for this MmultiscriptsType.
     * 
     * @return variance
     */
    public org.w3.www._1998.Math.MathML.VarianceType getVariance() {
        return variance;
    }


    /**
     * Sets the variance value for this MmultiscriptsType.
     * 
     * @param variance
     */
    public void setVariance(org.w3.www._1998.Math.MathML.VarianceType variance) {
        this.variance = variance;
    }


    /**
     * Gets the median value for this MmultiscriptsType.
     * 
     * @return median
     */
    public org.w3.www._1998.Math.MathML.MedianType getMedian() {
        return median;
    }


    /**
     * Sets the median value for this MmultiscriptsType.
     * 
     * @param median
     */
    public void setMedian(org.w3.www._1998.Math.MathML.MedianType median) {
        this.median = median;
    }


    /**
     * Gets the mode value for this MmultiscriptsType.
     * 
     * @return mode
     */
    public org.w3.www._1998.Math.MathML.ModeType getMode() {
        return mode;
    }


    /**
     * Sets the mode value for this MmultiscriptsType.
     * 
     * @param mode
     */
    public void setMode(org.w3.www._1998.Math.MathML.ModeType mode) {
        this.mode = mode;
    }


    /**
     * Gets the moment value for this MmultiscriptsType.
     * 
     * @return moment
     */
    public org.w3.www._1998.Math.MathML.MomentType getMoment() {
        return moment;
    }


    /**
     * Sets the moment value for this MmultiscriptsType.
     * 
     * @param moment
     */
    public void setMoment(org.w3.www._1998.Math.MathML.MomentType moment) {
        this.moment = moment;
    }


    /**
     * Gets the momentabout value for this MmultiscriptsType.
     * 
     * @return momentabout
     */
    public org.w3.www._1998.Math.MathML.MomentaboutType getMomentabout() {
        return momentabout;
    }


    /**
     * Sets the momentabout value for this MmultiscriptsType.
     * 
     * @param momentabout
     */
    public void setMomentabout(org.w3.www._1998.Math.MathML.MomentaboutType momentabout) {
        this.momentabout = momentabout;
    }


    /**
     * Gets the apply value for this MmultiscriptsType.
     * 
     * @return apply
     */
    public org.w3.www._1998.Math.MathML.ApplyType getApply() {
        return apply;
    }


    /**
     * Sets the apply value for this MmultiscriptsType.
     * 
     * @param apply
     */
    public void setApply(org.w3.www._1998.Math.MathML.ApplyType apply) {
        this.apply = apply;
    }


    /**
     * Gets the interval value for this MmultiscriptsType.
     * 
     * @return interval
     */
    public org.w3.www._1998.Math.MathML.IntervalType getInterval() {
        return interval;
    }


    /**
     * Sets the interval value for this MmultiscriptsType.
     * 
     * @param interval
     */
    public void setInterval(org.w3.www._1998.Math.MathML.IntervalType interval) {
        this.interval = interval;
    }


    /**
     * Gets the inverse value for this MmultiscriptsType.
     * 
     * @return inverse
     */
    public org.w3.www._1998.Math.MathML.InverseType getInverse() {
        return inverse;
    }


    /**
     * Sets the inverse value for this MmultiscriptsType.
     * 
     * @param inverse
     */
    public void setInverse(org.w3.www._1998.Math.MathML.InverseType inverse) {
        this.inverse = inverse;
    }


    /**
     * Gets the condition value for this MmultiscriptsType.
     * 
     * @return condition
     */
    public org.w3.www._1998.Math.MathML.ConditionType getCondition() {
        return condition;
    }


    /**
     * Sets the condition value for this MmultiscriptsType.
     * 
     * @param condition
     */
    public void setCondition(org.w3.www._1998.Math.MathML.ConditionType condition) {
        this.condition = condition;
    }


    /**
     * Gets the declare value for this MmultiscriptsType.
     * 
     * @return declare
     */
    public org.w3.www._1998.Math.MathML.DeclareType getDeclare() {
        return declare;
    }


    /**
     * Sets the declare value for this MmultiscriptsType.
     * 
     * @param declare
     */
    public void setDeclare(org.w3.www._1998.Math.MathML.DeclareType declare) {
        this.declare = declare;
    }


    /**
     * Gets the lambda value for this MmultiscriptsType.
     * 
     * @return lambda
     */
    public org.w3.www._1998.Math.MathML.LambdaType getLambda() {
        return lambda;
    }


    /**
     * Sets the lambda value for this MmultiscriptsType.
     * 
     * @param lambda
     */
    public void setLambda(org.w3.www._1998.Math.MathML.LambdaType lambda) {
        this.lambda = lambda;
    }


    /**
     * Gets the piecewise value for this MmultiscriptsType.
     * 
     * @return piecewise
     */
    public org.w3.www._1998.Math.MathML.PiecewiseType getPiecewise() {
        return piecewise;
    }


    /**
     * Sets the piecewise value for this MmultiscriptsType.
     * 
     * @param piecewise
     */
    public void setPiecewise(org.w3.www._1998.Math.MathML.PiecewiseType piecewise) {
        this.piecewise = piecewise;
    }


    /**
     * Gets the bvar value for this MmultiscriptsType.
     * 
     * @return bvar
     */
    public org.w3.www._1998.Math.MathML.BvarType getBvar() {
        return bvar;
    }


    /**
     * Sets the bvar value for this MmultiscriptsType.
     * 
     * @param bvar
     */
    public void setBvar(org.w3.www._1998.Math.MathML.BvarType bvar) {
        this.bvar = bvar;
    }


    /**
     * Gets the degree value for this MmultiscriptsType.
     * 
     * @return degree
     */
    public org.w3.www._1998.Math.MathML.DegreeType getDegree() {
        return degree;
    }


    /**
     * Sets the degree value for this MmultiscriptsType.
     * 
     * @param degree
     */
    public void setDegree(org.w3.www._1998.Math.MathML.DegreeType degree) {
        this.degree = degree;
    }


    /**
     * Gets the semantics value for this MmultiscriptsType.
     * 
     * @return semantics
     */
    public org.w3.www._1998.Math.MathML.SemanticsType getSemantics() {
        return semantics;
    }


    /**
     * Sets the semantics value for this MmultiscriptsType.
     * 
     * @param semantics
     */
    public void setSemantics(org.w3.www._1998.Math.MathML.SemanticsType semantics) {
        this.semantics = semantics;
    }


    /**
     * Gets the mi2 value for this MmultiscriptsType.
     * 
     * @return mi2
     */
    public org.w3.www._1998.Math.MathML.MiType getMi2() {
        return mi2;
    }


    /**
     * Sets the mi2 value for this MmultiscriptsType.
     * 
     * @param mi2
     */
    public void setMi2(org.w3.www._1998.Math.MathML.MiType mi2) {
        this.mi2 = mi2;
    }


    /**
     * Gets the mo2 value for this MmultiscriptsType.
     * 
     * @return mo2
     */
    public org.w3.www._1998.Math.MathML.MoType getMo2() {
        return mo2;
    }


    /**
     * Sets the mo2 value for this MmultiscriptsType.
     * 
     * @param mo2
     */
    public void setMo2(org.w3.www._1998.Math.MathML.MoType mo2) {
        this.mo2 = mo2;
    }


    /**
     * Gets the mn2 value for this MmultiscriptsType.
     * 
     * @return mn2
     */
    public org.w3.www._1998.Math.MathML.MnType getMn2() {
        return mn2;
    }


    /**
     * Sets the mn2 value for this MmultiscriptsType.
     * 
     * @param mn2
     */
    public void setMn2(org.w3.www._1998.Math.MathML.MnType mn2) {
        this.mn2 = mn2;
    }


    /**
     * Gets the mtext2 value for this MmultiscriptsType.
     * 
     * @return mtext2
     */
    public org.w3.www._1998.Math.MathML.MtextType getMtext2() {
        return mtext2;
    }


    /**
     * Sets the mtext2 value for this MmultiscriptsType.
     * 
     * @param mtext2
     */
    public void setMtext2(org.w3.www._1998.Math.MathML.MtextType mtext2) {
        this.mtext2 = mtext2;
    }


    /**
     * Gets the ms2 value for this MmultiscriptsType.
     * 
     * @return ms2
     */
    public org.w3.www._1998.Math.MathML.MsType getMs2() {
        return ms2;
    }


    /**
     * Sets the ms2 value for this MmultiscriptsType.
     * 
     * @param ms2
     */
    public void setMs2(org.w3.www._1998.Math.MathML.MsType ms2) {
        this.ms2 = ms2;
    }


    /**
     * Gets the mrow2 value for this MmultiscriptsType.
     * 
     * @return mrow2
     */
    public org.w3.www._1998.Math.MathML.MrowType getMrow2() {
        return mrow2;
    }


    /**
     * Sets the mrow2 value for this MmultiscriptsType.
     * 
     * @param mrow2
     */
    public void setMrow2(org.w3.www._1998.Math.MathML.MrowType mrow2) {
        this.mrow2 = mrow2;
    }


    /**
     * Gets the mfrac2 value for this MmultiscriptsType.
     * 
     * @return mfrac2
     */
    public org.w3.www._1998.Math.MathML.MfracType getMfrac2() {
        return mfrac2;
    }


    /**
     * Sets the mfrac2 value for this MmultiscriptsType.
     * 
     * @param mfrac2
     */
    public void setMfrac2(org.w3.www._1998.Math.MathML.MfracType mfrac2) {
        this.mfrac2 = mfrac2;
    }


    /**
     * Gets the msqrt2 value for this MmultiscriptsType.
     * 
     * @return msqrt2
     */
    public org.w3.www._1998.Math.MathML.MsqrtType getMsqrt2() {
        return msqrt2;
    }


    /**
     * Sets the msqrt2 value for this MmultiscriptsType.
     * 
     * @param msqrt2
     */
    public void setMsqrt2(org.w3.www._1998.Math.MathML.MsqrtType msqrt2) {
        this.msqrt2 = msqrt2;
    }


    /**
     * Gets the mroot2 value for this MmultiscriptsType.
     * 
     * @return mroot2
     */
    public org.w3.www._1998.Math.MathML.MrootType getMroot2() {
        return mroot2;
    }


    /**
     * Sets the mroot2 value for this MmultiscriptsType.
     * 
     * @param mroot2
     */
    public void setMroot2(org.w3.www._1998.Math.MathML.MrootType mroot2) {
        this.mroot2 = mroot2;
    }


    /**
     * Gets the mpadded2 value for this MmultiscriptsType.
     * 
     * @return mpadded2
     */
    public org.w3.www._1998.Math.MathML.MpaddedType getMpadded2() {
        return mpadded2;
    }


    /**
     * Sets the mpadded2 value for this MmultiscriptsType.
     * 
     * @param mpadded2
     */
    public void setMpadded2(org.w3.www._1998.Math.MathML.MpaddedType mpadded2) {
        this.mpadded2 = mpadded2;
    }


    /**
     * Gets the mphantom2 value for this MmultiscriptsType.
     * 
     * @return mphantom2
     */
    public org.w3.www._1998.Math.MathML.MphantomType getMphantom2() {
        return mphantom2;
    }


    /**
     * Sets the mphantom2 value for this MmultiscriptsType.
     * 
     * @param mphantom2
     */
    public void setMphantom2(org.w3.www._1998.Math.MathML.MphantomType mphantom2) {
        this.mphantom2 = mphantom2;
    }


    /**
     * Gets the mfenced2 value for this MmultiscriptsType.
     * 
     * @return mfenced2
     */
    public org.w3.www._1998.Math.MathML.MfencedType getMfenced2() {
        return mfenced2;
    }


    /**
     * Sets the mfenced2 value for this MmultiscriptsType.
     * 
     * @param mfenced2
     */
    public void setMfenced2(org.w3.www._1998.Math.MathML.MfencedType mfenced2) {
        this.mfenced2 = mfenced2;
    }


    /**
     * Gets the menclose2 value for this MmultiscriptsType.
     * 
     * @return menclose2
     */
    public org.w3.www._1998.Math.MathML.MencloseType getMenclose2() {
        return menclose2;
    }


    /**
     * Sets the menclose2 value for this MmultiscriptsType.
     * 
     * @param menclose2
     */
    public void setMenclose2(org.w3.www._1998.Math.MathML.MencloseType menclose2) {
        this.menclose2 = menclose2;
    }


    /**
     * Gets the msub2 value for this MmultiscriptsType.
     * 
     * @return msub2
     */
    public org.w3.www._1998.Math.MathML.MsubType getMsub2() {
        return msub2;
    }


    /**
     * Sets the msub2 value for this MmultiscriptsType.
     * 
     * @param msub2
     */
    public void setMsub2(org.w3.www._1998.Math.MathML.MsubType msub2) {
        this.msub2 = msub2;
    }


    /**
     * Gets the msup2 value for this MmultiscriptsType.
     * 
     * @return msup2
     */
    public org.w3.www._1998.Math.MathML.MsupType getMsup2() {
        return msup2;
    }


    /**
     * Sets the msup2 value for this MmultiscriptsType.
     * 
     * @param msup2
     */
    public void setMsup2(org.w3.www._1998.Math.MathML.MsupType msup2) {
        this.msup2 = msup2;
    }


    /**
     * Gets the msubsup2 value for this MmultiscriptsType.
     * 
     * @return msubsup2
     */
    public org.w3.www._1998.Math.MathML.MsubsupType getMsubsup2() {
        return msubsup2;
    }


    /**
     * Sets the msubsup2 value for this MmultiscriptsType.
     * 
     * @param msubsup2
     */
    public void setMsubsup2(org.w3.www._1998.Math.MathML.MsubsupType msubsup2) {
        this.msubsup2 = msubsup2;
    }


    /**
     * Gets the munder2 value for this MmultiscriptsType.
     * 
     * @return munder2
     */
    public org.w3.www._1998.Math.MathML.MunderType getMunder2() {
        return munder2;
    }


    /**
     * Sets the munder2 value for this MmultiscriptsType.
     * 
     * @param munder2
     */
    public void setMunder2(org.w3.www._1998.Math.MathML.MunderType munder2) {
        this.munder2 = munder2;
    }


    /**
     * Gets the mover2 value for this MmultiscriptsType.
     * 
     * @return mover2
     */
    public org.w3.www._1998.Math.MathML.MoverType getMover2() {
        return mover2;
    }


    /**
     * Sets the mover2 value for this MmultiscriptsType.
     * 
     * @param mover2
     */
    public void setMover2(org.w3.www._1998.Math.MathML.MoverType mover2) {
        this.mover2 = mover2;
    }


    /**
     * Gets the munderover2 value for this MmultiscriptsType.
     * 
     * @return munderover2
     */
    public org.w3.www._1998.Math.MathML.MunderoverType getMunderover2() {
        return munderover2;
    }


    /**
     * Sets the munderover2 value for this MmultiscriptsType.
     * 
     * @param munderover2
     */
    public void setMunderover2(org.w3.www._1998.Math.MathML.MunderoverType munderover2) {
        this.munderover2 = munderover2;
    }


    /**
     * Gets the mmultiscripts2 value for this MmultiscriptsType.
     * 
     * @return mmultiscripts2
     */
    public org.w3.www._1998.Math.MathML.MmultiscriptsType getMmultiscripts2() {
        return mmultiscripts2;
    }


    /**
     * Sets the mmultiscripts2 value for this MmultiscriptsType.
     * 
     * @param mmultiscripts2
     */
    public void setMmultiscripts2(org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts2) {
        this.mmultiscripts2 = mmultiscripts2;
    }


    /**
     * Gets the mtable2 value for this MmultiscriptsType.
     * 
     * @return mtable2
     */
    public org.w3.www._1998.Math.MathML.MtableType getMtable2() {
        return mtable2;
    }


    /**
     * Sets the mtable2 value for this MmultiscriptsType.
     * 
     * @param mtable2
     */
    public void setMtable2(org.w3.www._1998.Math.MathML.MtableType mtable2) {
        this.mtable2 = mtable2;
    }


    /**
     * Gets the maligngroup2 value for this MmultiscriptsType.
     * 
     * @return maligngroup2
     */
    public org.w3.www._1998.Math.MathML.MaligngroupType getMaligngroup2() {
        return maligngroup2;
    }


    /**
     * Sets the maligngroup2 value for this MmultiscriptsType.
     * 
     * @param maligngroup2
     */
    public void setMaligngroup2(org.w3.www._1998.Math.MathML.MaligngroupType maligngroup2) {
        this.maligngroup2 = maligngroup2;
    }


    /**
     * Gets the malignmark2 value for this MmultiscriptsType.
     * 
     * @return malignmark2
     */
    public org.w3.www._1998.Math.MathML.MalignmarkType getMalignmark2() {
        return malignmark2;
    }


    /**
     * Sets the malignmark2 value for this MmultiscriptsType.
     * 
     * @param malignmark2
     */
    public void setMalignmark2(org.w3.www._1998.Math.MathML.MalignmarkType malignmark2) {
        this.malignmark2 = malignmark2;
    }


    /**
     * Gets the mspace2 value for this MmultiscriptsType.
     * 
     * @return mspace2
     */
    public org.w3.www._1998.Math.MathML.MspaceType getMspace2() {
        return mspace2;
    }


    /**
     * Sets the mspace2 value for this MmultiscriptsType.
     * 
     * @param mspace2
     */
    public void setMspace2(org.w3.www._1998.Math.MathML.MspaceType mspace2) {
        this.mspace2 = mspace2;
    }


    /**
     * Gets the maction2 value for this MmultiscriptsType.
     * 
     * @return maction2
     */
    public org.w3.www._1998.Math.MathML.MactionType getMaction2() {
        return maction2;
    }


    /**
     * Sets the maction2 value for this MmultiscriptsType.
     * 
     * @param maction2
     */
    public void setMaction2(org.w3.www._1998.Math.MathML.MactionType maction2) {
        this.maction2 = maction2;
    }


    /**
     * Gets the merror2 value for this MmultiscriptsType.
     * 
     * @return merror2
     */
    public org.w3.www._1998.Math.MathML.MerrorType getMerror2() {
        return merror2;
    }


    /**
     * Sets the merror2 value for this MmultiscriptsType.
     * 
     * @param merror2
     */
    public void setMerror2(org.w3.www._1998.Math.MathML.MerrorType merror2) {
        this.merror2 = merror2;
    }


    /**
     * Gets the mstyle2 value for this MmultiscriptsType.
     * 
     * @return mstyle2
     */
    public org.w3.www._1998.Math.MathML.MstyleType getMstyle2() {
        return mstyle2;
    }


    /**
     * Sets the mstyle2 value for this MmultiscriptsType.
     * 
     * @param mstyle2
     */
    public void setMstyle2(org.w3.www._1998.Math.MathML.MstyleType mstyle2) {
        this.mstyle2 = mstyle2;
    }


    /**
     * Gets the cn2 value for this MmultiscriptsType.
     * 
     * @return cn2
     */
    public org.w3.www._1998.Math.MathML.CnType getCn2() {
        return cn2;
    }


    /**
     * Sets the cn2 value for this MmultiscriptsType.
     * 
     * @param cn2
     */
    public void setCn2(org.w3.www._1998.Math.MathML.CnType cn2) {
        this.cn2 = cn2;
    }


    /**
     * Gets the ci2 value for this MmultiscriptsType.
     * 
     * @return ci2
     */
    public org.w3.www._1998.Math.MathML.CiType getCi2() {
        return ci2;
    }


    /**
     * Sets the ci2 value for this MmultiscriptsType.
     * 
     * @param ci2
     */
    public void setCi2(org.w3.www._1998.Math.MathML.CiType ci2) {
        this.ci2 = ci2;
    }


    /**
     * Gets the csymbol2 value for this MmultiscriptsType.
     * 
     * @return csymbol2
     */
    public org.w3.www._1998.Math.MathML.CsymbolType getCsymbol2() {
        return csymbol2;
    }


    /**
     * Sets the csymbol2 value for this MmultiscriptsType.
     * 
     * @param csymbol2
     */
    public void setCsymbol2(org.w3.www._1998.Math.MathML.CsymbolType csymbol2) {
        this.csymbol2 = csymbol2;
    }


    /**
     * Gets the abs2 value for this MmultiscriptsType.
     * 
     * @return abs2
     */
    public org.w3.www._1998.Math.MathML.ArithType getAbs2() {
        return abs2;
    }


    /**
     * Sets the abs2 value for this MmultiscriptsType.
     * 
     * @param abs2
     */
    public void setAbs2(org.w3.www._1998.Math.MathML.ArithType abs2) {
        this.abs2 = abs2;
    }


    /**
     * Gets the conjugate2 value for this MmultiscriptsType.
     * 
     * @return conjugate2
     */
    public org.w3.www._1998.Math.MathML.ArithType getConjugate2() {
        return conjugate2;
    }


    /**
     * Sets the conjugate2 value for this MmultiscriptsType.
     * 
     * @param conjugate2
     */
    public void setConjugate2(org.w3.www._1998.Math.MathML.ArithType conjugate2) {
        this.conjugate2 = conjugate2;
    }


    /**
     * Gets the factorial2 value for this MmultiscriptsType.
     * 
     * @return factorial2
     */
    public org.w3.www._1998.Math.MathML.ArithType getFactorial2() {
        return factorial2;
    }


    /**
     * Sets the factorial2 value for this MmultiscriptsType.
     * 
     * @param factorial2
     */
    public void setFactorial2(org.w3.www._1998.Math.MathML.ArithType factorial2) {
        this.factorial2 = factorial2;
    }


    /**
     * Gets the arg2 value for this MmultiscriptsType.
     * 
     * @return arg2
     */
    public org.w3.www._1998.Math.MathML.ArithType getArg2() {
        return arg2;
    }


    /**
     * Sets the arg2 value for this MmultiscriptsType.
     * 
     * @param arg2
     */
    public void setArg2(org.w3.www._1998.Math.MathML.ArithType arg2) {
        this.arg2 = arg2;
    }


    /**
     * Gets the real2 value for this MmultiscriptsType.
     * 
     * @return real2
     */
    public org.w3.www._1998.Math.MathML.ArithType getReal2() {
        return real2;
    }


    /**
     * Sets the real2 value for this MmultiscriptsType.
     * 
     * @param real2
     */
    public void setReal2(org.w3.www._1998.Math.MathML.ArithType real2) {
        this.real2 = real2;
    }


    /**
     * Gets the imaginary2 value for this MmultiscriptsType.
     * 
     * @return imaginary2
     */
    public org.w3.www._1998.Math.MathML.ArithType getImaginary2() {
        return imaginary2;
    }


    /**
     * Sets the imaginary2 value for this MmultiscriptsType.
     * 
     * @param imaginary2
     */
    public void setImaginary2(org.w3.www._1998.Math.MathML.ArithType imaginary2) {
        this.imaginary2 = imaginary2;
    }


    /**
     * Gets the floor2 value for this MmultiscriptsType.
     * 
     * @return floor2
     */
    public org.w3.www._1998.Math.MathML.ArithType getFloor2() {
        return floor2;
    }


    /**
     * Sets the floor2 value for this MmultiscriptsType.
     * 
     * @param floor2
     */
    public void setFloor2(org.w3.www._1998.Math.MathML.ArithType floor2) {
        this.floor2 = floor2;
    }


    /**
     * Gets the ceiling2 value for this MmultiscriptsType.
     * 
     * @return ceiling2
     */
    public org.w3.www._1998.Math.MathML.ArithType getCeiling2() {
        return ceiling2;
    }


    /**
     * Sets the ceiling2 value for this MmultiscriptsType.
     * 
     * @param ceiling2
     */
    public void setCeiling2(org.w3.www._1998.Math.MathML.ArithType ceiling2) {
        this.ceiling2 = ceiling2;
    }


    /**
     * Gets the quotient2 value for this MmultiscriptsType.
     * 
     * @return quotient2
     */
    public org.w3.www._1998.Math.MathML.ArithType getQuotient2() {
        return quotient2;
    }


    /**
     * Sets the quotient2 value for this MmultiscriptsType.
     * 
     * @param quotient2
     */
    public void setQuotient2(org.w3.www._1998.Math.MathML.ArithType quotient2) {
        this.quotient2 = quotient2;
    }


    /**
     * Gets the divide2 value for this MmultiscriptsType.
     * 
     * @return divide2
     */
    public org.w3.www._1998.Math.MathML.ArithType getDivide2() {
        return divide2;
    }


    /**
     * Sets the divide2 value for this MmultiscriptsType.
     * 
     * @param divide2
     */
    public void setDivide2(org.w3.www._1998.Math.MathML.ArithType divide2) {
        this.divide2 = divide2;
    }


    /**
     * Gets the rem2 value for this MmultiscriptsType.
     * 
     * @return rem2
     */
    public org.w3.www._1998.Math.MathML.ArithType getRem2() {
        return rem2;
    }


    /**
     * Sets the rem2 value for this MmultiscriptsType.
     * 
     * @param rem2
     */
    public void setRem2(org.w3.www._1998.Math.MathML.ArithType rem2) {
        this.rem2 = rem2;
    }


    /**
     * Gets the minus2 value for this MmultiscriptsType.
     * 
     * @return minus2
     */
    public org.w3.www._1998.Math.MathML.ArithType getMinus2() {
        return minus2;
    }


    /**
     * Sets the minus2 value for this MmultiscriptsType.
     * 
     * @param minus2
     */
    public void setMinus2(org.w3.www._1998.Math.MathML.ArithType minus2) {
        this.minus2 = minus2;
    }


    /**
     * Gets the plus2 value for this MmultiscriptsType.
     * 
     * @return plus2
     */
    public org.w3.www._1998.Math.MathML.ArithType getPlus2() {
        return plus2;
    }


    /**
     * Sets the plus2 value for this MmultiscriptsType.
     * 
     * @param plus2
     */
    public void setPlus2(org.w3.www._1998.Math.MathML.ArithType plus2) {
        this.plus2 = plus2;
    }


    /**
     * Gets the times2 value for this MmultiscriptsType.
     * 
     * @return times2
     */
    public org.w3.www._1998.Math.MathML.ArithType getTimes2() {
        return times2;
    }


    /**
     * Sets the times2 value for this MmultiscriptsType.
     * 
     * @param times2
     */
    public void setTimes2(org.w3.www._1998.Math.MathML.ArithType times2) {
        this.times2 = times2;
    }


    /**
     * Gets the power2 value for this MmultiscriptsType.
     * 
     * @return power2
     */
    public org.w3.www._1998.Math.MathML.ArithType getPower2() {
        return power2;
    }


    /**
     * Sets the power2 value for this MmultiscriptsType.
     * 
     * @param power2
     */
    public void setPower2(org.w3.www._1998.Math.MathML.ArithType power2) {
        this.power2 = power2;
    }


    /**
     * Gets the root2 value for this MmultiscriptsType.
     * 
     * @return root2
     */
    public org.w3.www._1998.Math.MathML.ArithType getRoot2() {
        return root2;
    }


    /**
     * Sets the root2 value for this MmultiscriptsType.
     * 
     * @param root2
     */
    public void setRoot2(org.w3.www._1998.Math.MathML.ArithType root2) {
        this.root2 = root2;
    }


    /**
     * Gets the max2 value for this MmultiscriptsType.
     * 
     * @return max2
     */
    public org.w3.www._1998.Math.MathML.ArithType getMax2() {
        return max2;
    }


    /**
     * Sets the max2 value for this MmultiscriptsType.
     * 
     * @param max2
     */
    public void setMax2(org.w3.www._1998.Math.MathML.ArithType max2) {
        this.max2 = max2;
    }


    /**
     * Gets the min2 value for this MmultiscriptsType.
     * 
     * @return min2
     */
    public org.w3.www._1998.Math.MathML.ArithType getMin2() {
        return min2;
    }


    /**
     * Sets the min2 value for this MmultiscriptsType.
     * 
     * @param min2
     */
    public void setMin2(org.w3.www._1998.Math.MathML.ArithType min2) {
        this.min2 = min2;
    }


    /**
     * Gets the gcd2 value for this MmultiscriptsType.
     * 
     * @return gcd2
     */
    public org.w3.www._1998.Math.MathML.ArithType getGcd2() {
        return gcd2;
    }


    /**
     * Sets the gcd2 value for this MmultiscriptsType.
     * 
     * @param gcd2
     */
    public void setGcd2(org.w3.www._1998.Math.MathML.ArithType gcd2) {
        this.gcd2 = gcd2;
    }


    /**
     * Gets the lcm2 value for this MmultiscriptsType.
     * 
     * @return lcm2
     */
    public org.w3.www._1998.Math.MathML.ArithType getLcm2() {
        return lcm2;
    }


    /**
     * Sets the lcm2 value for this MmultiscriptsType.
     * 
     * @param lcm2
     */
    public void setLcm2(org.w3.www._1998.Math.MathML.ArithType lcm2) {
        this.lcm2 = lcm2;
    }


    /**
     * Gets the sum2 value for this MmultiscriptsType.
     * 
     * @return sum2
     */
    public org.w3.www._1998.Math.MathML.ArithType getSum2() {
        return sum2;
    }


    /**
     * Sets the sum2 value for this MmultiscriptsType.
     * 
     * @param sum2
     */
    public void setSum2(org.w3.www._1998.Math.MathML.ArithType sum2) {
        this.sum2 = sum2;
    }


    /**
     * Gets the product2 value for this MmultiscriptsType.
     * 
     * @return product2
     */
    public org.w3.www._1998.Math.MathML.ArithType getProduct2() {
        return product2;
    }


    /**
     * Sets the product2 value for this MmultiscriptsType.
     * 
     * @param product2
     */
    public void setProduct2(org.w3.www._1998.Math.MathML.ArithType product2) {
        this.product2 = product2;
    }


    /**
     * Gets the compose2 value for this MmultiscriptsType.
     * 
     * @return compose2
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCompose2() {
        return compose2;
    }


    /**
     * Sets the compose2 value for this MmultiscriptsType.
     * 
     * @param compose2
     */
    public void setCompose2(org.w3.www._1998.Math.MathML.FunctionsType compose2) {
        this.compose2 = compose2;
    }


    /**
     * Gets the domain2 value for this MmultiscriptsType.
     * 
     * @return domain2
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getDomain2() {
        return domain2;
    }


    /**
     * Sets the domain2 value for this MmultiscriptsType.
     * 
     * @param domain2
     */
    public void setDomain2(org.w3.www._1998.Math.MathML.FunctionsType domain2) {
        this.domain2 = domain2;
    }


    /**
     * Gets the codomain2 value for this MmultiscriptsType.
     * 
     * @return codomain2
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCodomain2() {
        return codomain2;
    }


    /**
     * Sets the codomain2 value for this MmultiscriptsType.
     * 
     * @param codomain2
     */
    public void setCodomain2(org.w3.www._1998.Math.MathML.FunctionsType codomain2) {
        this.codomain2 = codomain2;
    }


    /**
     * Gets the image2 value for this MmultiscriptsType.
     * 
     * @return image2
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getImage2() {
        return image2;
    }


    /**
     * Sets the image2 value for this MmultiscriptsType.
     * 
     * @param image2
     */
    public void setImage2(org.w3.www._1998.Math.MathML.FunctionsType image2) {
        this.image2 = image2;
    }


    /**
     * Gets the domainofapplication2 value for this MmultiscriptsType.
     * 
     * @return domainofapplication2
     */
    public org.w3.www._1998.Math.MathML.DomainofapplicationType getDomainofapplication2() {
        return domainofapplication2;
    }


    /**
     * Sets the domainofapplication2 value for this MmultiscriptsType.
     * 
     * @param domainofapplication2
     */
    public void setDomainofapplication2(org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication2) {
        this.domainofapplication2 = domainofapplication2;
    }


    /**
     * Gets the ident2 value for this MmultiscriptsType.
     * 
     * @return ident2
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getIdent2() {
        return ident2;
    }


    /**
     * Sets the ident2 value for this MmultiscriptsType.
     * 
     * @param ident2
     */
    public void setIdent2(org.w3.www._1998.Math.MathML.FunctionsType ident2) {
        this.ident2 = ident2;
    }


    /**
     * Gets the and2 value for this MmultiscriptsType.
     * 
     * @return and2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getAnd2() {
        return and2;
    }


    /**
     * Sets the and2 value for this MmultiscriptsType.
     * 
     * @param and2
     */
    public void setAnd2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType and2) {
        this.and2 = and2;
    }


    /**
     * Gets the or2 value for this MmultiscriptsType.
     * 
     * @return or2
     */
    public org.w3.www._1998.Math.MathML.LogicType getOr2() {
        return or2;
    }


    /**
     * Sets the or2 value for this MmultiscriptsType.
     * 
     * @param or2
     */
    public void setOr2(org.w3.www._1998.Math.MathML.LogicType or2) {
        this.or2 = or2;
    }


    /**
     * Gets the xor2 value for this MmultiscriptsType.
     * 
     * @return xor2
     */
    public org.w3.www._1998.Math.MathML.LogicType getXor2() {
        return xor2;
    }


    /**
     * Sets the xor2 value for this MmultiscriptsType.
     * 
     * @param xor2
     */
    public void setXor2(org.w3.www._1998.Math.MathML.LogicType xor2) {
        this.xor2 = xor2;
    }


    /**
     * Gets the not2 value for this MmultiscriptsType.
     * 
     * @return not2
     */
    public org.w3.www._1998.Math.MathML.LogicType getNot2() {
        return not2;
    }


    /**
     * Sets the not2 value for this MmultiscriptsType.
     * 
     * @param not2
     */
    public void setNot2(org.w3.www._1998.Math.MathML.LogicType not2) {
        this.not2 = not2;
    }


    /**
     * Gets the exists2 value for this MmultiscriptsType.
     * 
     * @return exists2
     */
    public org.w3.www._1998.Math.MathML.LogicType getExists2() {
        return exists2;
    }


    /**
     * Sets the exists2 value for this MmultiscriptsType.
     * 
     * @param exists2
     */
    public void setExists2(org.w3.www._1998.Math.MathML.LogicType exists2) {
        this.exists2 = exists2;
    }


    /**
     * Gets the forall2 value for this MmultiscriptsType.
     * 
     * @return forall2
     */
    public org.w3.www._1998.Math.MathML.LogicType getForall2() {
        return forall2;
    }


    /**
     * Sets the forall2 value for this MmultiscriptsType.
     * 
     * @param forall2
     */
    public void setForall2(org.w3.www._1998.Math.MathML.LogicType forall2) {
        this.forall2 = forall2;
    }


    /**
     * Gets the implies2 value for this MmultiscriptsType.
     * 
     * @return implies2
     */
    public org.w3.www._1998.Math.MathML.LogicType getImplies2() {
        return implies2;
    }


    /**
     * Sets the implies2 value for this MmultiscriptsType.
     * 
     * @param implies2
     */
    public void setImplies2(org.w3.www._1998.Math.MathML.LogicType implies2) {
        this.implies2 = implies2;
    }


    /**
     * Gets the naturalnumbers2 value for this MmultiscriptsType.
     * 
     * @return naturalnumbers2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNaturalnumbers2() {
        return naturalnumbers2;
    }


    /**
     * Sets the naturalnumbers2 value for this MmultiscriptsType.
     * 
     * @param naturalnumbers2
     */
    public void setNaturalnumbers2(org.w3.www._1998.Math.MathML.ConstantType naturalnumbers2) {
        this.naturalnumbers2 = naturalnumbers2;
    }


    /**
     * Gets the primes2 value for this MmultiscriptsType.
     * 
     * @return primes2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPrimes2() {
        return primes2;
    }


    /**
     * Sets the primes2 value for this MmultiscriptsType.
     * 
     * @param primes2
     */
    public void setPrimes2(org.w3.www._1998.Math.MathML.ConstantType primes2) {
        this.primes2 = primes2;
    }


    /**
     * Gets the integers2 value for this MmultiscriptsType.
     * 
     * @return integers2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getIntegers2() {
        return integers2;
    }


    /**
     * Sets the integers2 value for this MmultiscriptsType.
     * 
     * @param integers2
     */
    public void setIntegers2(org.w3.www._1998.Math.MathML.ConstantType integers2) {
        this.integers2 = integers2;
    }


    /**
     * Gets the rationals2 value for this MmultiscriptsType.
     * 
     * @return rationals2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getRationals2() {
        return rationals2;
    }


    /**
     * Sets the rationals2 value for this MmultiscriptsType.
     * 
     * @param rationals2
     */
    public void setRationals2(org.w3.www._1998.Math.MathML.ConstantType rationals2) {
        this.rationals2 = rationals2;
    }


    /**
     * Gets the reals2 value for this MmultiscriptsType.
     * 
     * @return reals2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getReals2() {
        return reals2;
    }


    /**
     * Sets the reals2 value for this MmultiscriptsType.
     * 
     * @param reals2
     */
    public void setReals2(org.w3.www._1998.Math.MathML.ConstantType reals2) {
        this.reals2 = reals2;
    }


    /**
     * Gets the complexes2 value for this MmultiscriptsType.
     * 
     * @return complexes2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getComplexes2() {
        return complexes2;
    }


    /**
     * Sets the complexes2 value for this MmultiscriptsType.
     * 
     * @param complexes2
     */
    public void setComplexes2(org.w3.www._1998.Math.MathML.ConstantType complexes2) {
        this.complexes2 = complexes2;
    }


    /**
     * Gets the emptyset2 value for this MmultiscriptsType.
     * 
     * @return emptyset2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEmptyset2() {
        return emptyset2;
    }


    /**
     * Sets the emptyset2 value for this MmultiscriptsType.
     * 
     * @param emptyset2
     */
    public void setEmptyset2(org.w3.www._1998.Math.MathML.ConstantType emptyset2) {
        this.emptyset2 = emptyset2;
    }


    /**
     * Gets the exponentiale2 value for this MmultiscriptsType.
     * 
     * @return exponentiale2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getExponentiale2() {
        return exponentiale2;
    }


    /**
     * Sets the exponentiale2 value for this MmultiscriptsType.
     * 
     * @param exponentiale2
     */
    public void setExponentiale2(org.w3.www._1998.Math.MathML.ConstantType exponentiale2) {
        this.exponentiale2 = exponentiale2;
    }


    /**
     * Gets the imaginaryi2 value for this MmultiscriptsType.
     * 
     * @return imaginaryi2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getImaginaryi2() {
        return imaginaryi2;
    }


    /**
     * Sets the imaginaryi2 value for this MmultiscriptsType.
     * 
     * @param imaginaryi2
     */
    public void setImaginaryi2(org.w3.www._1998.Math.MathML.ConstantType imaginaryi2) {
        this.imaginaryi2 = imaginaryi2;
    }


    /**
     * Gets the pi2 value for this MmultiscriptsType.
     * 
     * @return pi2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPi2() {
        return pi2;
    }


    /**
     * Sets the pi2 value for this MmultiscriptsType.
     * 
     * @param pi2
     */
    public void setPi2(org.w3.www._1998.Math.MathML.ConstantType pi2) {
        this.pi2 = pi2;
    }


    /**
     * Gets the eulergamma2 value for this MmultiscriptsType.
     * 
     * @return eulergamma2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEulergamma2() {
        return eulergamma2;
    }


    /**
     * Sets the eulergamma2 value for this MmultiscriptsType.
     * 
     * @param eulergamma2
     */
    public void setEulergamma2(org.w3.www._1998.Math.MathML.ConstantType eulergamma2) {
        this.eulergamma2 = eulergamma2;
    }


    /**
     * Gets the _true2 value for this MmultiscriptsType.
     * 
     * @return _true2
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_true2() {
        return _true2;
    }


    /**
     * Sets the _true2 value for this MmultiscriptsType.
     * 
     * @param _true2
     */
    public void set_true2(org.w3.www._1998.Math.MathML.ConstantType _true2) {
        this._true2 = _true2;
    }


    /**
     * Gets the _false2 value for this MmultiscriptsType.
     * 
     * @return _false2
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_false2() {
        return _false2;
    }


    /**
     * Sets the _false2 value for this MmultiscriptsType.
     * 
     * @param _false2
     */
    public void set_false2(org.w3.www._1998.Math.MathML.ConstantType _false2) {
        this._false2 = _false2;
    }


    /**
     * Gets the infinity2 value for this MmultiscriptsType.
     * 
     * @return infinity2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getInfinity2() {
        return infinity2;
    }


    /**
     * Sets the infinity2 value for this MmultiscriptsType.
     * 
     * @param infinity2
     */
    public void setInfinity2(org.w3.www._1998.Math.MathML.ConstantType infinity2) {
        this.infinity2 = infinity2;
    }


    /**
     * Gets the notanumber2 value for this MmultiscriptsType.
     * 
     * @return notanumber2
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNotanumber2() {
        return notanumber2;
    }


    /**
     * Sets the notanumber2 value for this MmultiscriptsType.
     * 
     * @param notanumber2
     */
    public void setNotanumber2(org.w3.www._1998.Math.MathML.ConstantType notanumber2) {
        this.notanumber2 = notanumber2;
    }


    /**
     * Gets the set2 value for this MmultiscriptsType.
     * 
     * @return set2
     */
    public org.w3.www._1998.Math.MathML.SetType getSet2() {
        return set2;
    }


    /**
     * Sets the set2 value for this MmultiscriptsType.
     * 
     * @param set2
     */
    public void setSet2(org.w3.www._1998.Math.MathML.SetType set2) {
        this.set2 = set2;
    }


    /**
     * Gets the list2 value for this MmultiscriptsType.
     * 
     * @return list2
     */
    public org.w3.www._1998.Math.MathML.ListType getList2() {
        return list2;
    }


    /**
     * Sets the list2 value for this MmultiscriptsType.
     * 
     * @param list2
     */
    public void setList2(org.w3.www._1998.Math.MathML.ListType list2) {
        this.list2 = list2;
    }


    /**
     * Gets the union2 value for this MmultiscriptsType.
     * 
     * @return union2
     */
    public org.w3.www._1998.Math.MathML.UnionType getUnion2() {
        return union2;
    }


    /**
     * Sets the union2 value for this MmultiscriptsType.
     * 
     * @param union2
     */
    public void setUnion2(org.w3.www._1998.Math.MathML.UnionType union2) {
        this.union2 = union2;
    }


    /**
     * Gets the intersect2 value for this MmultiscriptsType.
     * 
     * @return intersect2
     */
    public org.w3.www._1998.Math.MathML.IntersectType getIntersect2() {
        return intersect2;
    }


    /**
     * Sets the intersect2 value for this MmultiscriptsType.
     * 
     * @param intersect2
     */
    public void setIntersect2(org.w3.www._1998.Math.MathML.IntersectType intersect2) {
        this.intersect2 = intersect2;
    }


    /**
     * Gets the in2 value for this MmultiscriptsType.
     * 
     * @return in2
     */
    public org.w3.www._1998.Math.MathML.InType getIn2() {
        return in2;
    }


    /**
     * Sets the in2 value for this MmultiscriptsType.
     * 
     * @param in2
     */
    public void setIn2(org.w3.www._1998.Math.MathML.InType in2) {
        this.in2 = in2;
    }


    /**
     * Gets the notin2 value for this MmultiscriptsType.
     * 
     * @return notin2
     */
    public org.w3.www._1998.Math.MathML.NotinType getNotin2() {
        return notin2;
    }


    /**
     * Sets the notin2 value for this MmultiscriptsType.
     * 
     * @param notin2
     */
    public void setNotin2(org.w3.www._1998.Math.MathML.NotinType notin2) {
        this.notin2 = notin2;
    }


    /**
     * Gets the subset2 value for this MmultiscriptsType.
     * 
     * @return subset2
     */
    public org.w3.www._1998.Math.MathML.SubsetType getSubset2() {
        return subset2;
    }


    /**
     * Sets the subset2 value for this MmultiscriptsType.
     * 
     * @param subset2
     */
    public void setSubset2(org.w3.www._1998.Math.MathML.SubsetType subset2) {
        this.subset2 = subset2;
    }


    /**
     * Gets the prsubset2 value for this MmultiscriptsType.
     * 
     * @return prsubset2
     */
    public org.w3.www._1998.Math.MathML.PrsubsetType getPrsubset2() {
        return prsubset2;
    }


    /**
     * Sets the prsubset2 value for this MmultiscriptsType.
     * 
     * @param prsubset2
     */
    public void setPrsubset2(org.w3.www._1998.Math.MathML.PrsubsetType prsubset2) {
        this.prsubset2 = prsubset2;
    }


    /**
     * Gets the notsubset2 value for this MmultiscriptsType.
     * 
     * @return notsubset2
     */
    public org.w3.www._1998.Math.MathML.NotsubsetType getNotsubset2() {
        return notsubset2;
    }


    /**
     * Sets the notsubset2 value for this MmultiscriptsType.
     * 
     * @param notsubset2
     */
    public void setNotsubset2(org.w3.www._1998.Math.MathML.NotsubsetType notsubset2) {
        this.notsubset2 = notsubset2;
    }


    /**
     * Gets the notprsubset2 value for this MmultiscriptsType.
     * 
     * @return notprsubset2
     */
    public org.w3.www._1998.Math.MathML.NotprsubsetType getNotprsubset2() {
        return notprsubset2;
    }


    /**
     * Sets the notprsubset2 value for this MmultiscriptsType.
     * 
     * @param notprsubset2
     */
    public void setNotprsubset2(org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset2) {
        this.notprsubset2 = notprsubset2;
    }


    /**
     * Gets the setdiff2 value for this MmultiscriptsType.
     * 
     * @return setdiff2
     */
    public org.w3.www._1998.Math.MathML.SetdiffType getSetdiff2() {
        return setdiff2;
    }


    /**
     * Sets the setdiff2 value for this MmultiscriptsType.
     * 
     * @param setdiff2
     */
    public void setSetdiff2(org.w3.www._1998.Math.MathML.SetdiffType setdiff2) {
        this.setdiff2 = setdiff2;
    }


    /**
     * Gets the card2 value for this MmultiscriptsType.
     * 
     * @return card2
     */
    public org.w3.www._1998.Math.MathML.CardType getCard2() {
        return card2;
    }


    /**
     * Sets the card2 value for this MmultiscriptsType.
     * 
     * @param card2
     */
    public void setCard2(org.w3.www._1998.Math.MathML.CardType card2) {
        this.card2 = card2;
    }


    /**
     * Gets the cartesianproduct2 value for this MmultiscriptsType.
     * 
     * @return cartesianproduct2
     */
    public org.w3.www._1998.Math.MathML.CartesianproductType getCartesianproduct2() {
        return cartesianproduct2;
    }


    /**
     * Sets the cartesianproduct2 value for this MmultiscriptsType.
     * 
     * @param cartesianproduct2
     */
    public void setCartesianproduct2(org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct2) {
        this.cartesianproduct2 = cartesianproduct2;
    }


    /**
     * Gets the eq2 value for this MmultiscriptsType.
     * 
     * @return eq2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEq2() {
        return eq2;
    }


    /**
     * Sets the eq2 value for this MmultiscriptsType.
     * 
     * @param eq2
     */
    public void setEq2(org.w3.www._1998.Math.MathML.RelationsType eq2) {
        this.eq2 = eq2;
    }


    /**
     * Gets the neq2 value for this MmultiscriptsType.
     * 
     * @return neq2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getNeq2() {
        return neq2;
    }


    /**
     * Sets the neq2 value for this MmultiscriptsType.
     * 
     * @param neq2
     */
    public void setNeq2(org.w3.www._1998.Math.MathML.RelationsType neq2) {
        this.neq2 = neq2;
    }


    /**
     * Gets the leq2 value for this MmultiscriptsType.
     * 
     * @return leq2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLeq2() {
        return leq2;
    }


    /**
     * Sets the leq2 value for this MmultiscriptsType.
     * 
     * @param leq2
     */
    public void setLeq2(org.w3.www._1998.Math.MathML.RelationsType leq2) {
        this.leq2 = leq2;
    }


    /**
     * Gets the lt2 value for this MmultiscriptsType.
     * 
     * @return lt2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLt2() {
        return lt2;
    }


    /**
     * Sets the lt2 value for this MmultiscriptsType.
     * 
     * @param lt2
     */
    public void setLt2(org.w3.www._1998.Math.MathML.RelationsType lt2) {
        this.lt2 = lt2;
    }


    /**
     * Gets the geq2 value for this MmultiscriptsType.
     * 
     * @return geq2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGeq2() {
        return geq2;
    }


    /**
     * Sets the geq2 value for this MmultiscriptsType.
     * 
     * @param geq2
     */
    public void setGeq2(org.w3.www._1998.Math.MathML.RelationsType geq2) {
        this.geq2 = geq2;
    }


    /**
     * Gets the gt2 value for this MmultiscriptsType.
     * 
     * @return gt2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGt2() {
        return gt2;
    }


    /**
     * Sets the gt2 value for this MmultiscriptsType.
     * 
     * @param gt2
     */
    public void setGt2(org.w3.www._1998.Math.MathML.RelationsType gt2) {
        this.gt2 = gt2;
    }


    /**
     * Gets the equivalent2 value for this MmultiscriptsType.
     * 
     * @return equivalent2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEquivalent2() {
        return equivalent2;
    }


    /**
     * Sets the equivalent2 value for this MmultiscriptsType.
     * 
     * @param equivalent2
     */
    public void setEquivalent2(org.w3.www._1998.Math.MathML.RelationsType equivalent2) {
        this.equivalent2 = equivalent2;
    }


    /**
     * Gets the approx2 value for this MmultiscriptsType.
     * 
     * @return approx2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getApprox2() {
        return approx2;
    }


    /**
     * Sets the approx2 value for this MmultiscriptsType.
     * 
     * @param approx2
     */
    public void setApprox2(org.w3.www._1998.Math.MathML.RelationsType approx2) {
        this.approx2 = approx2;
    }


    /**
     * Gets the factorof2 value for this MmultiscriptsType.
     * 
     * @return factorof2
     */
    public org.w3.www._1998.Math.MathML.RelationsType getFactorof2() {
        return factorof2;
    }


    /**
     * Sets the factorof2 value for this MmultiscriptsType.
     * 
     * @param factorof2
     */
    public void setFactorof2(org.w3.www._1998.Math.MathML.RelationsType factorof2) {
        this.factorof2 = factorof2;
    }


    /**
     * Gets the exp2 value for this MmultiscriptsType.
     * 
     * @return exp2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getExp2() {
        return exp2;
    }


    /**
     * Sets the exp2 value for this MmultiscriptsType.
     * 
     * @param exp2
     */
    public void setExp2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp2) {
        this.exp2 = exp2;
    }


    /**
     * Gets the ln2 value for this MmultiscriptsType.
     * 
     * @return ln2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLn2() {
        return ln2;
    }


    /**
     * Sets the ln2 value for this MmultiscriptsType.
     * 
     * @param ln2
     */
    public void setLn2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln2) {
        this.ln2 = ln2;
    }


    /**
     * Gets the log2 value for this MmultiscriptsType.
     * 
     * @return log2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLog2() {
        return log2;
    }


    /**
     * Sets the log2 value for this MmultiscriptsType.
     * 
     * @param log2
     */
    public void setLog2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType log2) {
        this.log2 = log2;
    }


    /**
     * Gets the logbase2 value for this MmultiscriptsType.
     * 
     * @return logbase2
     */
    public org.w3.www._1998.Math.MathML.LogbaseType getLogbase2() {
        return logbase2;
    }


    /**
     * Sets the logbase2 value for this MmultiscriptsType.
     * 
     * @param logbase2
     */
    public void setLogbase2(org.w3.www._1998.Math.MathML.LogbaseType logbase2) {
        this.logbase2 = logbase2;
    }


    /**
     * Gets the sin2 value for this MmultiscriptsType.
     * 
     * @return sin2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSin2() {
        return sin2;
    }


    /**
     * Sets the sin2 value for this MmultiscriptsType.
     * 
     * @param sin2
     */
    public void setSin2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin2) {
        this.sin2 = sin2;
    }


    /**
     * Gets the cos2 value for this MmultiscriptsType.
     * 
     * @return cos2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCos2() {
        return cos2;
    }


    /**
     * Sets the cos2 value for this MmultiscriptsType.
     * 
     * @param cos2
     */
    public void setCos2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos2) {
        this.cos2 = cos2;
    }


    /**
     * Gets the tan2 value for this MmultiscriptsType.
     * 
     * @return tan2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTan2() {
        return tan2;
    }


    /**
     * Sets the tan2 value for this MmultiscriptsType.
     * 
     * @param tan2
     */
    public void setTan2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan2) {
        this.tan2 = tan2;
    }


    /**
     * Gets the sec2 value for this MmultiscriptsType.
     * 
     * @return sec2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSec2() {
        return sec2;
    }


    /**
     * Sets the sec2 value for this MmultiscriptsType.
     * 
     * @param sec2
     */
    public void setSec2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec2) {
        this.sec2 = sec2;
    }


    /**
     * Gets the csc2 value for this MmultiscriptsType.
     * 
     * @return csc2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsc2() {
        return csc2;
    }


    /**
     * Sets the csc2 value for this MmultiscriptsType.
     * 
     * @param csc2
     */
    public void setCsc2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc2) {
        this.csc2 = csc2;
    }


    /**
     * Gets the cot2 value for this MmultiscriptsType.
     * 
     * @return cot2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCot2() {
        return cot2;
    }


    /**
     * Sets the cot2 value for this MmultiscriptsType.
     * 
     * @param cot2
     */
    public void setCot2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot2) {
        this.cot2 = cot2;
    }


    /**
     * Gets the arcsin2 value for this MmultiscriptsType.
     * 
     * @return arcsin2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsin2() {
        return arcsin2;
    }


    /**
     * Sets the arcsin2 value for this MmultiscriptsType.
     * 
     * @param arcsin2
     */
    public void setArcsin2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin2) {
        this.arcsin2 = arcsin2;
    }


    /**
     * Gets the arccos2 value for this MmultiscriptsType.
     * 
     * @return arccos2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccos2() {
        return arccos2;
    }


    /**
     * Sets the arccos2 value for this MmultiscriptsType.
     * 
     * @param arccos2
     */
    public void setArccos2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos2) {
        this.arccos2 = arccos2;
    }


    /**
     * Gets the arctan2 value for this MmultiscriptsType.
     * 
     * @return arctan2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctan2() {
        return arctan2;
    }


    /**
     * Sets the arctan2 value for this MmultiscriptsType.
     * 
     * @param arctan2
     */
    public void setArctan2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan2) {
        this.arctan2 = arctan2;
    }


    /**
     * Gets the arcsec2 value for this MmultiscriptsType.
     * 
     * @return arcsec2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsec2() {
        return arcsec2;
    }


    /**
     * Sets the arcsec2 value for this MmultiscriptsType.
     * 
     * @param arcsec2
     */
    public void setArcsec2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec2) {
        this.arcsec2 = arcsec2;
    }


    /**
     * Gets the arccsc2 value for this MmultiscriptsType.
     * 
     * @return arccsc2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsc2() {
        return arccsc2;
    }


    /**
     * Sets the arccsc2 value for this MmultiscriptsType.
     * 
     * @param arccsc2
     */
    public void setArccsc2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc2) {
        this.arccsc2 = arccsc2;
    }


    /**
     * Gets the arccot2 value for this MmultiscriptsType.
     * 
     * @return arccot2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccot2() {
        return arccot2;
    }


    /**
     * Sets the arccot2 value for this MmultiscriptsType.
     * 
     * @param arccot2
     */
    public void setArccot2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot2) {
        this.arccot2 = arccot2;
    }


    /**
     * Gets the sinh2 value for this MmultiscriptsType.
     * 
     * @return sinh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSinh2() {
        return sinh2;
    }


    /**
     * Sets the sinh2 value for this MmultiscriptsType.
     * 
     * @param sinh2
     */
    public void setSinh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh2) {
        this.sinh2 = sinh2;
    }


    /**
     * Gets the cosh2 value for this MmultiscriptsType.
     * 
     * @return cosh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCosh2() {
        return cosh2;
    }


    /**
     * Sets the cosh2 value for this MmultiscriptsType.
     * 
     * @param cosh2
     */
    public void setCosh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh2) {
        this.cosh2 = cosh2;
    }


    /**
     * Gets the tanh2 value for this MmultiscriptsType.
     * 
     * @return tanh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTanh2() {
        return tanh2;
    }


    /**
     * Sets the tanh2 value for this MmultiscriptsType.
     * 
     * @param tanh2
     */
    public void setTanh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh2) {
        this.tanh2 = tanh2;
    }


    /**
     * Gets the sech2 value for this MmultiscriptsType.
     * 
     * @return sech2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSech2() {
        return sech2;
    }


    /**
     * Sets the sech2 value for this MmultiscriptsType.
     * 
     * @param sech2
     */
    public void setSech2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech2) {
        this.sech2 = sech2;
    }


    /**
     * Gets the csch2 value for this MmultiscriptsType.
     * 
     * @return csch2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsch2() {
        return csch2;
    }


    /**
     * Sets the csch2 value for this MmultiscriptsType.
     * 
     * @param csch2
     */
    public void setCsch2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch2) {
        this.csch2 = csch2;
    }


    /**
     * Gets the coth2 value for this MmultiscriptsType.
     * 
     * @return coth2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCoth2() {
        return coth2;
    }


    /**
     * Sets the coth2 value for this MmultiscriptsType.
     * 
     * @param coth2
     */
    public void setCoth2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth2) {
        this.coth2 = coth2;
    }


    /**
     * Gets the arccosh2 value for this MmultiscriptsType.
     * 
     * @return arccosh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccosh2() {
        return arccosh2;
    }


    /**
     * Sets the arccosh2 value for this MmultiscriptsType.
     * 
     * @param arccosh2
     */
    public void setArccosh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh2) {
        this.arccosh2 = arccosh2;
    }


    /**
     * Gets the arccoth2 value for this MmultiscriptsType.
     * 
     * @return arccoth2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccoth2() {
        return arccoth2;
    }


    /**
     * Sets the arccoth2 value for this MmultiscriptsType.
     * 
     * @param arccoth2
     */
    public void setArccoth2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth2) {
        this.arccoth2 = arccoth2;
    }


    /**
     * Gets the arccsch2 value for this MmultiscriptsType.
     * 
     * @return arccsch2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsch2() {
        return arccsch2;
    }


    /**
     * Sets the arccsch2 value for this MmultiscriptsType.
     * 
     * @param arccsch2
     */
    public void setArccsch2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch2) {
        this.arccsch2 = arccsch2;
    }


    /**
     * Gets the arcsech2 value for this MmultiscriptsType.
     * 
     * @return arcsech2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsech2() {
        return arcsech2;
    }


    /**
     * Sets the arcsech2 value for this MmultiscriptsType.
     * 
     * @param arcsech2
     */
    public void setArcsech2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech2) {
        this.arcsech2 = arcsech2;
    }


    /**
     * Gets the arcsinh2 value for this MmultiscriptsType.
     * 
     * @return arcsinh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsinh2() {
        return arcsinh2;
    }


    /**
     * Sets the arcsinh2 value for this MmultiscriptsType.
     * 
     * @param arcsinh2
     */
    public void setArcsinh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh2) {
        this.arcsinh2 = arcsinh2;
    }


    /**
     * Gets the arctanh2 value for this MmultiscriptsType.
     * 
     * @return arctanh2
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctanh2() {
        return arctanh2;
    }


    /**
     * Sets the arctanh2 value for this MmultiscriptsType.
     * 
     * @param arctanh2
     */
    public void setArctanh2(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh2) {
        this.arctanh2 = arctanh2;
    }


    /**
     * Gets the _int2 value for this MmultiscriptsType.
     * 
     * @return _int2
     */
    public org.w3.www._1998.Math.MathML.IntType get_int2() {
        return _int2;
    }


    /**
     * Sets the _int2 value for this MmultiscriptsType.
     * 
     * @param _int2
     */
    public void set_int2(org.w3.www._1998.Math.MathML.IntType _int2) {
        this._int2 = _int2;
    }


    /**
     * Gets the diff2 value for this MmultiscriptsType.
     * 
     * @return diff2
     */
    public org.w3.www._1998.Math.MathML.DiffType getDiff2() {
        return diff2;
    }


    /**
     * Sets the diff2 value for this MmultiscriptsType.
     * 
     * @param diff2
     */
    public void setDiff2(org.w3.www._1998.Math.MathML.DiffType diff2) {
        this.diff2 = diff2;
    }


    /**
     * Gets the partialdiff2 value for this MmultiscriptsType.
     * 
     * @return partialdiff2
     */
    public org.w3.www._1998.Math.MathML.PartialdiffType getPartialdiff2() {
        return partialdiff2;
    }


    /**
     * Sets the partialdiff2 value for this MmultiscriptsType.
     * 
     * @param partialdiff2
     */
    public void setPartialdiff2(org.w3.www._1998.Math.MathML.PartialdiffType partialdiff2) {
        this.partialdiff2 = partialdiff2;
    }


    /**
     * Gets the limit2 value for this MmultiscriptsType.
     * 
     * @return limit2
     */
    public org.w3.www._1998.Math.MathML.LimitType getLimit2() {
        return limit2;
    }


    /**
     * Sets the limit2 value for this MmultiscriptsType.
     * 
     * @param limit2
     */
    public void setLimit2(org.w3.www._1998.Math.MathML.LimitType limit2) {
        this.limit2 = limit2;
    }


    /**
     * Gets the lowlimit2 value for this MmultiscriptsType.
     * 
     * @return lowlimit2
     */
    public org.w3.www._1998.Math.MathML.LowlimitType getLowlimit2() {
        return lowlimit2;
    }


    /**
     * Sets the lowlimit2 value for this MmultiscriptsType.
     * 
     * @param lowlimit2
     */
    public void setLowlimit2(org.w3.www._1998.Math.MathML.LowlimitType lowlimit2) {
        this.lowlimit2 = lowlimit2;
    }


    /**
     * Gets the uplimit2 value for this MmultiscriptsType.
     * 
     * @return uplimit2
     */
    public org.w3.www._1998.Math.MathML.UplimitType getUplimit2() {
        return uplimit2;
    }


    /**
     * Sets the uplimit2 value for this MmultiscriptsType.
     * 
     * @param uplimit2
     */
    public void setUplimit2(org.w3.www._1998.Math.MathML.UplimitType uplimit2) {
        this.uplimit2 = uplimit2;
    }


    /**
     * Gets the tendsto2 value for this MmultiscriptsType.
     * 
     * @return tendsto2
     */
    public org.w3.www._1998.Math.MathML.TendstoType getTendsto2() {
        return tendsto2;
    }


    /**
     * Sets the tendsto2 value for this MmultiscriptsType.
     * 
     * @param tendsto2
     */
    public void setTendsto2(org.w3.www._1998.Math.MathML.TendstoType tendsto2) {
        this.tendsto2 = tendsto2;
    }


    /**
     * Gets the vector2 value for this MmultiscriptsType.
     * 
     * @return vector2
     */
    public org.w3.www._1998.Math.MathML.VectorType getVector2() {
        return vector2;
    }


    /**
     * Sets the vector2 value for this MmultiscriptsType.
     * 
     * @param vector2
     */
    public void setVector2(org.w3.www._1998.Math.MathML.VectorType vector2) {
        this.vector2 = vector2;
    }


    /**
     * Gets the matrix2 value for this MmultiscriptsType.
     * 
     * @return matrix2
     */
    public org.w3.www._1998.Math.MathML.MatrixType getMatrix2() {
        return matrix2;
    }


    /**
     * Sets the matrix2 value for this MmultiscriptsType.
     * 
     * @param matrix2
     */
    public void setMatrix2(org.w3.www._1998.Math.MathML.MatrixType matrix2) {
        this.matrix2 = matrix2;
    }


    /**
     * Gets the determinant2 value for this MmultiscriptsType.
     * 
     * @return determinant2
     */
    public org.w3.www._1998.Math.MathML.DeterminantType getDeterminant2() {
        return determinant2;
    }


    /**
     * Sets the determinant2 value for this MmultiscriptsType.
     * 
     * @param determinant2
     */
    public void setDeterminant2(org.w3.www._1998.Math.MathML.DeterminantType determinant2) {
        this.determinant2 = determinant2;
    }


    /**
     * Gets the transpose2 value for this MmultiscriptsType.
     * 
     * @return transpose2
     */
    public org.w3.www._1998.Math.MathML.TransposeType getTranspose2() {
        return transpose2;
    }


    /**
     * Sets the transpose2 value for this MmultiscriptsType.
     * 
     * @param transpose2
     */
    public void setTranspose2(org.w3.www._1998.Math.MathML.TransposeType transpose2) {
        this.transpose2 = transpose2;
    }


    /**
     * Gets the selector2 value for this MmultiscriptsType.
     * 
     * @return selector2
     */
    public org.w3.www._1998.Math.MathML.SelectorType getSelector2() {
        return selector2;
    }


    /**
     * Sets the selector2 value for this MmultiscriptsType.
     * 
     * @param selector2
     */
    public void setSelector2(org.w3.www._1998.Math.MathML.SelectorType selector2) {
        this.selector2 = selector2;
    }


    /**
     * Gets the vectorproduct2 value for this MmultiscriptsType.
     * 
     * @return vectorproduct2
     */
    public org.w3.www._1998.Math.MathML.VectorproductType getVectorproduct2() {
        return vectorproduct2;
    }


    /**
     * Sets the vectorproduct2 value for this MmultiscriptsType.
     * 
     * @param vectorproduct2
     */
    public void setVectorproduct2(org.w3.www._1998.Math.MathML.VectorproductType vectorproduct2) {
        this.vectorproduct2 = vectorproduct2;
    }


    /**
     * Gets the scalarproduct2 value for this MmultiscriptsType.
     * 
     * @return scalarproduct2
     */
    public org.w3.www._1998.Math.MathML.ScalarproductType getScalarproduct2() {
        return scalarproduct2;
    }


    /**
     * Sets the scalarproduct2 value for this MmultiscriptsType.
     * 
     * @param scalarproduct2
     */
    public void setScalarproduct2(org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct2) {
        this.scalarproduct2 = scalarproduct2;
    }


    /**
     * Gets the outerproduct2 value for this MmultiscriptsType.
     * 
     * @return outerproduct2
     */
    public org.w3.www._1998.Math.MathML.OuterproductType getOuterproduct2() {
        return outerproduct2;
    }


    /**
     * Sets the outerproduct2 value for this MmultiscriptsType.
     * 
     * @param outerproduct2
     */
    public void setOuterproduct2(org.w3.www._1998.Math.MathML.OuterproductType outerproduct2) {
        this.outerproduct2 = outerproduct2;
    }


    /**
     * Gets the divergence2 value for this MmultiscriptsType.
     * 
     * @return divergence2
     */
    public org.w3.www._1998.Math.MathML.DivergenceType getDivergence2() {
        return divergence2;
    }


    /**
     * Sets the divergence2 value for this MmultiscriptsType.
     * 
     * @param divergence2
     */
    public void setDivergence2(org.w3.www._1998.Math.MathML.DivergenceType divergence2) {
        this.divergence2 = divergence2;
    }


    /**
     * Gets the grad2 value for this MmultiscriptsType.
     * 
     * @return grad2
     */
    public org.w3.www._1998.Math.MathML.GradType getGrad2() {
        return grad2;
    }


    /**
     * Sets the grad2 value for this MmultiscriptsType.
     * 
     * @param grad2
     */
    public void setGrad2(org.w3.www._1998.Math.MathML.GradType grad2) {
        this.grad2 = grad2;
    }


    /**
     * Gets the curl2 value for this MmultiscriptsType.
     * 
     * @return curl2
     */
    public org.w3.www._1998.Math.MathML.CurlType getCurl2() {
        return curl2;
    }


    /**
     * Sets the curl2 value for this MmultiscriptsType.
     * 
     * @param curl2
     */
    public void setCurl2(org.w3.www._1998.Math.MathML.CurlType curl2) {
        this.curl2 = curl2;
    }


    /**
     * Gets the laplacian2 value for this MmultiscriptsType.
     * 
     * @return laplacian2
     */
    public org.w3.www._1998.Math.MathML.LaplacianType getLaplacian2() {
        return laplacian2;
    }


    /**
     * Sets the laplacian2 value for this MmultiscriptsType.
     * 
     * @param laplacian2
     */
    public void setLaplacian2(org.w3.www._1998.Math.MathML.LaplacianType laplacian2) {
        this.laplacian2 = laplacian2;
    }


    /**
     * Gets the mean2 value for this MmultiscriptsType.
     * 
     * @return mean2
     */
    public org.w3.www._1998.Math.MathML.MeanType getMean2() {
        return mean2;
    }


    /**
     * Sets the mean2 value for this MmultiscriptsType.
     * 
     * @param mean2
     */
    public void setMean2(org.w3.www._1998.Math.MathML.MeanType mean2) {
        this.mean2 = mean2;
    }


    /**
     * Gets the sdev2 value for this MmultiscriptsType.
     * 
     * @return sdev2
     */
    public org.w3.www._1998.Math.MathML.SdevType getSdev2() {
        return sdev2;
    }


    /**
     * Sets the sdev2 value for this MmultiscriptsType.
     * 
     * @param sdev2
     */
    public void setSdev2(org.w3.www._1998.Math.MathML.SdevType sdev2) {
        this.sdev2 = sdev2;
    }


    /**
     * Gets the variance2 value for this MmultiscriptsType.
     * 
     * @return variance2
     */
    public org.w3.www._1998.Math.MathML.VarianceType getVariance2() {
        return variance2;
    }


    /**
     * Sets the variance2 value for this MmultiscriptsType.
     * 
     * @param variance2
     */
    public void setVariance2(org.w3.www._1998.Math.MathML.VarianceType variance2) {
        this.variance2 = variance2;
    }


    /**
     * Gets the median2 value for this MmultiscriptsType.
     * 
     * @return median2
     */
    public org.w3.www._1998.Math.MathML.MedianType getMedian2() {
        return median2;
    }


    /**
     * Sets the median2 value for this MmultiscriptsType.
     * 
     * @param median2
     */
    public void setMedian2(org.w3.www._1998.Math.MathML.MedianType median2) {
        this.median2 = median2;
    }


    /**
     * Gets the mode2 value for this MmultiscriptsType.
     * 
     * @return mode2
     */
    public org.w3.www._1998.Math.MathML.ModeType getMode2() {
        return mode2;
    }


    /**
     * Sets the mode2 value for this MmultiscriptsType.
     * 
     * @param mode2
     */
    public void setMode2(org.w3.www._1998.Math.MathML.ModeType mode2) {
        this.mode2 = mode2;
    }


    /**
     * Gets the moment2 value for this MmultiscriptsType.
     * 
     * @return moment2
     */
    public org.w3.www._1998.Math.MathML.MomentType getMoment2() {
        return moment2;
    }


    /**
     * Sets the moment2 value for this MmultiscriptsType.
     * 
     * @param moment2
     */
    public void setMoment2(org.w3.www._1998.Math.MathML.MomentType moment2) {
        this.moment2 = moment2;
    }


    /**
     * Gets the momentabout2 value for this MmultiscriptsType.
     * 
     * @return momentabout2
     */
    public org.w3.www._1998.Math.MathML.MomentaboutType getMomentabout2() {
        return momentabout2;
    }


    /**
     * Sets the momentabout2 value for this MmultiscriptsType.
     * 
     * @param momentabout2
     */
    public void setMomentabout2(org.w3.www._1998.Math.MathML.MomentaboutType momentabout2) {
        this.momentabout2 = momentabout2;
    }


    /**
     * Gets the apply2 value for this MmultiscriptsType.
     * 
     * @return apply2
     */
    public org.w3.www._1998.Math.MathML.ApplyType getApply2() {
        return apply2;
    }


    /**
     * Sets the apply2 value for this MmultiscriptsType.
     * 
     * @param apply2
     */
    public void setApply2(org.w3.www._1998.Math.MathML.ApplyType apply2) {
        this.apply2 = apply2;
    }


    /**
     * Gets the interval2 value for this MmultiscriptsType.
     * 
     * @return interval2
     */
    public org.w3.www._1998.Math.MathML.IntervalType getInterval2() {
        return interval2;
    }


    /**
     * Sets the interval2 value for this MmultiscriptsType.
     * 
     * @param interval2
     */
    public void setInterval2(org.w3.www._1998.Math.MathML.IntervalType interval2) {
        this.interval2 = interval2;
    }


    /**
     * Gets the inverse2 value for this MmultiscriptsType.
     * 
     * @return inverse2
     */
    public org.w3.www._1998.Math.MathML.InverseType getInverse2() {
        return inverse2;
    }


    /**
     * Sets the inverse2 value for this MmultiscriptsType.
     * 
     * @param inverse2
     */
    public void setInverse2(org.w3.www._1998.Math.MathML.InverseType inverse2) {
        this.inverse2 = inverse2;
    }


    /**
     * Gets the condition2 value for this MmultiscriptsType.
     * 
     * @return condition2
     */
    public org.w3.www._1998.Math.MathML.ConditionType getCondition2() {
        return condition2;
    }


    /**
     * Sets the condition2 value for this MmultiscriptsType.
     * 
     * @param condition2
     */
    public void setCondition2(org.w3.www._1998.Math.MathML.ConditionType condition2) {
        this.condition2 = condition2;
    }


    /**
     * Gets the declare2 value for this MmultiscriptsType.
     * 
     * @return declare2
     */
    public org.w3.www._1998.Math.MathML.DeclareType getDeclare2() {
        return declare2;
    }


    /**
     * Sets the declare2 value for this MmultiscriptsType.
     * 
     * @param declare2
     */
    public void setDeclare2(org.w3.www._1998.Math.MathML.DeclareType declare2) {
        this.declare2 = declare2;
    }


    /**
     * Gets the lambda2 value for this MmultiscriptsType.
     * 
     * @return lambda2
     */
    public org.w3.www._1998.Math.MathML.LambdaType getLambda2() {
        return lambda2;
    }


    /**
     * Sets the lambda2 value for this MmultiscriptsType.
     * 
     * @param lambda2
     */
    public void setLambda2(org.w3.www._1998.Math.MathML.LambdaType lambda2) {
        this.lambda2 = lambda2;
    }


    /**
     * Gets the piecewise2 value for this MmultiscriptsType.
     * 
     * @return piecewise2
     */
    public org.w3.www._1998.Math.MathML.PiecewiseType getPiecewise2() {
        return piecewise2;
    }


    /**
     * Sets the piecewise2 value for this MmultiscriptsType.
     * 
     * @param piecewise2
     */
    public void setPiecewise2(org.w3.www._1998.Math.MathML.PiecewiseType piecewise2) {
        this.piecewise2 = piecewise2;
    }


    /**
     * Gets the bvar2 value for this MmultiscriptsType.
     * 
     * @return bvar2
     */
    public org.w3.www._1998.Math.MathML.BvarType getBvar2() {
        return bvar2;
    }


    /**
     * Sets the bvar2 value for this MmultiscriptsType.
     * 
     * @param bvar2
     */
    public void setBvar2(org.w3.www._1998.Math.MathML.BvarType bvar2) {
        this.bvar2 = bvar2;
    }


    /**
     * Gets the degree2 value for this MmultiscriptsType.
     * 
     * @return degree2
     */
    public org.w3.www._1998.Math.MathML.DegreeType getDegree2() {
        return degree2;
    }


    /**
     * Sets the degree2 value for this MmultiscriptsType.
     * 
     * @param degree2
     */
    public void setDegree2(org.w3.www._1998.Math.MathML.DegreeType degree2) {
        this.degree2 = degree2;
    }


    /**
     * Gets the semantics2 value for this MmultiscriptsType.
     * 
     * @return semantics2
     */
    public org.w3.www._1998.Math.MathML.SemanticsType getSemantics2() {
        return semantics2;
    }


    /**
     * Sets the semantics2 value for this MmultiscriptsType.
     * 
     * @param semantics2
     */
    public void setSemantics2(org.w3.www._1998.Math.MathML.SemanticsType semantics2) {
        this.semantics2 = semantics2;
    }


    /**
     * Gets the none value for this MmultiscriptsType.
     * 
     * @return none
     */
    public org.w3.www._1998.Math.MathML.NoneType getNone() {
        return none;
    }


    /**
     * Sets the none value for this MmultiscriptsType.
     * 
     * @param none
     */
    public void setNone(org.w3.www._1998.Math.MathML.NoneType none) {
        this.none = none;
    }


    /**
     * Gets the mi3 value for this MmultiscriptsType.
     * 
     * @return mi3
     */
    public org.w3.www._1998.Math.MathML.MiType getMi3() {
        return mi3;
    }


    /**
     * Sets the mi3 value for this MmultiscriptsType.
     * 
     * @param mi3
     */
    public void setMi3(org.w3.www._1998.Math.MathML.MiType mi3) {
        this.mi3 = mi3;
    }


    /**
     * Gets the mo3 value for this MmultiscriptsType.
     * 
     * @return mo3
     */
    public org.w3.www._1998.Math.MathML.MoType getMo3() {
        return mo3;
    }


    /**
     * Sets the mo3 value for this MmultiscriptsType.
     * 
     * @param mo3
     */
    public void setMo3(org.w3.www._1998.Math.MathML.MoType mo3) {
        this.mo3 = mo3;
    }


    /**
     * Gets the mn3 value for this MmultiscriptsType.
     * 
     * @return mn3
     */
    public org.w3.www._1998.Math.MathML.MnType getMn3() {
        return mn3;
    }


    /**
     * Sets the mn3 value for this MmultiscriptsType.
     * 
     * @param mn3
     */
    public void setMn3(org.w3.www._1998.Math.MathML.MnType mn3) {
        this.mn3 = mn3;
    }


    /**
     * Gets the mtext3 value for this MmultiscriptsType.
     * 
     * @return mtext3
     */
    public org.w3.www._1998.Math.MathML.MtextType getMtext3() {
        return mtext3;
    }


    /**
     * Sets the mtext3 value for this MmultiscriptsType.
     * 
     * @param mtext3
     */
    public void setMtext3(org.w3.www._1998.Math.MathML.MtextType mtext3) {
        this.mtext3 = mtext3;
    }


    /**
     * Gets the ms3 value for this MmultiscriptsType.
     * 
     * @return ms3
     */
    public org.w3.www._1998.Math.MathML.MsType getMs3() {
        return ms3;
    }


    /**
     * Sets the ms3 value for this MmultiscriptsType.
     * 
     * @param ms3
     */
    public void setMs3(org.w3.www._1998.Math.MathML.MsType ms3) {
        this.ms3 = ms3;
    }


    /**
     * Gets the mrow3 value for this MmultiscriptsType.
     * 
     * @return mrow3
     */
    public org.w3.www._1998.Math.MathML.MrowType getMrow3() {
        return mrow3;
    }


    /**
     * Sets the mrow3 value for this MmultiscriptsType.
     * 
     * @param mrow3
     */
    public void setMrow3(org.w3.www._1998.Math.MathML.MrowType mrow3) {
        this.mrow3 = mrow3;
    }


    /**
     * Gets the mfrac3 value for this MmultiscriptsType.
     * 
     * @return mfrac3
     */
    public org.w3.www._1998.Math.MathML.MfracType getMfrac3() {
        return mfrac3;
    }


    /**
     * Sets the mfrac3 value for this MmultiscriptsType.
     * 
     * @param mfrac3
     */
    public void setMfrac3(org.w3.www._1998.Math.MathML.MfracType mfrac3) {
        this.mfrac3 = mfrac3;
    }


    /**
     * Gets the msqrt3 value for this MmultiscriptsType.
     * 
     * @return msqrt3
     */
    public org.w3.www._1998.Math.MathML.MsqrtType getMsqrt3() {
        return msqrt3;
    }


    /**
     * Sets the msqrt3 value for this MmultiscriptsType.
     * 
     * @param msqrt3
     */
    public void setMsqrt3(org.w3.www._1998.Math.MathML.MsqrtType msqrt3) {
        this.msqrt3 = msqrt3;
    }


    /**
     * Gets the mroot3 value for this MmultiscriptsType.
     * 
     * @return mroot3
     */
    public org.w3.www._1998.Math.MathML.MrootType getMroot3() {
        return mroot3;
    }


    /**
     * Sets the mroot3 value for this MmultiscriptsType.
     * 
     * @param mroot3
     */
    public void setMroot3(org.w3.www._1998.Math.MathML.MrootType mroot3) {
        this.mroot3 = mroot3;
    }


    /**
     * Gets the mpadded3 value for this MmultiscriptsType.
     * 
     * @return mpadded3
     */
    public org.w3.www._1998.Math.MathML.MpaddedType getMpadded3() {
        return mpadded3;
    }


    /**
     * Sets the mpadded3 value for this MmultiscriptsType.
     * 
     * @param mpadded3
     */
    public void setMpadded3(org.w3.www._1998.Math.MathML.MpaddedType mpadded3) {
        this.mpadded3 = mpadded3;
    }


    /**
     * Gets the mphantom3 value for this MmultiscriptsType.
     * 
     * @return mphantom3
     */
    public org.w3.www._1998.Math.MathML.MphantomType getMphantom3() {
        return mphantom3;
    }


    /**
     * Sets the mphantom3 value for this MmultiscriptsType.
     * 
     * @param mphantom3
     */
    public void setMphantom3(org.w3.www._1998.Math.MathML.MphantomType mphantom3) {
        this.mphantom3 = mphantom3;
    }


    /**
     * Gets the mfenced3 value for this MmultiscriptsType.
     * 
     * @return mfenced3
     */
    public org.w3.www._1998.Math.MathML.MfencedType getMfenced3() {
        return mfenced3;
    }


    /**
     * Sets the mfenced3 value for this MmultiscriptsType.
     * 
     * @param mfenced3
     */
    public void setMfenced3(org.w3.www._1998.Math.MathML.MfencedType mfenced3) {
        this.mfenced3 = mfenced3;
    }


    /**
     * Gets the menclose3 value for this MmultiscriptsType.
     * 
     * @return menclose3
     */
    public org.w3.www._1998.Math.MathML.MencloseType getMenclose3() {
        return menclose3;
    }


    /**
     * Sets the menclose3 value for this MmultiscriptsType.
     * 
     * @param menclose3
     */
    public void setMenclose3(org.w3.www._1998.Math.MathML.MencloseType menclose3) {
        this.menclose3 = menclose3;
    }


    /**
     * Gets the msub3 value for this MmultiscriptsType.
     * 
     * @return msub3
     */
    public org.w3.www._1998.Math.MathML.MsubType getMsub3() {
        return msub3;
    }


    /**
     * Sets the msub3 value for this MmultiscriptsType.
     * 
     * @param msub3
     */
    public void setMsub3(org.w3.www._1998.Math.MathML.MsubType msub3) {
        this.msub3 = msub3;
    }


    /**
     * Gets the msup3 value for this MmultiscriptsType.
     * 
     * @return msup3
     */
    public org.w3.www._1998.Math.MathML.MsupType getMsup3() {
        return msup3;
    }


    /**
     * Sets the msup3 value for this MmultiscriptsType.
     * 
     * @param msup3
     */
    public void setMsup3(org.w3.www._1998.Math.MathML.MsupType msup3) {
        this.msup3 = msup3;
    }


    /**
     * Gets the msubsup3 value for this MmultiscriptsType.
     * 
     * @return msubsup3
     */
    public org.w3.www._1998.Math.MathML.MsubsupType getMsubsup3() {
        return msubsup3;
    }


    /**
     * Sets the msubsup3 value for this MmultiscriptsType.
     * 
     * @param msubsup3
     */
    public void setMsubsup3(org.w3.www._1998.Math.MathML.MsubsupType msubsup3) {
        this.msubsup3 = msubsup3;
    }


    /**
     * Gets the munder3 value for this MmultiscriptsType.
     * 
     * @return munder3
     */
    public org.w3.www._1998.Math.MathML.MunderType getMunder3() {
        return munder3;
    }


    /**
     * Sets the munder3 value for this MmultiscriptsType.
     * 
     * @param munder3
     */
    public void setMunder3(org.w3.www._1998.Math.MathML.MunderType munder3) {
        this.munder3 = munder3;
    }


    /**
     * Gets the mover3 value for this MmultiscriptsType.
     * 
     * @return mover3
     */
    public org.w3.www._1998.Math.MathML.MoverType getMover3() {
        return mover3;
    }


    /**
     * Sets the mover3 value for this MmultiscriptsType.
     * 
     * @param mover3
     */
    public void setMover3(org.w3.www._1998.Math.MathML.MoverType mover3) {
        this.mover3 = mover3;
    }


    /**
     * Gets the munderover3 value for this MmultiscriptsType.
     * 
     * @return munderover3
     */
    public org.w3.www._1998.Math.MathML.MunderoverType getMunderover3() {
        return munderover3;
    }


    /**
     * Sets the munderover3 value for this MmultiscriptsType.
     * 
     * @param munderover3
     */
    public void setMunderover3(org.w3.www._1998.Math.MathML.MunderoverType munderover3) {
        this.munderover3 = munderover3;
    }


    /**
     * Gets the mmultiscripts3 value for this MmultiscriptsType.
     * 
     * @return mmultiscripts3
     */
    public org.w3.www._1998.Math.MathML.MmultiscriptsType getMmultiscripts3() {
        return mmultiscripts3;
    }


    /**
     * Sets the mmultiscripts3 value for this MmultiscriptsType.
     * 
     * @param mmultiscripts3
     */
    public void setMmultiscripts3(org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts3) {
        this.mmultiscripts3 = mmultiscripts3;
    }


    /**
     * Gets the mtable3 value for this MmultiscriptsType.
     * 
     * @return mtable3
     */
    public org.w3.www._1998.Math.MathML.MtableType getMtable3() {
        return mtable3;
    }


    /**
     * Sets the mtable3 value for this MmultiscriptsType.
     * 
     * @param mtable3
     */
    public void setMtable3(org.w3.www._1998.Math.MathML.MtableType mtable3) {
        this.mtable3 = mtable3;
    }


    /**
     * Gets the maligngroup3 value for this MmultiscriptsType.
     * 
     * @return maligngroup3
     */
    public org.w3.www._1998.Math.MathML.MaligngroupType getMaligngroup3() {
        return maligngroup3;
    }


    /**
     * Sets the maligngroup3 value for this MmultiscriptsType.
     * 
     * @param maligngroup3
     */
    public void setMaligngroup3(org.w3.www._1998.Math.MathML.MaligngroupType maligngroup3) {
        this.maligngroup3 = maligngroup3;
    }


    /**
     * Gets the malignmark3 value for this MmultiscriptsType.
     * 
     * @return malignmark3
     */
    public org.w3.www._1998.Math.MathML.MalignmarkType getMalignmark3() {
        return malignmark3;
    }


    /**
     * Sets the malignmark3 value for this MmultiscriptsType.
     * 
     * @param malignmark3
     */
    public void setMalignmark3(org.w3.www._1998.Math.MathML.MalignmarkType malignmark3) {
        this.malignmark3 = malignmark3;
    }


    /**
     * Gets the mspace3 value for this MmultiscriptsType.
     * 
     * @return mspace3
     */
    public org.w3.www._1998.Math.MathML.MspaceType getMspace3() {
        return mspace3;
    }


    /**
     * Sets the mspace3 value for this MmultiscriptsType.
     * 
     * @param mspace3
     */
    public void setMspace3(org.w3.www._1998.Math.MathML.MspaceType mspace3) {
        this.mspace3 = mspace3;
    }


    /**
     * Gets the maction3 value for this MmultiscriptsType.
     * 
     * @return maction3
     */
    public org.w3.www._1998.Math.MathML.MactionType getMaction3() {
        return maction3;
    }


    /**
     * Sets the maction3 value for this MmultiscriptsType.
     * 
     * @param maction3
     */
    public void setMaction3(org.w3.www._1998.Math.MathML.MactionType maction3) {
        this.maction3 = maction3;
    }


    /**
     * Gets the merror3 value for this MmultiscriptsType.
     * 
     * @return merror3
     */
    public org.w3.www._1998.Math.MathML.MerrorType getMerror3() {
        return merror3;
    }


    /**
     * Sets the merror3 value for this MmultiscriptsType.
     * 
     * @param merror3
     */
    public void setMerror3(org.w3.www._1998.Math.MathML.MerrorType merror3) {
        this.merror3 = merror3;
    }


    /**
     * Gets the mstyle3 value for this MmultiscriptsType.
     * 
     * @return mstyle3
     */
    public org.w3.www._1998.Math.MathML.MstyleType getMstyle3() {
        return mstyle3;
    }


    /**
     * Sets the mstyle3 value for this MmultiscriptsType.
     * 
     * @param mstyle3
     */
    public void setMstyle3(org.w3.www._1998.Math.MathML.MstyleType mstyle3) {
        this.mstyle3 = mstyle3;
    }


    /**
     * Gets the cn3 value for this MmultiscriptsType.
     * 
     * @return cn3
     */
    public org.w3.www._1998.Math.MathML.CnType getCn3() {
        return cn3;
    }


    /**
     * Sets the cn3 value for this MmultiscriptsType.
     * 
     * @param cn3
     */
    public void setCn3(org.w3.www._1998.Math.MathML.CnType cn3) {
        this.cn3 = cn3;
    }


    /**
     * Gets the ci3 value for this MmultiscriptsType.
     * 
     * @return ci3
     */
    public org.w3.www._1998.Math.MathML.CiType getCi3() {
        return ci3;
    }


    /**
     * Sets the ci3 value for this MmultiscriptsType.
     * 
     * @param ci3
     */
    public void setCi3(org.w3.www._1998.Math.MathML.CiType ci3) {
        this.ci3 = ci3;
    }


    /**
     * Gets the csymbol3 value for this MmultiscriptsType.
     * 
     * @return csymbol3
     */
    public org.w3.www._1998.Math.MathML.CsymbolType getCsymbol3() {
        return csymbol3;
    }


    /**
     * Sets the csymbol3 value for this MmultiscriptsType.
     * 
     * @param csymbol3
     */
    public void setCsymbol3(org.w3.www._1998.Math.MathML.CsymbolType csymbol3) {
        this.csymbol3 = csymbol3;
    }


    /**
     * Gets the abs3 value for this MmultiscriptsType.
     * 
     * @return abs3
     */
    public org.w3.www._1998.Math.MathML.ArithType getAbs3() {
        return abs3;
    }


    /**
     * Sets the abs3 value for this MmultiscriptsType.
     * 
     * @param abs3
     */
    public void setAbs3(org.w3.www._1998.Math.MathML.ArithType abs3) {
        this.abs3 = abs3;
    }


    /**
     * Gets the conjugate3 value for this MmultiscriptsType.
     * 
     * @return conjugate3
     */
    public org.w3.www._1998.Math.MathML.ArithType getConjugate3() {
        return conjugate3;
    }


    /**
     * Sets the conjugate3 value for this MmultiscriptsType.
     * 
     * @param conjugate3
     */
    public void setConjugate3(org.w3.www._1998.Math.MathML.ArithType conjugate3) {
        this.conjugate3 = conjugate3;
    }


    /**
     * Gets the factorial3 value for this MmultiscriptsType.
     * 
     * @return factorial3
     */
    public org.w3.www._1998.Math.MathML.ArithType getFactorial3() {
        return factorial3;
    }


    /**
     * Sets the factorial3 value for this MmultiscriptsType.
     * 
     * @param factorial3
     */
    public void setFactorial3(org.w3.www._1998.Math.MathML.ArithType factorial3) {
        this.factorial3 = factorial3;
    }


    /**
     * Gets the arg3 value for this MmultiscriptsType.
     * 
     * @return arg3
     */
    public org.w3.www._1998.Math.MathML.ArithType getArg3() {
        return arg3;
    }


    /**
     * Sets the arg3 value for this MmultiscriptsType.
     * 
     * @param arg3
     */
    public void setArg3(org.w3.www._1998.Math.MathML.ArithType arg3) {
        this.arg3 = arg3;
    }


    /**
     * Gets the real3 value for this MmultiscriptsType.
     * 
     * @return real3
     */
    public org.w3.www._1998.Math.MathML.ArithType getReal3() {
        return real3;
    }


    /**
     * Sets the real3 value for this MmultiscriptsType.
     * 
     * @param real3
     */
    public void setReal3(org.w3.www._1998.Math.MathML.ArithType real3) {
        this.real3 = real3;
    }


    /**
     * Gets the imaginary3 value for this MmultiscriptsType.
     * 
     * @return imaginary3
     */
    public org.w3.www._1998.Math.MathML.ArithType getImaginary3() {
        return imaginary3;
    }


    /**
     * Sets the imaginary3 value for this MmultiscriptsType.
     * 
     * @param imaginary3
     */
    public void setImaginary3(org.w3.www._1998.Math.MathML.ArithType imaginary3) {
        this.imaginary3 = imaginary3;
    }


    /**
     * Gets the floor3 value for this MmultiscriptsType.
     * 
     * @return floor3
     */
    public org.w3.www._1998.Math.MathML.ArithType getFloor3() {
        return floor3;
    }


    /**
     * Sets the floor3 value for this MmultiscriptsType.
     * 
     * @param floor3
     */
    public void setFloor3(org.w3.www._1998.Math.MathML.ArithType floor3) {
        this.floor3 = floor3;
    }


    /**
     * Gets the ceiling3 value for this MmultiscriptsType.
     * 
     * @return ceiling3
     */
    public org.w3.www._1998.Math.MathML.ArithType getCeiling3() {
        return ceiling3;
    }


    /**
     * Sets the ceiling3 value for this MmultiscriptsType.
     * 
     * @param ceiling3
     */
    public void setCeiling3(org.w3.www._1998.Math.MathML.ArithType ceiling3) {
        this.ceiling3 = ceiling3;
    }


    /**
     * Gets the quotient3 value for this MmultiscriptsType.
     * 
     * @return quotient3
     */
    public org.w3.www._1998.Math.MathML.ArithType getQuotient3() {
        return quotient3;
    }


    /**
     * Sets the quotient3 value for this MmultiscriptsType.
     * 
     * @param quotient3
     */
    public void setQuotient3(org.w3.www._1998.Math.MathML.ArithType quotient3) {
        this.quotient3 = quotient3;
    }


    /**
     * Gets the divide3 value for this MmultiscriptsType.
     * 
     * @return divide3
     */
    public org.w3.www._1998.Math.MathML.ArithType getDivide3() {
        return divide3;
    }


    /**
     * Sets the divide3 value for this MmultiscriptsType.
     * 
     * @param divide3
     */
    public void setDivide3(org.w3.www._1998.Math.MathML.ArithType divide3) {
        this.divide3 = divide3;
    }


    /**
     * Gets the rem3 value for this MmultiscriptsType.
     * 
     * @return rem3
     */
    public org.w3.www._1998.Math.MathML.ArithType getRem3() {
        return rem3;
    }


    /**
     * Sets the rem3 value for this MmultiscriptsType.
     * 
     * @param rem3
     */
    public void setRem3(org.w3.www._1998.Math.MathML.ArithType rem3) {
        this.rem3 = rem3;
    }


    /**
     * Gets the minus3 value for this MmultiscriptsType.
     * 
     * @return minus3
     */
    public org.w3.www._1998.Math.MathML.ArithType getMinus3() {
        return minus3;
    }


    /**
     * Sets the minus3 value for this MmultiscriptsType.
     * 
     * @param minus3
     */
    public void setMinus3(org.w3.www._1998.Math.MathML.ArithType minus3) {
        this.minus3 = minus3;
    }


    /**
     * Gets the plus3 value for this MmultiscriptsType.
     * 
     * @return plus3
     */
    public org.w3.www._1998.Math.MathML.ArithType getPlus3() {
        return plus3;
    }


    /**
     * Sets the plus3 value for this MmultiscriptsType.
     * 
     * @param plus3
     */
    public void setPlus3(org.w3.www._1998.Math.MathML.ArithType plus3) {
        this.plus3 = plus3;
    }


    /**
     * Gets the times3 value for this MmultiscriptsType.
     * 
     * @return times3
     */
    public org.w3.www._1998.Math.MathML.ArithType getTimes3() {
        return times3;
    }


    /**
     * Sets the times3 value for this MmultiscriptsType.
     * 
     * @param times3
     */
    public void setTimes3(org.w3.www._1998.Math.MathML.ArithType times3) {
        this.times3 = times3;
    }


    /**
     * Gets the power3 value for this MmultiscriptsType.
     * 
     * @return power3
     */
    public org.w3.www._1998.Math.MathML.ArithType getPower3() {
        return power3;
    }


    /**
     * Sets the power3 value for this MmultiscriptsType.
     * 
     * @param power3
     */
    public void setPower3(org.w3.www._1998.Math.MathML.ArithType power3) {
        this.power3 = power3;
    }


    /**
     * Gets the root3 value for this MmultiscriptsType.
     * 
     * @return root3
     */
    public org.w3.www._1998.Math.MathML.ArithType getRoot3() {
        return root3;
    }


    /**
     * Sets the root3 value for this MmultiscriptsType.
     * 
     * @param root3
     */
    public void setRoot3(org.w3.www._1998.Math.MathML.ArithType root3) {
        this.root3 = root3;
    }


    /**
     * Gets the max3 value for this MmultiscriptsType.
     * 
     * @return max3
     */
    public org.w3.www._1998.Math.MathML.ArithType getMax3() {
        return max3;
    }


    /**
     * Sets the max3 value for this MmultiscriptsType.
     * 
     * @param max3
     */
    public void setMax3(org.w3.www._1998.Math.MathML.ArithType max3) {
        this.max3 = max3;
    }


    /**
     * Gets the min3 value for this MmultiscriptsType.
     * 
     * @return min3
     */
    public org.w3.www._1998.Math.MathML.ArithType getMin3() {
        return min3;
    }


    /**
     * Sets the min3 value for this MmultiscriptsType.
     * 
     * @param min3
     */
    public void setMin3(org.w3.www._1998.Math.MathML.ArithType min3) {
        this.min3 = min3;
    }


    /**
     * Gets the gcd3 value for this MmultiscriptsType.
     * 
     * @return gcd3
     */
    public org.w3.www._1998.Math.MathML.ArithType getGcd3() {
        return gcd3;
    }


    /**
     * Sets the gcd3 value for this MmultiscriptsType.
     * 
     * @param gcd3
     */
    public void setGcd3(org.w3.www._1998.Math.MathML.ArithType gcd3) {
        this.gcd3 = gcd3;
    }


    /**
     * Gets the lcm3 value for this MmultiscriptsType.
     * 
     * @return lcm3
     */
    public org.w3.www._1998.Math.MathML.ArithType getLcm3() {
        return lcm3;
    }


    /**
     * Sets the lcm3 value for this MmultiscriptsType.
     * 
     * @param lcm3
     */
    public void setLcm3(org.w3.www._1998.Math.MathML.ArithType lcm3) {
        this.lcm3 = lcm3;
    }


    /**
     * Gets the sum3 value for this MmultiscriptsType.
     * 
     * @return sum3
     */
    public org.w3.www._1998.Math.MathML.ArithType getSum3() {
        return sum3;
    }


    /**
     * Sets the sum3 value for this MmultiscriptsType.
     * 
     * @param sum3
     */
    public void setSum3(org.w3.www._1998.Math.MathML.ArithType sum3) {
        this.sum3 = sum3;
    }


    /**
     * Gets the product3 value for this MmultiscriptsType.
     * 
     * @return product3
     */
    public org.w3.www._1998.Math.MathML.ArithType getProduct3() {
        return product3;
    }


    /**
     * Sets the product3 value for this MmultiscriptsType.
     * 
     * @param product3
     */
    public void setProduct3(org.w3.www._1998.Math.MathML.ArithType product3) {
        this.product3 = product3;
    }


    /**
     * Gets the compose3 value for this MmultiscriptsType.
     * 
     * @return compose3
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCompose3() {
        return compose3;
    }


    /**
     * Sets the compose3 value for this MmultiscriptsType.
     * 
     * @param compose3
     */
    public void setCompose3(org.w3.www._1998.Math.MathML.FunctionsType compose3) {
        this.compose3 = compose3;
    }


    /**
     * Gets the domain3 value for this MmultiscriptsType.
     * 
     * @return domain3
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getDomain3() {
        return domain3;
    }


    /**
     * Sets the domain3 value for this MmultiscriptsType.
     * 
     * @param domain3
     */
    public void setDomain3(org.w3.www._1998.Math.MathML.FunctionsType domain3) {
        this.domain3 = domain3;
    }


    /**
     * Gets the codomain3 value for this MmultiscriptsType.
     * 
     * @return codomain3
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCodomain3() {
        return codomain3;
    }


    /**
     * Sets the codomain3 value for this MmultiscriptsType.
     * 
     * @param codomain3
     */
    public void setCodomain3(org.w3.www._1998.Math.MathML.FunctionsType codomain3) {
        this.codomain3 = codomain3;
    }


    /**
     * Gets the image3 value for this MmultiscriptsType.
     * 
     * @return image3
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getImage3() {
        return image3;
    }


    /**
     * Sets the image3 value for this MmultiscriptsType.
     * 
     * @param image3
     */
    public void setImage3(org.w3.www._1998.Math.MathML.FunctionsType image3) {
        this.image3 = image3;
    }


    /**
     * Gets the domainofapplication3 value for this MmultiscriptsType.
     * 
     * @return domainofapplication3
     */
    public org.w3.www._1998.Math.MathML.DomainofapplicationType getDomainofapplication3() {
        return domainofapplication3;
    }


    /**
     * Sets the domainofapplication3 value for this MmultiscriptsType.
     * 
     * @param domainofapplication3
     */
    public void setDomainofapplication3(org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication3) {
        this.domainofapplication3 = domainofapplication3;
    }


    /**
     * Gets the ident3 value for this MmultiscriptsType.
     * 
     * @return ident3
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getIdent3() {
        return ident3;
    }


    /**
     * Sets the ident3 value for this MmultiscriptsType.
     * 
     * @param ident3
     */
    public void setIdent3(org.w3.www._1998.Math.MathML.FunctionsType ident3) {
        this.ident3 = ident3;
    }


    /**
     * Gets the and3 value for this MmultiscriptsType.
     * 
     * @return and3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getAnd3() {
        return and3;
    }


    /**
     * Sets the and3 value for this MmultiscriptsType.
     * 
     * @param and3
     */
    public void setAnd3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType and3) {
        this.and3 = and3;
    }


    /**
     * Gets the or3 value for this MmultiscriptsType.
     * 
     * @return or3
     */
    public org.w3.www._1998.Math.MathML.LogicType getOr3() {
        return or3;
    }


    /**
     * Sets the or3 value for this MmultiscriptsType.
     * 
     * @param or3
     */
    public void setOr3(org.w3.www._1998.Math.MathML.LogicType or3) {
        this.or3 = or3;
    }


    /**
     * Gets the xor3 value for this MmultiscriptsType.
     * 
     * @return xor3
     */
    public org.w3.www._1998.Math.MathML.LogicType getXor3() {
        return xor3;
    }


    /**
     * Sets the xor3 value for this MmultiscriptsType.
     * 
     * @param xor3
     */
    public void setXor3(org.w3.www._1998.Math.MathML.LogicType xor3) {
        this.xor3 = xor3;
    }


    /**
     * Gets the not3 value for this MmultiscriptsType.
     * 
     * @return not3
     */
    public org.w3.www._1998.Math.MathML.LogicType getNot3() {
        return not3;
    }


    /**
     * Sets the not3 value for this MmultiscriptsType.
     * 
     * @param not3
     */
    public void setNot3(org.w3.www._1998.Math.MathML.LogicType not3) {
        this.not3 = not3;
    }


    /**
     * Gets the exists3 value for this MmultiscriptsType.
     * 
     * @return exists3
     */
    public org.w3.www._1998.Math.MathML.LogicType getExists3() {
        return exists3;
    }


    /**
     * Sets the exists3 value for this MmultiscriptsType.
     * 
     * @param exists3
     */
    public void setExists3(org.w3.www._1998.Math.MathML.LogicType exists3) {
        this.exists3 = exists3;
    }


    /**
     * Gets the forall3 value for this MmultiscriptsType.
     * 
     * @return forall3
     */
    public org.w3.www._1998.Math.MathML.LogicType getForall3() {
        return forall3;
    }


    /**
     * Sets the forall3 value for this MmultiscriptsType.
     * 
     * @param forall3
     */
    public void setForall3(org.w3.www._1998.Math.MathML.LogicType forall3) {
        this.forall3 = forall3;
    }


    /**
     * Gets the implies3 value for this MmultiscriptsType.
     * 
     * @return implies3
     */
    public org.w3.www._1998.Math.MathML.LogicType getImplies3() {
        return implies3;
    }


    /**
     * Sets the implies3 value for this MmultiscriptsType.
     * 
     * @param implies3
     */
    public void setImplies3(org.w3.www._1998.Math.MathML.LogicType implies3) {
        this.implies3 = implies3;
    }


    /**
     * Gets the naturalnumbers3 value for this MmultiscriptsType.
     * 
     * @return naturalnumbers3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNaturalnumbers3() {
        return naturalnumbers3;
    }


    /**
     * Sets the naturalnumbers3 value for this MmultiscriptsType.
     * 
     * @param naturalnumbers3
     */
    public void setNaturalnumbers3(org.w3.www._1998.Math.MathML.ConstantType naturalnumbers3) {
        this.naturalnumbers3 = naturalnumbers3;
    }


    /**
     * Gets the primes3 value for this MmultiscriptsType.
     * 
     * @return primes3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPrimes3() {
        return primes3;
    }


    /**
     * Sets the primes3 value for this MmultiscriptsType.
     * 
     * @param primes3
     */
    public void setPrimes3(org.w3.www._1998.Math.MathML.ConstantType primes3) {
        this.primes3 = primes3;
    }


    /**
     * Gets the integers3 value for this MmultiscriptsType.
     * 
     * @return integers3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getIntegers3() {
        return integers3;
    }


    /**
     * Sets the integers3 value for this MmultiscriptsType.
     * 
     * @param integers3
     */
    public void setIntegers3(org.w3.www._1998.Math.MathML.ConstantType integers3) {
        this.integers3 = integers3;
    }


    /**
     * Gets the rationals3 value for this MmultiscriptsType.
     * 
     * @return rationals3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getRationals3() {
        return rationals3;
    }


    /**
     * Sets the rationals3 value for this MmultiscriptsType.
     * 
     * @param rationals3
     */
    public void setRationals3(org.w3.www._1998.Math.MathML.ConstantType rationals3) {
        this.rationals3 = rationals3;
    }


    /**
     * Gets the reals3 value for this MmultiscriptsType.
     * 
     * @return reals3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getReals3() {
        return reals3;
    }


    /**
     * Sets the reals3 value for this MmultiscriptsType.
     * 
     * @param reals3
     */
    public void setReals3(org.w3.www._1998.Math.MathML.ConstantType reals3) {
        this.reals3 = reals3;
    }


    /**
     * Gets the complexes3 value for this MmultiscriptsType.
     * 
     * @return complexes3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getComplexes3() {
        return complexes3;
    }


    /**
     * Sets the complexes3 value for this MmultiscriptsType.
     * 
     * @param complexes3
     */
    public void setComplexes3(org.w3.www._1998.Math.MathML.ConstantType complexes3) {
        this.complexes3 = complexes3;
    }


    /**
     * Gets the emptyset3 value for this MmultiscriptsType.
     * 
     * @return emptyset3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEmptyset3() {
        return emptyset3;
    }


    /**
     * Sets the emptyset3 value for this MmultiscriptsType.
     * 
     * @param emptyset3
     */
    public void setEmptyset3(org.w3.www._1998.Math.MathML.ConstantType emptyset3) {
        this.emptyset3 = emptyset3;
    }


    /**
     * Gets the exponentiale3 value for this MmultiscriptsType.
     * 
     * @return exponentiale3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getExponentiale3() {
        return exponentiale3;
    }


    /**
     * Sets the exponentiale3 value for this MmultiscriptsType.
     * 
     * @param exponentiale3
     */
    public void setExponentiale3(org.w3.www._1998.Math.MathML.ConstantType exponentiale3) {
        this.exponentiale3 = exponentiale3;
    }


    /**
     * Gets the imaginaryi3 value for this MmultiscriptsType.
     * 
     * @return imaginaryi3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getImaginaryi3() {
        return imaginaryi3;
    }


    /**
     * Sets the imaginaryi3 value for this MmultiscriptsType.
     * 
     * @param imaginaryi3
     */
    public void setImaginaryi3(org.w3.www._1998.Math.MathML.ConstantType imaginaryi3) {
        this.imaginaryi3 = imaginaryi3;
    }


    /**
     * Gets the pi3 value for this MmultiscriptsType.
     * 
     * @return pi3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPi3() {
        return pi3;
    }


    /**
     * Sets the pi3 value for this MmultiscriptsType.
     * 
     * @param pi3
     */
    public void setPi3(org.w3.www._1998.Math.MathML.ConstantType pi3) {
        this.pi3 = pi3;
    }


    /**
     * Gets the eulergamma3 value for this MmultiscriptsType.
     * 
     * @return eulergamma3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEulergamma3() {
        return eulergamma3;
    }


    /**
     * Sets the eulergamma3 value for this MmultiscriptsType.
     * 
     * @param eulergamma3
     */
    public void setEulergamma3(org.w3.www._1998.Math.MathML.ConstantType eulergamma3) {
        this.eulergamma3 = eulergamma3;
    }


    /**
     * Gets the _true3 value for this MmultiscriptsType.
     * 
     * @return _true3
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_true3() {
        return _true3;
    }


    /**
     * Sets the _true3 value for this MmultiscriptsType.
     * 
     * @param _true3
     */
    public void set_true3(org.w3.www._1998.Math.MathML.ConstantType _true3) {
        this._true3 = _true3;
    }


    /**
     * Gets the _false3 value for this MmultiscriptsType.
     * 
     * @return _false3
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_false3() {
        return _false3;
    }


    /**
     * Sets the _false3 value for this MmultiscriptsType.
     * 
     * @param _false3
     */
    public void set_false3(org.w3.www._1998.Math.MathML.ConstantType _false3) {
        this._false3 = _false3;
    }


    /**
     * Gets the infinity3 value for this MmultiscriptsType.
     * 
     * @return infinity3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getInfinity3() {
        return infinity3;
    }


    /**
     * Sets the infinity3 value for this MmultiscriptsType.
     * 
     * @param infinity3
     */
    public void setInfinity3(org.w3.www._1998.Math.MathML.ConstantType infinity3) {
        this.infinity3 = infinity3;
    }


    /**
     * Gets the notanumber3 value for this MmultiscriptsType.
     * 
     * @return notanumber3
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNotanumber3() {
        return notanumber3;
    }


    /**
     * Sets the notanumber3 value for this MmultiscriptsType.
     * 
     * @param notanumber3
     */
    public void setNotanumber3(org.w3.www._1998.Math.MathML.ConstantType notanumber3) {
        this.notanumber3 = notanumber3;
    }


    /**
     * Gets the set3 value for this MmultiscriptsType.
     * 
     * @return set3
     */
    public org.w3.www._1998.Math.MathML.SetType getSet3() {
        return set3;
    }


    /**
     * Sets the set3 value for this MmultiscriptsType.
     * 
     * @param set3
     */
    public void setSet3(org.w3.www._1998.Math.MathML.SetType set3) {
        this.set3 = set3;
    }


    /**
     * Gets the list3 value for this MmultiscriptsType.
     * 
     * @return list3
     */
    public org.w3.www._1998.Math.MathML.ListType getList3() {
        return list3;
    }


    /**
     * Sets the list3 value for this MmultiscriptsType.
     * 
     * @param list3
     */
    public void setList3(org.w3.www._1998.Math.MathML.ListType list3) {
        this.list3 = list3;
    }


    /**
     * Gets the union3 value for this MmultiscriptsType.
     * 
     * @return union3
     */
    public org.w3.www._1998.Math.MathML.UnionType getUnion3() {
        return union3;
    }


    /**
     * Sets the union3 value for this MmultiscriptsType.
     * 
     * @param union3
     */
    public void setUnion3(org.w3.www._1998.Math.MathML.UnionType union3) {
        this.union3 = union3;
    }


    /**
     * Gets the intersect3 value for this MmultiscriptsType.
     * 
     * @return intersect3
     */
    public org.w3.www._1998.Math.MathML.IntersectType getIntersect3() {
        return intersect3;
    }


    /**
     * Sets the intersect3 value for this MmultiscriptsType.
     * 
     * @param intersect3
     */
    public void setIntersect3(org.w3.www._1998.Math.MathML.IntersectType intersect3) {
        this.intersect3 = intersect3;
    }


    /**
     * Gets the in3 value for this MmultiscriptsType.
     * 
     * @return in3
     */
    public org.w3.www._1998.Math.MathML.InType getIn3() {
        return in3;
    }


    /**
     * Sets the in3 value for this MmultiscriptsType.
     * 
     * @param in3
     */
    public void setIn3(org.w3.www._1998.Math.MathML.InType in3) {
        this.in3 = in3;
    }


    /**
     * Gets the notin3 value for this MmultiscriptsType.
     * 
     * @return notin3
     */
    public org.w3.www._1998.Math.MathML.NotinType getNotin3() {
        return notin3;
    }


    /**
     * Sets the notin3 value for this MmultiscriptsType.
     * 
     * @param notin3
     */
    public void setNotin3(org.w3.www._1998.Math.MathML.NotinType notin3) {
        this.notin3 = notin3;
    }


    /**
     * Gets the subset3 value for this MmultiscriptsType.
     * 
     * @return subset3
     */
    public org.w3.www._1998.Math.MathML.SubsetType getSubset3() {
        return subset3;
    }


    /**
     * Sets the subset3 value for this MmultiscriptsType.
     * 
     * @param subset3
     */
    public void setSubset3(org.w3.www._1998.Math.MathML.SubsetType subset3) {
        this.subset3 = subset3;
    }


    /**
     * Gets the prsubset3 value for this MmultiscriptsType.
     * 
     * @return prsubset3
     */
    public org.w3.www._1998.Math.MathML.PrsubsetType getPrsubset3() {
        return prsubset3;
    }


    /**
     * Sets the prsubset3 value for this MmultiscriptsType.
     * 
     * @param prsubset3
     */
    public void setPrsubset3(org.w3.www._1998.Math.MathML.PrsubsetType prsubset3) {
        this.prsubset3 = prsubset3;
    }


    /**
     * Gets the notsubset3 value for this MmultiscriptsType.
     * 
     * @return notsubset3
     */
    public org.w3.www._1998.Math.MathML.NotsubsetType getNotsubset3() {
        return notsubset3;
    }


    /**
     * Sets the notsubset3 value for this MmultiscriptsType.
     * 
     * @param notsubset3
     */
    public void setNotsubset3(org.w3.www._1998.Math.MathML.NotsubsetType notsubset3) {
        this.notsubset3 = notsubset3;
    }


    /**
     * Gets the notprsubset3 value for this MmultiscriptsType.
     * 
     * @return notprsubset3
     */
    public org.w3.www._1998.Math.MathML.NotprsubsetType getNotprsubset3() {
        return notprsubset3;
    }


    /**
     * Sets the notprsubset3 value for this MmultiscriptsType.
     * 
     * @param notprsubset3
     */
    public void setNotprsubset3(org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset3) {
        this.notprsubset3 = notprsubset3;
    }


    /**
     * Gets the setdiff3 value for this MmultiscriptsType.
     * 
     * @return setdiff3
     */
    public org.w3.www._1998.Math.MathML.SetdiffType getSetdiff3() {
        return setdiff3;
    }


    /**
     * Sets the setdiff3 value for this MmultiscriptsType.
     * 
     * @param setdiff3
     */
    public void setSetdiff3(org.w3.www._1998.Math.MathML.SetdiffType setdiff3) {
        this.setdiff3 = setdiff3;
    }


    /**
     * Gets the card3 value for this MmultiscriptsType.
     * 
     * @return card3
     */
    public org.w3.www._1998.Math.MathML.CardType getCard3() {
        return card3;
    }


    /**
     * Sets the card3 value for this MmultiscriptsType.
     * 
     * @param card3
     */
    public void setCard3(org.w3.www._1998.Math.MathML.CardType card3) {
        this.card3 = card3;
    }


    /**
     * Gets the cartesianproduct3 value for this MmultiscriptsType.
     * 
     * @return cartesianproduct3
     */
    public org.w3.www._1998.Math.MathML.CartesianproductType getCartesianproduct3() {
        return cartesianproduct3;
    }


    /**
     * Sets the cartesianproduct3 value for this MmultiscriptsType.
     * 
     * @param cartesianproduct3
     */
    public void setCartesianproduct3(org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct3) {
        this.cartesianproduct3 = cartesianproduct3;
    }


    /**
     * Gets the eq3 value for this MmultiscriptsType.
     * 
     * @return eq3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEq3() {
        return eq3;
    }


    /**
     * Sets the eq3 value for this MmultiscriptsType.
     * 
     * @param eq3
     */
    public void setEq3(org.w3.www._1998.Math.MathML.RelationsType eq3) {
        this.eq3 = eq3;
    }


    /**
     * Gets the neq3 value for this MmultiscriptsType.
     * 
     * @return neq3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getNeq3() {
        return neq3;
    }


    /**
     * Sets the neq3 value for this MmultiscriptsType.
     * 
     * @param neq3
     */
    public void setNeq3(org.w3.www._1998.Math.MathML.RelationsType neq3) {
        this.neq3 = neq3;
    }


    /**
     * Gets the leq3 value for this MmultiscriptsType.
     * 
     * @return leq3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLeq3() {
        return leq3;
    }


    /**
     * Sets the leq3 value for this MmultiscriptsType.
     * 
     * @param leq3
     */
    public void setLeq3(org.w3.www._1998.Math.MathML.RelationsType leq3) {
        this.leq3 = leq3;
    }


    /**
     * Gets the lt3 value for this MmultiscriptsType.
     * 
     * @return lt3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLt3() {
        return lt3;
    }


    /**
     * Sets the lt3 value for this MmultiscriptsType.
     * 
     * @param lt3
     */
    public void setLt3(org.w3.www._1998.Math.MathML.RelationsType lt3) {
        this.lt3 = lt3;
    }


    /**
     * Gets the geq3 value for this MmultiscriptsType.
     * 
     * @return geq3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGeq3() {
        return geq3;
    }


    /**
     * Sets the geq3 value for this MmultiscriptsType.
     * 
     * @param geq3
     */
    public void setGeq3(org.w3.www._1998.Math.MathML.RelationsType geq3) {
        this.geq3 = geq3;
    }


    /**
     * Gets the gt3 value for this MmultiscriptsType.
     * 
     * @return gt3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGt3() {
        return gt3;
    }


    /**
     * Sets the gt3 value for this MmultiscriptsType.
     * 
     * @param gt3
     */
    public void setGt3(org.w3.www._1998.Math.MathML.RelationsType gt3) {
        this.gt3 = gt3;
    }


    /**
     * Gets the equivalent3 value for this MmultiscriptsType.
     * 
     * @return equivalent3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEquivalent3() {
        return equivalent3;
    }


    /**
     * Sets the equivalent3 value for this MmultiscriptsType.
     * 
     * @param equivalent3
     */
    public void setEquivalent3(org.w3.www._1998.Math.MathML.RelationsType equivalent3) {
        this.equivalent3 = equivalent3;
    }


    /**
     * Gets the approx3 value for this MmultiscriptsType.
     * 
     * @return approx3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getApprox3() {
        return approx3;
    }


    /**
     * Sets the approx3 value for this MmultiscriptsType.
     * 
     * @param approx3
     */
    public void setApprox3(org.w3.www._1998.Math.MathML.RelationsType approx3) {
        this.approx3 = approx3;
    }


    /**
     * Gets the factorof3 value for this MmultiscriptsType.
     * 
     * @return factorof3
     */
    public org.w3.www._1998.Math.MathML.RelationsType getFactorof3() {
        return factorof3;
    }


    /**
     * Sets the factorof3 value for this MmultiscriptsType.
     * 
     * @param factorof3
     */
    public void setFactorof3(org.w3.www._1998.Math.MathML.RelationsType factorof3) {
        this.factorof3 = factorof3;
    }


    /**
     * Gets the exp3 value for this MmultiscriptsType.
     * 
     * @return exp3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getExp3() {
        return exp3;
    }


    /**
     * Sets the exp3 value for this MmultiscriptsType.
     * 
     * @param exp3
     */
    public void setExp3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp3) {
        this.exp3 = exp3;
    }


    /**
     * Gets the ln3 value for this MmultiscriptsType.
     * 
     * @return ln3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLn3() {
        return ln3;
    }


    /**
     * Sets the ln3 value for this MmultiscriptsType.
     * 
     * @param ln3
     */
    public void setLn3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln3) {
        this.ln3 = ln3;
    }


    /**
     * Gets the log3 value for this MmultiscriptsType.
     * 
     * @return log3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLog3() {
        return log3;
    }


    /**
     * Sets the log3 value for this MmultiscriptsType.
     * 
     * @param log3
     */
    public void setLog3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType log3) {
        this.log3 = log3;
    }


    /**
     * Gets the logbase3 value for this MmultiscriptsType.
     * 
     * @return logbase3
     */
    public org.w3.www._1998.Math.MathML.LogbaseType getLogbase3() {
        return logbase3;
    }


    /**
     * Sets the logbase3 value for this MmultiscriptsType.
     * 
     * @param logbase3
     */
    public void setLogbase3(org.w3.www._1998.Math.MathML.LogbaseType logbase3) {
        this.logbase3 = logbase3;
    }


    /**
     * Gets the sin3 value for this MmultiscriptsType.
     * 
     * @return sin3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSin3() {
        return sin3;
    }


    /**
     * Sets the sin3 value for this MmultiscriptsType.
     * 
     * @param sin3
     */
    public void setSin3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin3) {
        this.sin3 = sin3;
    }


    /**
     * Gets the cos3 value for this MmultiscriptsType.
     * 
     * @return cos3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCos3() {
        return cos3;
    }


    /**
     * Sets the cos3 value for this MmultiscriptsType.
     * 
     * @param cos3
     */
    public void setCos3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos3) {
        this.cos3 = cos3;
    }


    /**
     * Gets the tan3 value for this MmultiscriptsType.
     * 
     * @return tan3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTan3() {
        return tan3;
    }


    /**
     * Sets the tan3 value for this MmultiscriptsType.
     * 
     * @param tan3
     */
    public void setTan3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan3) {
        this.tan3 = tan3;
    }


    /**
     * Gets the sec3 value for this MmultiscriptsType.
     * 
     * @return sec3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSec3() {
        return sec3;
    }


    /**
     * Sets the sec3 value for this MmultiscriptsType.
     * 
     * @param sec3
     */
    public void setSec3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec3) {
        this.sec3 = sec3;
    }


    /**
     * Gets the csc3 value for this MmultiscriptsType.
     * 
     * @return csc3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsc3() {
        return csc3;
    }


    /**
     * Sets the csc3 value for this MmultiscriptsType.
     * 
     * @param csc3
     */
    public void setCsc3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc3) {
        this.csc3 = csc3;
    }


    /**
     * Gets the cot3 value for this MmultiscriptsType.
     * 
     * @return cot3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCot3() {
        return cot3;
    }


    /**
     * Sets the cot3 value for this MmultiscriptsType.
     * 
     * @param cot3
     */
    public void setCot3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot3) {
        this.cot3 = cot3;
    }


    /**
     * Gets the arcsin3 value for this MmultiscriptsType.
     * 
     * @return arcsin3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsin3() {
        return arcsin3;
    }


    /**
     * Sets the arcsin3 value for this MmultiscriptsType.
     * 
     * @param arcsin3
     */
    public void setArcsin3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin3) {
        this.arcsin3 = arcsin3;
    }


    /**
     * Gets the arccos3 value for this MmultiscriptsType.
     * 
     * @return arccos3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccos3() {
        return arccos3;
    }


    /**
     * Sets the arccos3 value for this MmultiscriptsType.
     * 
     * @param arccos3
     */
    public void setArccos3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos3) {
        this.arccos3 = arccos3;
    }


    /**
     * Gets the arctan3 value for this MmultiscriptsType.
     * 
     * @return arctan3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctan3() {
        return arctan3;
    }


    /**
     * Sets the arctan3 value for this MmultiscriptsType.
     * 
     * @param arctan3
     */
    public void setArctan3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan3) {
        this.arctan3 = arctan3;
    }


    /**
     * Gets the arcsec3 value for this MmultiscriptsType.
     * 
     * @return arcsec3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsec3() {
        return arcsec3;
    }


    /**
     * Sets the arcsec3 value for this MmultiscriptsType.
     * 
     * @param arcsec3
     */
    public void setArcsec3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec3) {
        this.arcsec3 = arcsec3;
    }


    /**
     * Gets the arccsc3 value for this MmultiscriptsType.
     * 
     * @return arccsc3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsc3() {
        return arccsc3;
    }


    /**
     * Sets the arccsc3 value for this MmultiscriptsType.
     * 
     * @param arccsc3
     */
    public void setArccsc3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc3) {
        this.arccsc3 = arccsc3;
    }


    /**
     * Gets the arccot3 value for this MmultiscriptsType.
     * 
     * @return arccot3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccot3() {
        return arccot3;
    }


    /**
     * Sets the arccot3 value for this MmultiscriptsType.
     * 
     * @param arccot3
     */
    public void setArccot3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot3) {
        this.arccot3 = arccot3;
    }


    /**
     * Gets the sinh3 value for this MmultiscriptsType.
     * 
     * @return sinh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSinh3() {
        return sinh3;
    }


    /**
     * Sets the sinh3 value for this MmultiscriptsType.
     * 
     * @param sinh3
     */
    public void setSinh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh3) {
        this.sinh3 = sinh3;
    }


    /**
     * Gets the cosh3 value for this MmultiscriptsType.
     * 
     * @return cosh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCosh3() {
        return cosh3;
    }


    /**
     * Sets the cosh3 value for this MmultiscriptsType.
     * 
     * @param cosh3
     */
    public void setCosh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh3) {
        this.cosh3 = cosh3;
    }


    /**
     * Gets the tanh3 value for this MmultiscriptsType.
     * 
     * @return tanh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTanh3() {
        return tanh3;
    }


    /**
     * Sets the tanh3 value for this MmultiscriptsType.
     * 
     * @param tanh3
     */
    public void setTanh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh3) {
        this.tanh3 = tanh3;
    }


    /**
     * Gets the sech3 value for this MmultiscriptsType.
     * 
     * @return sech3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSech3() {
        return sech3;
    }


    /**
     * Sets the sech3 value for this MmultiscriptsType.
     * 
     * @param sech3
     */
    public void setSech3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech3) {
        this.sech3 = sech3;
    }


    /**
     * Gets the csch3 value for this MmultiscriptsType.
     * 
     * @return csch3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsch3() {
        return csch3;
    }


    /**
     * Sets the csch3 value for this MmultiscriptsType.
     * 
     * @param csch3
     */
    public void setCsch3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch3) {
        this.csch3 = csch3;
    }


    /**
     * Gets the coth3 value for this MmultiscriptsType.
     * 
     * @return coth3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCoth3() {
        return coth3;
    }


    /**
     * Sets the coth3 value for this MmultiscriptsType.
     * 
     * @param coth3
     */
    public void setCoth3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth3) {
        this.coth3 = coth3;
    }


    /**
     * Gets the arccosh3 value for this MmultiscriptsType.
     * 
     * @return arccosh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccosh3() {
        return arccosh3;
    }


    /**
     * Sets the arccosh3 value for this MmultiscriptsType.
     * 
     * @param arccosh3
     */
    public void setArccosh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh3) {
        this.arccosh3 = arccosh3;
    }


    /**
     * Gets the arccoth3 value for this MmultiscriptsType.
     * 
     * @return arccoth3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccoth3() {
        return arccoth3;
    }


    /**
     * Sets the arccoth3 value for this MmultiscriptsType.
     * 
     * @param arccoth3
     */
    public void setArccoth3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth3) {
        this.arccoth3 = arccoth3;
    }


    /**
     * Gets the arccsch3 value for this MmultiscriptsType.
     * 
     * @return arccsch3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsch3() {
        return arccsch3;
    }


    /**
     * Sets the arccsch3 value for this MmultiscriptsType.
     * 
     * @param arccsch3
     */
    public void setArccsch3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch3) {
        this.arccsch3 = arccsch3;
    }


    /**
     * Gets the arcsech3 value for this MmultiscriptsType.
     * 
     * @return arcsech3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsech3() {
        return arcsech3;
    }


    /**
     * Sets the arcsech3 value for this MmultiscriptsType.
     * 
     * @param arcsech3
     */
    public void setArcsech3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech3) {
        this.arcsech3 = arcsech3;
    }


    /**
     * Gets the arcsinh3 value for this MmultiscriptsType.
     * 
     * @return arcsinh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsinh3() {
        return arcsinh3;
    }


    /**
     * Sets the arcsinh3 value for this MmultiscriptsType.
     * 
     * @param arcsinh3
     */
    public void setArcsinh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh3) {
        this.arcsinh3 = arcsinh3;
    }


    /**
     * Gets the arctanh3 value for this MmultiscriptsType.
     * 
     * @return arctanh3
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctanh3() {
        return arctanh3;
    }


    /**
     * Sets the arctanh3 value for this MmultiscriptsType.
     * 
     * @param arctanh3
     */
    public void setArctanh3(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh3) {
        this.arctanh3 = arctanh3;
    }


    /**
     * Gets the _int3 value for this MmultiscriptsType.
     * 
     * @return _int3
     */
    public org.w3.www._1998.Math.MathML.IntType get_int3() {
        return _int3;
    }


    /**
     * Sets the _int3 value for this MmultiscriptsType.
     * 
     * @param _int3
     */
    public void set_int3(org.w3.www._1998.Math.MathML.IntType _int3) {
        this._int3 = _int3;
    }


    /**
     * Gets the diff3 value for this MmultiscriptsType.
     * 
     * @return diff3
     */
    public org.w3.www._1998.Math.MathML.DiffType getDiff3() {
        return diff3;
    }


    /**
     * Sets the diff3 value for this MmultiscriptsType.
     * 
     * @param diff3
     */
    public void setDiff3(org.w3.www._1998.Math.MathML.DiffType diff3) {
        this.diff3 = diff3;
    }


    /**
     * Gets the partialdiff3 value for this MmultiscriptsType.
     * 
     * @return partialdiff3
     */
    public org.w3.www._1998.Math.MathML.PartialdiffType getPartialdiff3() {
        return partialdiff3;
    }


    /**
     * Sets the partialdiff3 value for this MmultiscriptsType.
     * 
     * @param partialdiff3
     */
    public void setPartialdiff3(org.w3.www._1998.Math.MathML.PartialdiffType partialdiff3) {
        this.partialdiff3 = partialdiff3;
    }


    /**
     * Gets the limit3 value for this MmultiscriptsType.
     * 
     * @return limit3
     */
    public org.w3.www._1998.Math.MathML.LimitType getLimit3() {
        return limit3;
    }


    /**
     * Sets the limit3 value for this MmultiscriptsType.
     * 
     * @param limit3
     */
    public void setLimit3(org.w3.www._1998.Math.MathML.LimitType limit3) {
        this.limit3 = limit3;
    }


    /**
     * Gets the lowlimit3 value for this MmultiscriptsType.
     * 
     * @return lowlimit3
     */
    public org.w3.www._1998.Math.MathML.LowlimitType getLowlimit3() {
        return lowlimit3;
    }


    /**
     * Sets the lowlimit3 value for this MmultiscriptsType.
     * 
     * @param lowlimit3
     */
    public void setLowlimit3(org.w3.www._1998.Math.MathML.LowlimitType lowlimit3) {
        this.lowlimit3 = lowlimit3;
    }


    /**
     * Gets the uplimit3 value for this MmultiscriptsType.
     * 
     * @return uplimit3
     */
    public org.w3.www._1998.Math.MathML.UplimitType getUplimit3() {
        return uplimit3;
    }


    /**
     * Sets the uplimit3 value for this MmultiscriptsType.
     * 
     * @param uplimit3
     */
    public void setUplimit3(org.w3.www._1998.Math.MathML.UplimitType uplimit3) {
        this.uplimit3 = uplimit3;
    }


    /**
     * Gets the tendsto3 value for this MmultiscriptsType.
     * 
     * @return tendsto3
     */
    public org.w3.www._1998.Math.MathML.TendstoType getTendsto3() {
        return tendsto3;
    }


    /**
     * Sets the tendsto3 value for this MmultiscriptsType.
     * 
     * @param tendsto3
     */
    public void setTendsto3(org.w3.www._1998.Math.MathML.TendstoType tendsto3) {
        this.tendsto3 = tendsto3;
    }


    /**
     * Gets the vector3 value for this MmultiscriptsType.
     * 
     * @return vector3
     */
    public org.w3.www._1998.Math.MathML.VectorType getVector3() {
        return vector3;
    }


    /**
     * Sets the vector3 value for this MmultiscriptsType.
     * 
     * @param vector3
     */
    public void setVector3(org.w3.www._1998.Math.MathML.VectorType vector3) {
        this.vector3 = vector3;
    }


    /**
     * Gets the matrix3 value for this MmultiscriptsType.
     * 
     * @return matrix3
     */
    public org.w3.www._1998.Math.MathML.MatrixType getMatrix3() {
        return matrix3;
    }


    /**
     * Sets the matrix3 value for this MmultiscriptsType.
     * 
     * @param matrix3
     */
    public void setMatrix3(org.w3.www._1998.Math.MathML.MatrixType matrix3) {
        this.matrix3 = matrix3;
    }


    /**
     * Gets the determinant3 value for this MmultiscriptsType.
     * 
     * @return determinant3
     */
    public org.w3.www._1998.Math.MathML.DeterminantType getDeterminant3() {
        return determinant3;
    }


    /**
     * Sets the determinant3 value for this MmultiscriptsType.
     * 
     * @param determinant3
     */
    public void setDeterminant3(org.w3.www._1998.Math.MathML.DeterminantType determinant3) {
        this.determinant3 = determinant3;
    }


    /**
     * Gets the transpose3 value for this MmultiscriptsType.
     * 
     * @return transpose3
     */
    public org.w3.www._1998.Math.MathML.TransposeType getTranspose3() {
        return transpose3;
    }


    /**
     * Sets the transpose3 value for this MmultiscriptsType.
     * 
     * @param transpose3
     */
    public void setTranspose3(org.w3.www._1998.Math.MathML.TransposeType transpose3) {
        this.transpose3 = transpose3;
    }


    /**
     * Gets the selector3 value for this MmultiscriptsType.
     * 
     * @return selector3
     */
    public org.w3.www._1998.Math.MathML.SelectorType getSelector3() {
        return selector3;
    }


    /**
     * Sets the selector3 value for this MmultiscriptsType.
     * 
     * @param selector3
     */
    public void setSelector3(org.w3.www._1998.Math.MathML.SelectorType selector3) {
        this.selector3 = selector3;
    }


    /**
     * Gets the vectorproduct3 value for this MmultiscriptsType.
     * 
     * @return vectorproduct3
     */
    public org.w3.www._1998.Math.MathML.VectorproductType getVectorproduct3() {
        return vectorproduct3;
    }


    /**
     * Sets the vectorproduct3 value for this MmultiscriptsType.
     * 
     * @param vectorproduct3
     */
    public void setVectorproduct3(org.w3.www._1998.Math.MathML.VectorproductType vectorproduct3) {
        this.vectorproduct3 = vectorproduct3;
    }


    /**
     * Gets the scalarproduct3 value for this MmultiscriptsType.
     * 
     * @return scalarproduct3
     */
    public org.w3.www._1998.Math.MathML.ScalarproductType getScalarproduct3() {
        return scalarproduct3;
    }


    /**
     * Sets the scalarproduct3 value for this MmultiscriptsType.
     * 
     * @param scalarproduct3
     */
    public void setScalarproduct3(org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct3) {
        this.scalarproduct3 = scalarproduct3;
    }


    /**
     * Gets the outerproduct3 value for this MmultiscriptsType.
     * 
     * @return outerproduct3
     */
    public org.w3.www._1998.Math.MathML.OuterproductType getOuterproduct3() {
        return outerproduct3;
    }


    /**
     * Sets the outerproduct3 value for this MmultiscriptsType.
     * 
     * @param outerproduct3
     */
    public void setOuterproduct3(org.w3.www._1998.Math.MathML.OuterproductType outerproduct3) {
        this.outerproduct3 = outerproduct3;
    }


    /**
     * Gets the divergence3 value for this MmultiscriptsType.
     * 
     * @return divergence3
     */
    public org.w3.www._1998.Math.MathML.DivergenceType getDivergence3() {
        return divergence3;
    }


    /**
     * Sets the divergence3 value for this MmultiscriptsType.
     * 
     * @param divergence3
     */
    public void setDivergence3(org.w3.www._1998.Math.MathML.DivergenceType divergence3) {
        this.divergence3 = divergence3;
    }


    /**
     * Gets the grad3 value for this MmultiscriptsType.
     * 
     * @return grad3
     */
    public org.w3.www._1998.Math.MathML.GradType getGrad3() {
        return grad3;
    }


    /**
     * Sets the grad3 value for this MmultiscriptsType.
     * 
     * @param grad3
     */
    public void setGrad3(org.w3.www._1998.Math.MathML.GradType grad3) {
        this.grad3 = grad3;
    }


    /**
     * Gets the curl3 value for this MmultiscriptsType.
     * 
     * @return curl3
     */
    public org.w3.www._1998.Math.MathML.CurlType getCurl3() {
        return curl3;
    }


    /**
     * Sets the curl3 value for this MmultiscriptsType.
     * 
     * @param curl3
     */
    public void setCurl3(org.w3.www._1998.Math.MathML.CurlType curl3) {
        this.curl3 = curl3;
    }


    /**
     * Gets the laplacian3 value for this MmultiscriptsType.
     * 
     * @return laplacian3
     */
    public org.w3.www._1998.Math.MathML.LaplacianType getLaplacian3() {
        return laplacian3;
    }


    /**
     * Sets the laplacian3 value for this MmultiscriptsType.
     * 
     * @param laplacian3
     */
    public void setLaplacian3(org.w3.www._1998.Math.MathML.LaplacianType laplacian3) {
        this.laplacian3 = laplacian3;
    }


    /**
     * Gets the mean3 value for this MmultiscriptsType.
     * 
     * @return mean3
     */
    public org.w3.www._1998.Math.MathML.MeanType getMean3() {
        return mean3;
    }


    /**
     * Sets the mean3 value for this MmultiscriptsType.
     * 
     * @param mean3
     */
    public void setMean3(org.w3.www._1998.Math.MathML.MeanType mean3) {
        this.mean3 = mean3;
    }


    /**
     * Gets the sdev3 value for this MmultiscriptsType.
     * 
     * @return sdev3
     */
    public org.w3.www._1998.Math.MathML.SdevType getSdev3() {
        return sdev3;
    }


    /**
     * Sets the sdev3 value for this MmultiscriptsType.
     * 
     * @param sdev3
     */
    public void setSdev3(org.w3.www._1998.Math.MathML.SdevType sdev3) {
        this.sdev3 = sdev3;
    }


    /**
     * Gets the variance3 value for this MmultiscriptsType.
     * 
     * @return variance3
     */
    public org.w3.www._1998.Math.MathML.VarianceType getVariance3() {
        return variance3;
    }


    /**
     * Sets the variance3 value for this MmultiscriptsType.
     * 
     * @param variance3
     */
    public void setVariance3(org.w3.www._1998.Math.MathML.VarianceType variance3) {
        this.variance3 = variance3;
    }


    /**
     * Gets the median3 value for this MmultiscriptsType.
     * 
     * @return median3
     */
    public org.w3.www._1998.Math.MathML.MedianType getMedian3() {
        return median3;
    }


    /**
     * Sets the median3 value for this MmultiscriptsType.
     * 
     * @param median3
     */
    public void setMedian3(org.w3.www._1998.Math.MathML.MedianType median3) {
        this.median3 = median3;
    }


    /**
     * Gets the mode3 value for this MmultiscriptsType.
     * 
     * @return mode3
     */
    public org.w3.www._1998.Math.MathML.ModeType getMode3() {
        return mode3;
    }


    /**
     * Sets the mode3 value for this MmultiscriptsType.
     * 
     * @param mode3
     */
    public void setMode3(org.w3.www._1998.Math.MathML.ModeType mode3) {
        this.mode3 = mode3;
    }


    /**
     * Gets the moment3 value for this MmultiscriptsType.
     * 
     * @return moment3
     */
    public org.w3.www._1998.Math.MathML.MomentType getMoment3() {
        return moment3;
    }


    /**
     * Sets the moment3 value for this MmultiscriptsType.
     * 
     * @param moment3
     */
    public void setMoment3(org.w3.www._1998.Math.MathML.MomentType moment3) {
        this.moment3 = moment3;
    }


    /**
     * Gets the momentabout3 value for this MmultiscriptsType.
     * 
     * @return momentabout3
     */
    public org.w3.www._1998.Math.MathML.MomentaboutType getMomentabout3() {
        return momentabout3;
    }


    /**
     * Sets the momentabout3 value for this MmultiscriptsType.
     * 
     * @param momentabout3
     */
    public void setMomentabout3(org.w3.www._1998.Math.MathML.MomentaboutType momentabout3) {
        this.momentabout3 = momentabout3;
    }


    /**
     * Gets the apply3 value for this MmultiscriptsType.
     * 
     * @return apply3
     */
    public org.w3.www._1998.Math.MathML.ApplyType getApply3() {
        return apply3;
    }


    /**
     * Sets the apply3 value for this MmultiscriptsType.
     * 
     * @param apply3
     */
    public void setApply3(org.w3.www._1998.Math.MathML.ApplyType apply3) {
        this.apply3 = apply3;
    }


    /**
     * Gets the interval3 value for this MmultiscriptsType.
     * 
     * @return interval3
     */
    public org.w3.www._1998.Math.MathML.IntervalType getInterval3() {
        return interval3;
    }


    /**
     * Sets the interval3 value for this MmultiscriptsType.
     * 
     * @param interval3
     */
    public void setInterval3(org.w3.www._1998.Math.MathML.IntervalType interval3) {
        this.interval3 = interval3;
    }


    /**
     * Gets the inverse3 value for this MmultiscriptsType.
     * 
     * @return inverse3
     */
    public org.w3.www._1998.Math.MathML.InverseType getInverse3() {
        return inverse3;
    }


    /**
     * Sets the inverse3 value for this MmultiscriptsType.
     * 
     * @param inverse3
     */
    public void setInverse3(org.w3.www._1998.Math.MathML.InverseType inverse3) {
        this.inverse3 = inverse3;
    }


    /**
     * Gets the condition3 value for this MmultiscriptsType.
     * 
     * @return condition3
     */
    public org.w3.www._1998.Math.MathML.ConditionType getCondition3() {
        return condition3;
    }


    /**
     * Sets the condition3 value for this MmultiscriptsType.
     * 
     * @param condition3
     */
    public void setCondition3(org.w3.www._1998.Math.MathML.ConditionType condition3) {
        this.condition3 = condition3;
    }


    /**
     * Gets the declare3 value for this MmultiscriptsType.
     * 
     * @return declare3
     */
    public org.w3.www._1998.Math.MathML.DeclareType getDeclare3() {
        return declare3;
    }


    /**
     * Sets the declare3 value for this MmultiscriptsType.
     * 
     * @param declare3
     */
    public void setDeclare3(org.w3.www._1998.Math.MathML.DeclareType declare3) {
        this.declare3 = declare3;
    }


    /**
     * Gets the lambda3 value for this MmultiscriptsType.
     * 
     * @return lambda3
     */
    public org.w3.www._1998.Math.MathML.LambdaType getLambda3() {
        return lambda3;
    }


    /**
     * Sets the lambda3 value for this MmultiscriptsType.
     * 
     * @param lambda3
     */
    public void setLambda3(org.w3.www._1998.Math.MathML.LambdaType lambda3) {
        this.lambda3 = lambda3;
    }


    /**
     * Gets the piecewise3 value for this MmultiscriptsType.
     * 
     * @return piecewise3
     */
    public org.w3.www._1998.Math.MathML.PiecewiseType getPiecewise3() {
        return piecewise3;
    }


    /**
     * Sets the piecewise3 value for this MmultiscriptsType.
     * 
     * @param piecewise3
     */
    public void setPiecewise3(org.w3.www._1998.Math.MathML.PiecewiseType piecewise3) {
        this.piecewise3 = piecewise3;
    }


    /**
     * Gets the bvar3 value for this MmultiscriptsType.
     * 
     * @return bvar3
     */
    public org.w3.www._1998.Math.MathML.BvarType getBvar3() {
        return bvar3;
    }


    /**
     * Sets the bvar3 value for this MmultiscriptsType.
     * 
     * @param bvar3
     */
    public void setBvar3(org.w3.www._1998.Math.MathML.BvarType bvar3) {
        this.bvar3 = bvar3;
    }


    /**
     * Gets the degree3 value for this MmultiscriptsType.
     * 
     * @return degree3
     */
    public org.w3.www._1998.Math.MathML.DegreeType getDegree3() {
        return degree3;
    }


    /**
     * Sets the degree3 value for this MmultiscriptsType.
     * 
     * @param degree3
     */
    public void setDegree3(org.w3.www._1998.Math.MathML.DegreeType degree3) {
        this.degree3 = degree3;
    }


    /**
     * Gets the semantics3 value for this MmultiscriptsType.
     * 
     * @return semantics3
     */
    public org.w3.www._1998.Math.MathML.SemanticsType getSemantics3() {
        return semantics3;
    }


    /**
     * Sets the semantics3 value for this MmultiscriptsType.
     * 
     * @param semantics3
     */
    public void setSemantics3(org.w3.www._1998.Math.MathML.SemanticsType semantics3) {
        this.semantics3 = semantics3;
    }


    /**
     * Gets the none2 value for this MmultiscriptsType.
     * 
     * @return none2
     */
    public org.w3.www._1998.Math.MathML.NoneType getNone2() {
        return none2;
    }


    /**
     * Sets the none2 value for this MmultiscriptsType.
     * 
     * @param none2
     */
    public void setNone2(org.w3.www._1998.Math.MathML.NoneType none2) {
        this.none2 = none2;
    }


    /**
     * Gets the mprescripts value for this MmultiscriptsType.
     * 
     * @return mprescripts
     */
    public org.w3.www._1998.Math.MathML.MprescriptsType getMprescripts() {
        return mprescripts;
    }


    /**
     * Sets the mprescripts value for this MmultiscriptsType.
     * 
     * @param mprescripts
     */
    public void setMprescripts(org.w3.www._1998.Math.MathML.MprescriptsType mprescripts) {
        this.mprescripts = mprescripts;
    }


    /**
     * Gets the mi4 value for this MmultiscriptsType.
     * 
     * @return mi4
     */
    public org.w3.www._1998.Math.MathML.MiType getMi4() {
        return mi4;
    }


    /**
     * Sets the mi4 value for this MmultiscriptsType.
     * 
     * @param mi4
     */
    public void setMi4(org.w3.www._1998.Math.MathML.MiType mi4) {
        this.mi4 = mi4;
    }


    /**
     * Gets the mo4 value for this MmultiscriptsType.
     * 
     * @return mo4
     */
    public org.w3.www._1998.Math.MathML.MoType getMo4() {
        return mo4;
    }


    /**
     * Sets the mo4 value for this MmultiscriptsType.
     * 
     * @param mo4
     */
    public void setMo4(org.w3.www._1998.Math.MathML.MoType mo4) {
        this.mo4 = mo4;
    }


    /**
     * Gets the mn4 value for this MmultiscriptsType.
     * 
     * @return mn4
     */
    public org.w3.www._1998.Math.MathML.MnType getMn4() {
        return mn4;
    }


    /**
     * Sets the mn4 value for this MmultiscriptsType.
     * 
     * @param mn4
     */
    public void setMn4(org.w3.www._1998.Math.MathML.MnType mn4) {
        this.mn4 = mn4;
    }


    /**
     * Gets the mtext4 value for this MmultiscriptsType.
     * 
     * @return mtext4
     */
    public org.w3.www._1998.Math.MathML.MtextType getMtext4() {
        return mtext4;
    }


    /**
     * Sets the mtext4 value for this MmultiscriptsType.
     * 
     * @param mtext4
     */
    public void setMtext4(org.w3.www._1998.Math.MathML.MtextType mtext4) {
        this.mtext4 = mtext4;
    }


    /**
     * Gets the ms4 value for this MmultiscriptsType.
     * 
     * @return ms4
     */
    public org.w3.www._1998.Math.MathML.MsType getMs4() {
        return ms4;
    }


    /**
     * Sets the ms4 value for this MmultiscriptsType.
     * 
     * @param ms4
     */
    public void setMs4(org.w3.www._1998.Math.MathML.MsType ms4) {
        this.ms4 = ms4;
    }


    /**
     * Gets the mrow4 value for this MmultiscriptsType.
     * 
     * @return mrow4
     */
    public org.w3.www._1998.Math.MathML.MrowType getMrow4() {
        return mrow4;
    }


    /**
     * Sets the mrow4 value for this MmultiscriptsType.
     * 
     * @param mrow4
     */
    public void setMrow4(org.w3.www._1998.Math.MathML.MrowType mrow4) {
        this.mrow4 = mrow4;
    }


    /**
     * Gets the mfrac4 value for this MmultiscriptsType.
     * 
     * @return mfrac4
     */
    public org.w3.www._1998.Math.MathML.MfracType getMfrac4() {
        return mfrac4;
    }


    /**
     * Sets the mfrac4 value for this MmultiscriptsType.
     * 
     * @param mfrac4
     */
    public void setMfrac4(org.w3.www._1998.Math.MathML.MfracType mfrac4) {
        this.mfrac4 = mfrac4;
    }


    /**
     * Gets the msqrt4 value for this MmultiscriptsType.
     * 
     * @return msqrt4
     */
    public org.w3.www._1998.Math.MathML.MsqrtType getMsqrt4() {
        return msqrt4;
    }


    /**
     * Sets the msqrt4 value for this MmultiscriptsType.
     * 
     * @param msqrt4
     */
    public void setMsqrt4(org.w3.www._1998.Math.MathML.MsqrtType msqrt4) {
        this.msqrt4 = msqrt4;
    }


    /**
     * Gets the mroot4 value for this MmultiscriptsType.
     * 
     * @return mroot4
     */
    public org.w3.www._1998.Math.MathML.MrootType getMroot4() {
        return mroot4;
    }


    /**
     * Sets the mroot4 value for this MmultiscriptsType.
     * 
     * @param mroot4
     */
    public void setMroot4(org.w3.www._1998.Math.MathML.MrootType mroot4) {
        this.mroot4 = mroot4;
    }


    /**
     * Gets the mpadded4 value for this MmultiscriptsType.
     * 
     * @return mpadded4
     */
    public org.w3.www._1998.Math.MathML.MpaddedType getMpadded4() {
        return mpadded4;
    }


    /**
     * Sets the mpadded4 value for this MmultiscriptsType.
     * 
     * @param mpadded4
     */
    public void setMpadded4(org.w3.www._1998.Math.MathML.MpaddedType mpadded4) {
        this.mpadded4 = mpadded4;
    }


    /**
     * Gets the mphantom4 value for this MmultiscriptsType.
     * 
     * @return mphantom4
     */
    public org.w3.www._1998.Math.MathML.MphantomType getMphantom4() {
        return mphantom4;
    }


    /**
     * Sets the mphantom4 value for this MmultiscriptsType.
     * 
     * @param mphantom4
     */
    public void setMphantom4(org.w3.www._1998.Math.MathML.MphantomType mphantom4) {
        this.mphantom4 = mphantom4;
    }


    /**
     * Gets the mfenced4 value for this MmultiscriptsType.
     * 
     * @return mfenced4
     */
    public org.w3.www._1998.Math.MathML.MfencedType getMfenced4() {
        return mfenced4;
    }


    /**
     * Sets the mfenced4 value for this MmultiscriptsType.
     * 
     * @param mfenced4
     */
    public void setMfenced4(org.w3.www._1998.Math.MathML.MfencedType mfenced4) {
        this.mfenced4 = mfenced4;
    }


    /**
     * Gets the menclose4 value for this MmultiscriptsType.
     * 
     * @return menclose4
     */
    public org.w3.www._1998.Math.MathML.MencloseType getMenclose4() {
        return menclose4;
    }


    /**
     * Sets the menclose4 value for this MmultiscriptsType.
     * 
     * @param menclose4
     */
    public void setMenclose4(org.w3.www._1998.Math.MathML.MencloseType menclose4) {
        this.menclose4 = menclose4;
    }


    /**
     * Gets the msub4 value for this MmultiscriptsType.
     * 
     * @return msub4
     */
    public org.w3.www._1998.Math.MathML.MsubType getMsub4() {
        return msub4;
    }


    /**
     * Sets the msub4 value for this MmultiscriptsType.
     * 
     * @param msub4
     */
    public void setMsub4(org.w3.www._1998.Math.MathML.MsubType msub4) {
        this.msub4 = msub4;
    }


    /**
     * Gets the msup4 value for this MmultiscriptsType.
     * 
     * @return msup4
     */
    public org.w3.www._1998.Math.MathML.MsupType getMsup4() {
        return msup4;
    }


    /**
     * Sets the msup4 value for this MmultiscriptsType.
     * 
     * @param msup4
     */
    public void setMsup4(org.w3.www._1998.Math.MathML.MsupType msup4) {
        this.msup4 = msup4;
    }


    /**
     * Gets the msubsup4 value for this MmultiscriptsType.
     * 
     * @return msubsup4
     */
    public org.w3.www._1998.Math.MathML.MsubsupType getMsubsup4() {
        return msubsup4;
    }


    /**
     * Sets the msubsup4 value for this MmultiscriptsType.
     * 
     * @param msubsup4
     */
    public void setMsubsup4(org.w3.www._1998.Math.MathML.MsubsupType msubsup4) {
        this.msubsup4 = msubsup4;
    }


    /**
     * Gets the munder4 value for this MmultiscriptsType.
     * 
     * @return munder4
     */
    public org.w3.www._1998.Math.MathML.MunderType getMunder4() {
        return munder4;
    }


    /**
     * Sets the munder4 value for this MmultiscriptsType.
     * 
     * @param munder4
     */
    public void setMunder4(org.w3.www._1998.Math.MathML.MunderType munder4) {
        this.munder4 = munder4;
    }


    /**
     * Gets the mover4 value for this MmultiscriptsType.
     * 
     * @return mover4
     */
    public org.w3.www._1998.Math.MathML.MoverType getMover4() {
        return mover4;
    }


    /**
     * Sets the mover4 value for this MmultiscriptsType.
     * 
     * @param mover4
     */
    public void setMover4(org.w3.www._1998.Math.MathML.MoverType mover4) {
        this.mover4 = mover4;
    }


    /**
     * Gets the munderover4 value for this MmultiscriptsType.
     * 
     * @return munderover4
     */
    public org.w3.www._1998.Math.MathML.MunderoverType getMunderover4() {
        return munderover4;
    }


    /**
     * Sets the munderover4 value for this MmultiscriptsType.
     * 
     * @param munderover4
     */
    public void setMunderover4(org.w3.www._1998.Math.MathML.MunderoverType munderover4) {
        this.munderover4 = munderover4;
    }


    /**
     * Gets the mmultiscripts4 value for this MmultiscriptsType.
     * 
     * @return mmultiscripts4
     */
    public org.w3.www._1998.Math.MathML.MmultiscriptsType getMmultiscripts4() {
        return mmultiscripts4;
    }


    /**
     * Sets the mmultiscripts4 value for this MmultiscriptsType.
     * 
     * @param mmultiscripts4
     */
    public void setMmultiscripts4(org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts4) {
        this.mmultiscripts4 = mmultiscripts4;
    }


    /**
     * Gets the mtable4 value for this MmultiscriptsType.
     * 
     * @return mtable4
     */
    public org.w3.www._1998.Math.MathML.MtableType getMtable4() {
        return mtable4;
    }


    /**
     * Sets the mtable4 value for this MmultiscriptsType.
     * 
     * @param mtable4
     */
    public void setMtable4(org.w3.www._1998.Math.MathML.MtableType mtable4) {
        this.mtable4 = mtable4;
    }


    /**
     * Gets the maligngroup4 value for this MmultiscriptsType.
     * 
     * @return maligngroup4
     */
    public org.w3.www._1998.Math.MathML.MaligngroupType getMaligngroup4() {
        return maligngroup4;
    }


    /**
     * Sets the maligngroup4 value for this MmultiscriptsType.
     * 
     * @param maligngroup4
     */
    public void setMaligngroup4(org.w3.www._1998.Math.MathML.MaligngroupType maligngroup4) {
        this.maligngroup4 = maligngroup4;
    }


    /**
     * Gets the malignmark4 value for this MmultiscriptsType.
     * 
     * @return malignmark4
     */
    public org.w3.www._1998.Math.MathML.MalignmarkType getMalignmark4() {
        return malignmark4;
    }


    /**
     * Sets the malignmark4 value for this MmultiscriptsType.
     * 
     * @param malignmark4
     */
    public void setMalignmark4(org.w3.www._1998.Math.MathML.MalignmarkType malignmark4) {
        this.malignmark4 = malignmark4;
    }


    /**
     * Gets the mspace4 value for this MmultiscriptsType.
     * 
     * @return mspace4
     */
    public org.w3.www._1998.Math.MathML.MspaceType getMspace4() {
        return mspace4;
    }


    /**
     * Sets the mspace4 value for this MmultiscriptsType.
     * 
     * @param mspace4
     */
    public void setMspace4(org.w3.www._1998.Math.MathML.MspaceType mspace4) {
        this.mspace4 = mspace4;
    }


    /**
     * Gets the maction4 value for this MmultiscriptsType.
     * 
     * @return maction4
     */
    public org.w3.www._1998.Math.MathML.MactionType getMaction4() {
        return maction4;
    }


    /**
     * Sets the maction4 value for this MmultiscriptsType.
     * 
     * @param maction4
     */
    public void setMaction4(org.w3.www._1998.Math.MathML.MactionType maction4) {
        this.maction4 = maction4;
    }


    /**
     * Gets the merror4 value for this MmultiscriptsType.
     * 
     * @return merror4
     */
    public org.w3.www._1998.Math.MathML.MerrorType getMerror4() {
        return merror4;
    }


    /**
     * Sets the merror4 value for this MmultiscriptsType.
     * 
     * @param merror4
     */
    public void setMerror4(org.w3.www._1998.Math.MathML.MerrorType merror4) {
        this.merror4 = merror4;
    }


    /**
     * Gets the mstyle4 value for this MmultiscriptsType.
     * 
     * @return mstyle4
     */
    public org.w3.www._1998.Math.MathML.MstyleType getMstyle4() {
        return mstyle4;
    }


    /**
     * Sets the mstyle4 value for this MmultiscriptsType.
     * 
     * @param mstyle4
     */
    public void setMstyle4(org.w3.www._1998.Math.MathML.MstyleType mstyle4) {
        this.mstyle4 = mstyle4;
    }


    /**
     * Gets the cn4 value for this MmultiscriptsType.
     * 
     * @return cn4
     */
    public org.w3.www._1998.Math.MathML.CnType getCn4() {
        return cn4;
    }


    /**
     * Sets the cn4 value for this MmultiscriptsType.
     * 
     * @param cn4
     */
    public void setCn4(org.w3.www._1998.Math.MathML.CnType cn4) {
        this.cn4 = cn4;
    }


    /**
     * Gets the ci4 value for this MmultiscriptsType.
     * 
     * @return ci4
     */
    public org.w3.www._1998.Math.MathML.CiType getCi4() {
        return ci4;
    }


    /**
     * Sets the ci4 value for this MmultiscriptsType.
     * 
     * @param ci4
     */
    public void setCi4(org.w3.www._1998.Math.MathML.CiType ci4) {
        this.ci4 = ci4;
    }


    /**
     * Gets the csymbol4 value for this MmultiscriptsType.
     * 
     * @return csymbol4
     */
    public org.w3.www._1998.Math.MathML.CsymbolType getCsymbol4() {
        return csymbol4;
    }


    /**
     * Sets the csymbol4 value for this MmultiscriptsType.
     * 
     * @param csymbol4
     */
    public void setCsymbol4(org.w3.www._1998.Math.MathML.CsymbolType csymbol4) {
        this.csymbol4 = csymbol4;
    }


    /**
     * Gets the abs4 value for this MmultiscriptsType.
     * 
     * @return abs4
     */
    public org.w3.www._1998.Math.MathML.ArithType getAbs4() {
        return abs4;
    }


    /**
     * Sets the abs4 value for this MmultiscriptsType.
     * 
     * @param abs4
     */
    public void setAbs4(org.w3.www._1998.Math.MathML.ArithType abs4) {
        this.abs4 = abs4;
    }


    /**
     * Gets the conjugate4 value for this MmultiscriptsType.
     * 
     * @return conjugate4
     */
    public org.w3.www._1998.Math.MathML.ArithType getConjugate4() {
        return conjugate4;
    }


    /**
     * Sets the conjugate4 value for this MmultiscriptsType.
     * 
     * @param conjugate4
     */
    public void setConjugate4(org.w3.www._1998.Math.MathML.ArithType conjugate4) {
        this.conjugate4 = conjugate4;
    }


    /**
     * Gets the factorial4 value for this MmultiscriptsType.
     * 
     * @return factorial4
     */
    public org.w3.www._1998.Math.MathML.ArithType getFactorial4() {
        return factorial4;
    }


    /**
     * Sets the factorial4 value for this MmultiscriptsType.
     * 
     * @param factorial4
     */
    public void setFactorial4(org.w3.www._1998.Math.MathML.ArithType factorial4) {
        this.factorial4 = factorial4;
    }


    /**
     * Gets the arg4 value for this MmultiscriptsType.
     * 
     * @return arg4
     */
    public org.w3.www._1998.Math.MathML.ArithType getArg4() {
        return arg4;
    }


    /**
     * Sets the arg4 value for this MmultiscriptsType.
     * 
     * @param arg4
     */
    public void setArg4(org.w3.www._1998.Math.MathML.ArithType arg4) {
        this.arg4 = arg4;
    }


    /**
     * Gets the real4 value for this MmultiscriptsType.
     * 
     * @return real4
     */
    public org.w3.www._1998.Math.MathML.ArithType getReal4() {
        return real4;
    }


    /**
     * Sets the real4 value for this MmultiscriptsType.
     * 
     * @param real4
     */
    public void setReal4(org.w3.www._1998.Math.MathML.ArithType real4) {
        this.real4 = real4;
    }


    /**
     * Gets the imaginary4 value for this MmultiscriptsType.
     * 
     * @return imaginary4
     */
    public org.w3.www._1998.Math.MathML.ArithType getImaginary4() {
        return imaginary4;
    }


    /**
     * Sets the imaginary4 value for this MmultiscriptsType.
     * 
     * @param imaginary4
     */
    public void setImaginary4(org.w3.www._1998.Math.MathML.ArithType imaginary4) {
        this.imaginary4 = imaginary4;
    }


    /**
     * Gets the floor4 value for this MmultiscriptsType.
     * 
     * @return floor4
     */
    public org.w3.www._1998.Math.MathML.ArithType getFloor4() {
        return floor4;
    }


    /**
     * Sets the floor4 value for this MmultiscriptsType.
     * 
     * @param floor4
     */
    public void setFloor4(org.w3.www._1998.Math.MathML.ArithType floor4) {
        this.floor4 = floor4;
    }


    /**
     * Gets the ceiling4 value for this MmultiscriptsType.
     * 
     * @return ceiling4
     */
    public org.w3.www._1998.Math.MathML.ArithType getCeiling4() {
        return ceiling4;
    }


    /**
     * Sets the ceiling4 value for this MmultiscriptsType.
     * 
     * @param ceiling4
     */
    public void setCeiling4(org.w3.www._1998.Math.MathML.ArithType ceiling4) {
        this.ceiling4 = ceiling4;
    }


    /**
     * Gets the quotient4 value for this MmultiscriptsType.
     * 
     * @return quotient4
     */
    public org.w3.www._1998.Math.MathML.ArithType getQuotient4() {
        return quotient4;
    }


    /**
     * Sets the quotient4 value for this MmultiscriptsType.
     * 
     * @param quotient4
     */
    public void setQuotient4(org.w3.www._1998.Math.MathML.ArithType quotient4) {
        this.quotient4 = quotient4;
    }


    /**
     * Gets the divide4 value for this MmultiscriptsType.
     * 
     * @return divide4
     */
    public org.w3.www._1998.Math.MathML.ArithType getDivide4() {
        return divide4;
    }


    /**
     * Sets the divide4 value for this MmultiscriptsType.
     * 
     * @param divide4
     */
    public void setDivide4(org.w3.www._1998.Math.MathML.ArithType divide4) {
        this.divide4 = divide4;
    }


    /**
     * Gets the rem4 value for this MmultiscriptsType.
     * 
     * @return rem4
     */
    public org.w3.www._1998.Math.MathML.ArithType getRem4() {
        return rem4;
    }


    /**
     * Sets the rem4 value for this MmultiscriptsType.
     * 
     * @param rem4
     */
    public void setRem4(org.w3.www._1998.Math.MathML.ArithType rem4) {
        this.rem4 = rem4;
    }


    /**
     * Gets the minus4 value for this MmultiscriptsType.
     * 
     * @return minus4
     */
    public org.w3.www._1998.Math.MathML.ArithType getMinus4() {
        return minus4;
    }


    /**
     * Sets the minus4 value for this MmultiscriptsType.
     * 
     * @param minus4
     */
    public void setMinus4(org.w3.www._1998.Math.MathML.ArithType minus4) {
        this.minus4 = minus4;
    }


    /**
     * Gets the plus4 value for this MmultiscriptsType.
     * 
     * @return plus4
     */
    public org.w3.www._1998.Math.MathML.ArithType getPlus4() {
        return plus4;
    }


    /**
     * Sets the plus4 value for this MmultiscriptsType.
     * 
     * @param plus4
     */
    public void setPlus4(org.w3.www._1998.Math.MathML.ArithType plus4) {
        this.plus4 = plus4;
    }


    /**
     * Gets the times4 value for this MmultiscriptsType.
     * 
     * @return times4
     */
    public org.w3.www._1998.Math.MathML.ArithType getTimes4() {
        return times4;
    }


    /**
     * Sets the times4 value for this MmultiscriptsType.
     * 
     * @param times4
     */
    public void setTimes4(org.w3.www._1998.Math.MathML.ArithType times4) {
        this.times4 = times4;
    }


    /**
     * Gets the power4 value for this MmultiscriptsType.
     * 
     * @return power4
     */
    public org.w3.www._1998.Math.MathML.ArithType getPower4() {
        return power4;
    }


    /**
     * Sets the power4 value for this MmultiscriptsType.
     * 
     * @param power4
     */
    public void setPower4(org.w3.www._1998.Math.MathML.ArithType power4) {
        this.power4 = power4;
    }


    /**
     * Gets the root4 value for this MmultiscriptsType.
     * 
     * @return root4
     */
    public org.w3.www._1998.Math.MathML.ArithType getRoot4() {
        return root4;
    }


    /**
     * Sets the root4 value for this MmultiscriptsType.
     * 
     * @param root4
     */
    public void setRoot4(org.w3.www._1998.Math.MathML.ArithType root4) {
        this.root4 = root4;
    }


    /**
     * Gets the max4 value for this MmultiscriptsType.
     * 
     * @return max4
     */
    public org.w3.www._1998.Math.MathML.ArithType getMax4() {
        return max4;
    }


    /**
     * Sets the max4 value for this MmultiscriptsType.
     * 
     * @param max4
     */
    public void setMax4(org.w3.www._1998.Math.MathML.ArithType max4) {
        this.max4 = max4;
    }


    /**
     * Gets the min4 value for this MmultiscriptsType.
     * 
     * @return min4
     */
    public org.w3.www._1998.Math.MathML.ArithType getMin4() {
        return min4;
    }


    /**
     * Sets the min4 value for this MmultiscriptsType.
     * 
     * @param min4
     */
    public void setMin4(org.w3.www._1998.Math.MathML.ArithType min4) {
        this.min4 = min4;
    }


    /**
     * Gets the gcd4 value for this MmultiscriptsType.
     * 
     * @return gcd4
     */
    public org.w3.www._1998.Math.MathML.ArithType getGcd4() {
        return gcd4;
    }


    /**
     * Sets the gcd4 value for this MmultiscriptsType.
     * 
     * @param gcd4
     */
    public void setGcd4(org.w3.www._1998.Math.MathML.ArithType gcd4) {
        this.gcd4 = gcd4;
    }


    /**
     * Gets the lcm4 value for this MmultiscriptsType.
     * 
     * @return lcm4
     */
    public org.w3.www._1998.Math.MathML.ArithType getLcm4() {
        return lcm4;
    }


    /**
     * Sets the lcm4 value for this MmultiscriptsType.
     * 
     * @param lcm4
     */
    public void setLcm4(org.w3.www._1998.Math.MathML.ArithType lcm4) {
        this.lcm4 = lcm4;
    }


    /**
     * Gets the sum4 value for this MmultiscriptsType.
     * 
     * @return sum4
     */
    public org.w3.www._1998.Math.MathML.ArithType getSum4() {
        return sum4;
    }


    /**
     * Sets the sum4 value for this MmultiscriptsType.
     * 
     * @param sum4
     */
    public void setSum4(org.w3.www._1998.Math.MathML.ArithType sum4) {
        this.sum4 = sum4;
    }


    /**
     * Gets the product4 value for this MmultiscriptsType.
     * 
     * @return product4
     */
    public org.w3.www._1998.Math.MathML.ArithType getProduct4() {
        return product4;
    }


    /**
     * Sets the product4 value for this MmultiscriptsType.
     * 
     * @param product4
     */
    public void setProduct4(org.w3.www._1998.Math.MathML.ArithType product4) {
        this.product4 = product4;
    }


    /**
     * Gets the compose4 value for this MmultiscriptsType.
     * 
     * @return compose4
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCompose4() {
        return compose4;
    }


    /**
     * Sets the compose4 value for this MmultiscriptsType.
     * 
     * @param compose4
     */
    public void setCompose4(org.w3.www._1998.Math.MathML.FunctionsType compose4) {
        this.compose4 = compose4;
    }


    /**
     * Gets the domain4 value for this MmultiscriptsType.
     * 
     * @return domain4
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getDomain4() {
        return domain4;
    }


    /**
     * Sets the domain4 value for this MmultiscriptsType.
     * 
     * @param domain4
     */
    public void setDomain4(org.w3.www._1998.Math.MathML.FunctionsType domain4) {
        this.domain4 = domain4;
    }


    /**
     * Gets the codomain4 value for this MmultiscriptsType.
     * 
     * @return codomain4
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCodomain4() {
        return codomain4;
    }


    /**
     * Sets the codomain4 value for this MmultiscriptsType.
     * 
     * @param codomain4
     */
    public void setCodomain4(org.w3.www._1998.Math.MathML.FunctionsType codomain4) {
        this.codomain4 = codomain4;
    }


    /**
     * Gets the image4 value for this MmultiscriptsType.
     * 
     * @return image4
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getImage4() {
        return image4;
    }


    /**
     * Sets the image4 value for this MmultiscriptsType.
     * 
     * @param image4
     */
    public void setImage4(org.w3.www._1998.Math.MathML.FunctionsType image4) {
        this.image4 = image4;
    }


    /**
     * Gets the domainofapplication4 value for this MmultiscriptsType.
     * 
     * @return domainofapplication4
     */
    public org.w3.www._1998.Math.MathML.DomainofapplicationType getDomainofapplication4() {
        return domainofapplication4;
    }


    /**
     * Sets the domainofapplication4 value for this MmultiscriptsType.
     * 
     * @param domainofapplication4
     */
    public void setDomainofapplication4(org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication4) {
        this.domainofapplication4 = domainofapplication4;
    }


    /**
     * Gets the ident4 value for this MmultiscriptsType.
     * 
     * @return ident4
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getIdent4() {
        return ident4;
    }


    /**
     * Sets the ident4 value for this MmultiscriptsType.
     * 
     * @param ident4
     */
    public void setIdent4(org.w3.www._1998.Math.MathML.FunctionsType ident4) {
        this.ident4 = ident4;
    }


    /**
     * Gets the and4 value for this MmultiscriptsType.
     * 
     * @return and4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getAnd4() {
        return and4;
    }


    /**
     * Sets the and4 value for this MmultiscriptsType.
     * 
     * @param and4
     */
    public void setAnd4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType and4) {
        this.and4 = and4;
    }


    /**
     * Gets the or4 value for this MmultiscriptsType.
     * 
     * @return or4
     */
    public org.w3.www._1998.Math.MathML.LogicType getOr4() {
        return or4;
    }


    /**
     * Sets the or4 value for this MmultiscriptsType.
     * 
     * @param or4
     */
    public void setOr4(org.w3.www._1998.Math.MathML.LogicType or4) {
        this.or4 = or4;
    }


    /**
     * Gets the xor4 value for this MmultiscriptsType.
     * 
     * @return xor4
     */
    public org.w3.www._1998.Math.MathML.LogicType getXor4() {
        return xor4;
    }


    /**
     * Sets the xor4 value for this MmultiscriptsType.
     * 
     * @param xor4
     */
    public void setXor4(org.w3.www._1998.Math.MathML.LogicType xor4) {
        this.xor4 = xor4;
    }


    /**
     * Gets the not4 value for this MmultiscriptsType.
     * 
     * @return not4
     */
    public org.w3.www._1998.Math.MathML.LogicType getNot4() {
        return not4;
    }


    /**
     * Sets the not4 value for this MmultiscriptsType.
     * 
     * @param not4
     */
    public void setNot4(org.w3.www._1998.Math.MathML.LogicType not4) {
        this.not4 = not4;
    }


    /**
     * Gets the exists4 value for this MmultiscriptsType.
     * 
     * @return exists4
     */
    public org.w3.www._1998.Math.MathML.LogicType getExists4() {
        return exists4;
    }


    /**
     * Sets the exists4 value for this MmultiscriptsType.
     * 
     * @param exists4
     */
    public void setExists4(org.w3.www._1998.Math.MathML.LogicType exists4) {
        this.exists4 = exists4;
    }


    /**
     * Gets the forall4 value for this MmultiscriptsType.
     * 
     * @return forall4
     */
    public org.w3.www._1998.Math.MathML.LogicType getForall4() {
        return forall4;
    }


    /**
     * Sets the forall4 value for this MmultiscriptsType.
     * 
     * @param forall4
     */
    public void setForall4(org.w3.www._1998.Math.MathML.LogicType forall4) {
        this.forall4 = forall4;
    }


    /**
     * Gets the implies4 value for this MmultiscriptsType.
     * 
     * @return implies4
     */
    public org.w3.www._1998.Math.MathML.LogicType getImplies4() {
        return implies4;
    }


    /**
     * Sets the implies4 value for this MmultiscriptsType.
     * 
     * @param implies4
     */
    public void setImplies4(org.w3.www._1998.Math.MathML.LogicType implies4) {
        this.implies4 = implies4;
    }


    /**
     * Gets the naturalnumbers4 value for this MmultiscriptsType.
     * 
     * @return naturalnumbers4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNaturalnumbers4() {
        return naturalnumbers4;
    }


    /**
     * Sets the naturalnumbers4 value for this MmultiscriptsType.
     * 
     * @param naturalnumbers4
     */
    public void setNaturalnumbers4(org.w3.www._1998.Math.MathML.ConstantType naturalnumbers4) {
        this.naturalnumbers4 = naturalnumbers4;
    }


    /**
     * Gets the primes4 value for this MmultiscriptsType.
     * 
     * @return primes4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPrimes4() {
        return primes4;
    }


    /**
     * Sets the primes4 value for this MmultiscriptsType.
     * 
     * @param primes4
     */
    public void setPrimes4(org.w3.www._1998.Math.MathML.ConstantType primes4) {
        this.primes4 = primes4;
    }


    /**
     * Gets the integers4 value for this MmultiscriptsType.
     * 
     * @return integers4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getIntegers4() {
        return integers4;
    }


    /**
     * Sets the integers4 value for this MmultiscriptsType.
     * 
     * @param integers4
     */
    public void setIntegers4(org.w3.www._1998.Math.MathML.ConstantType integers4) {
        this.integers4 = integers4;
    }


    /**
     * Gets the rationals4 value for this MmultiscriptsType.
     * 
     * @return rationals4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getRationals4() {
        return rationals4;
    }


    /**
     * Sets the rationals4 value for this MmultiscriptsType.
     * 
     * @param rationals4
     */
    public void setRationals4(org.w3.www._1998.Math.MathML.ConstantType rationals4) {
        this.rationals4 = rationals4;
    }


    /**
     * Gets the reals4 value for this MmultiscriptsType.
     * 
     * @return reals4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getReals4() {
        return reals4;
    }


    /**
     * Sets the reals4 value for this MmultiscriptsType.
     * 
     * @param reals4
     */
    public void setReals4(org.w3.www._1998.Math.MathML.ConstantType reals4) {
        this.reals4 = reals4;
    }


    /**
     * Gets the complexes4 value for this MmultiscriptsType.
     * 
     * @return complexes4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getComplexes4() {
        return complexes4;
    }


    /**
     * Sets the complexes4 value for this MmultiscriptsType.
     * 
     * @param complexes4
     */
    public void setComplexes4(org.w3.www._1998.Math.MathML.ConstantType complexes4) {
        this.complexes4 = complexes4;
    }


    /**
     * Gets the emptyset4 value for this MmultiscriptsType.
     * 
     * @return emptyset4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEmptyset4() {
        return emptyset4;
    }


    /**
     * Sets the emptyset4 value for this MmultiscriptsType.
     * 
     * @param emptyset4
     */
    public void setEmptyset4(org.w3.www._1998.Math.MathML.ConstantType emptyset4) {
        this.emptyset4 = emptyset4;
    }


    /**
     * Gets the exponentiale4 value for this MmultiscriptsType.
     * 
     * @return exponentiale4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getExponentiale4() {
        return exponentiale4;
    }


    /**
     * Sets the exponentiale4 value for this MmultiscriptsType.
     * 
     * @param exponentiale4
     */
    public void setExponentiale4(org.w3.www._1998.Math.MathML.ConstantType exponentiale4) {
        this.exponentiale4 = exponentiale4;
    }


    /**
     * Gets the imaginaryi4 value for this MmultiscriptsType.
     * 
     * @return imaginaryi4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getImaginaryi4() {
        return imaginaryi4;
    }


    /**
     * Sets the imaginaryi4 value for this MmultiscriptsType.
     * 
     * @param imaginaryi4
     */
    public void setImaginaryi4(org.w3.www._1998.Math.MathML.ConstantType imaginaryi4) {
        this.imaginaryi4 = imaginaryi4;
    }


    /**
     * Gets the pi4 value for this MmultiscriptsType.
     * 
     * @return pi4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPi4() {
        return pi4;
    }


    /**
     * Sets the pi4 value for this MmultiscriptsType.
     * 
     * @param pi4
     */
    public void setPi4(org.w3.www._1998.Math.MathML.ConstantType pi4) {
        this.pi4 = pi4;
    }


    /**
     * Gets the eulergamma4 value for this MmultiscriptsType.
     * 
     * @return eulergamma4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEulergamma4() {
        return eulergamma4;
    }


    /**
     * Sets the eulergamma4 value for this MmultiscriptsType.
     * 
     * @param eulergamma4
     */
    public void setEulergamma4(org.w3.www._1998.Math.MathML.ConstantType eulergamma4) {
        this.eulergamma4 = eulergamma4;
    }


    /**
     * Gets the _true4 value for this MmultiscriptsType.
     * 
     * @return _true4
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_true4() {
        return _true4;
    }


    /**
     * Sets the _true4 value for this MmultiscriptsType.
     * 
     * @param _true4
     */
    public void set_true4(org.w3.www._1998.Math.MathML.ConstantType _true4) {
        this._true4 = _true4;
    }


    /**
     * Gets the _false4 value for this MmultiscriptsType.
     * 
     * @return _false4
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_false4() {
        return _false4;
    }


    /**
     * Sets the _false4 value for this MmultiscriptsType.
     * 
     * @param _false4
     */
    public void set_false4(org.w3.www._1998.Math.MathML.ConstantType _false4) {
        this._false4 = _false4;
    }


    /**
     * Gets the infinity4 value for this MmultiscriptsType.
     * 
     * @return infinity4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getInfinity4() {
        return infinity4;
    }


    /**
     * Sets the infinity4 value for this MmultiscriptsType.
     * 
     * @param infinity4
     */
    public void setInfinity4(org.w3.www._1998.Math.MathML.ConstantType infinity4) {
        this.infinity4 = infinity4;
    }


    /**
     * Gets the notanumber4 value for this MmultiscriptsType.
     * 
     * @return notanumber4
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNotanumber4() {
        return notanumber4;
    }


    /**
     * Sets the notanumber4 value for this MmultiscriptsType.
     * 
     * @param notanumber4
     */
    public void setNotanumber4(org.w3.www._1998.Math.MathML.ConstantType notanumber4) {
        this.notanumber4 = notanumber4;
    }


    /**
     * Gets the set4 value for this MmultiscriptsType.
     * 
     * @return set4
     */
    public org.w3.www._1998.Math.MathML.SetType getSet4() {
        return set4;
    }


    /**
     * Sets the set4 value for this MmultiscriptsType.
     * 
     * @param set4
     */
    public void setSet4(org.w3.www._1998.Math.MathML.SetType set4) {
        this.set4 = set4;
    }


    /**
     * Gets the list4 value for this MmultiscriptsType.
     * 
     * @return list4
     */
    public org.w3.www._1998.Math.MathML.ListType getList4() {
        return list4;
    }


    /**
     * Sets the list4 value for this MmultiscriptsType.
     * 
     * @param list4
     */
    public void setList4(org.w3.www._1998.Math.MathML.ListType list4) {
        this.list4 = list4;
    }


    /**
     * Gets the union4 value for this MmultiscriptsType.
     * 
     * @return union4
     */
    public org.w3.www._1998.Math.MathML.UnionType getUnion4() {
        return union4;
    }


    /**
     * Sets the union4 value for this MmultiscriptsType.
     * 
     * @param union4
     */
    public void setUnion4(org.w3.www._1998.Math.MathML.UnionType union4) {
        this.union4 = union4;
    }


    /**
     * Gets the intersect4 value for this MmultiscriptsType.
     * 
     * @return intersect4
     */
    public org.w3.www._1998.Math.MathML.IntersectType getIntersect4() {
        return intersect4;
    }


    /**
     * Sets the intersect4 value for this MmultiscriptsType.
     * 
     * @param intersect4
     */
    public void setIntersect4(org.w3.www._1998.Math.MathML.IntersectType intersect4) {
        this.intersect4 = intersect4;
    }


    /**
     * Gets the in4 value for this MmultiscriptsType.
     * 
     * @return in4
     */
    public org.w3.www._1998.Math.MathML.InType getIn4() {
        return in4;
    }


    /**
     * Sets the in4 value for this MmultiscriptsType.
     * 
     * @param in4
     */
    public void setIn4(org.w3.www._1998.Math.MathML.InType in4) {
        this.in4 = in4;
    }


    /**
     * Gets the notin4 value for this MmultiscriptsType.
     * 
     * @return notin4
     */
    public org.w3.www._1998.Math.MathML.NotinType getNotin4() {
        return notin4;
    }


    /**
     * Sets the notin4 value for this MmultiscriptsType.
     * 
     * @param notin4
     */
    public void setNotin4(org.w3.www._1998.Math.MathML.NotinType notin4) {
        this.notin4 = notin4;
    }


    /**
     * Gets the subset4 value for this MmultiscriptsType.
     * 
     * @return subset4
     */
    public org.w3.www._1998.Math.MathML.SubsetType getSubset4() {
        return subset4;
    }


    /**
     * Sets the subset4 value for this MmultiscriptsType.
     * 
     * @param subset4
     */
    public void setSubset4(org.w3.www._1998.Math.MathML.SubsetType subset4) {
        this.subset4 = subset4;
    }


    /**
     * Gets the prsubset4 value for this MmultiscriptsType.
     * 
     * @return prsubset4
     */
    public org.w3.www._1998.Math.MathML.PrsubsetType getPrsubset4() {
        return prsubset4;
    }


    /**
     * Sets the prsubset4 value for this MmultiscriptsType.
     * 
     * @param prsubset4
     */
    public void setPrsubset4(org.w3.www._1998.Math.MathML.PrsubsetType prsubset4) {
        this.prsubset4 = prsubset4;
    }


    /**
     * Gets the notsubset4 value for this MmultiscriptsType.
     * 
     * @return notsubset4
     */
    public org.w3.www._1998.Math.MathML.NotsubsetType getNotsubset4() {
        return notsubset4;
    }


    /**
     * Sets the notsubset4 value for this MmultiscriptsType.
     * 
     * @param notsubset4
     */
    public void setNotsubset4(org.w3.www._1998.Math.MathML.NotsubsetType notsubset4) {
        this.notsubset4 = notsubset4;
    }


    /**
     * Gets the notprsubset4 value for this MmultiscriptsType.
     * 
     * @return notprsubset4
     */
    public org.w3.www._1998.Math.MathML.NotprsubsetType getNotprsubset4() {
        return notprsubset4;
    }


    /**
     * Sets the notprsubset4 value for this MmultiscriptsType.
     * 
     * @param notprsubset4
     */
    public void setNotprsubset4(org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset4) {
        this.notprsubset4 = notprsubset4;
    }


    /**
     * Gets the setdiff4 value for this MmultiscriptsType.
     * 
     * @return setdiff4
     */
    public org.w3.www._1998.Math.MathML.SetdiffType getSetdiff4() {
        return setdiff4;
    }


    /**
     * Sets the setdiff4 value for this MmultiscriptsType.
     * 
     * @param setdiff4
     */
    public void setSetdiff4(org.w3.www._1998.Math.MathML.SetdiffType setdiff4) {
        this.setdiff4 = setdiff4;
    }


    /**
     * Gets the card4 value for this MmultiscriptsType.
     * 
     * @return card4
     */
    public org.w3.www._1998.Math.MathML.CardType getCard4() {
        return card4;
    }


    /**
     * Sets the card4 value for this MmultiscriptsType.
     * 
     * @param card4
     */
    public void setCard4(org.w3.www._1998.Math.MathML.CardType card4) {
        this.card4 = card4;
    }


    /**
     * Gets the cartesianproduct4 value for this MmultiscriptsType.
     * 
     * @return cartesianproduct4
     */
    public org.w3.www._1998.Math.MathML.CartesianproductType getCartesianproduct4() {
        return cartesianproduct4;
    }


    /**
     * Sets the cartesianproduct4 value for this MmultiscriptsType.
     * 
     * @param cartesianproduct4
     */
    public void setCartesianproduct4(org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct4) {
        this.cartesianproduct4 = cartesianproduct4;
    }


    /**
     * Gets the eq4 value for this MmultiscriptsType.
     * 
     * @return eq4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEq4() {
        return eq4;
    }


    /**
     * Sets the eq4 value for this MmultiscriptsType.
     * 
     * @param eq4
     */
    public void setEq4(org.w3.www._1998.Math.MathML.RelationsType eq4) {
        this.eq4 = eq4;
    }


    /**
     * Gets the neq4 value for this MmultiscriptsType.
     * 
     * @return neq4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getNeq4() {
        return neq4;
    }


    /**
     * Sets the neq4 value for this MmultiscriptsType.
     * 
     * @param neq4
     */
    public void setNeq4(org.w3.www._1998.Math.MathML.RelationsType neq4) {
        this.neq4 = neq4;
    }


    /**
     * Gets the leq4 value for this MmultiscriptsType.
     * 
     * @return leq4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLeq4() {
        return leq4;
    }


    /**
     * Sets the leq4 value for this MmultiscriptsType.
     * 
     * @param leq4
     */
    public void setLeq4(org.w3.www._1998.Math.MathML.RelationsType leq4) {
        this.leq4 = leq4;
    }


    /**
     * Gets the lt4 value for this MmultiscriptsType.
     * 
     * @return lt4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLt4() {
        return lt4;
    }


    /**
     * Sets the lt4 value for this MmultiscriptsType.
     * 
     * @param lt4
     */
    public void setLt4(org.w3.www._1998.Math.MathML.RelationsType lt4) {
        this.lt4 = lt4;
    }


    /**
     * Gets the geq4 value for this MmultiscriptsType.
     * 
     * @return geq4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGeq4() {
        return geq4;
    }


    /**
     * Sets the geq4 value for this MmultiscriptsType.
     * 
     * @param geq4
     */
    public void setGeq4(org.w3.www._1998.Math.MathML.RelationsType geq4) {
        this.geq4 = geq4;
    }


    /**
     * Gets the gt4 value for this MmultiscriptsType.
     * 
     * @return gt4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGt4() {
        return gt4;
    }


    /**
     * Sets the gt4 value for this MmultiscriptsType.
     * 
     * @param gt4
     */
    public void setGt4(org.w3.www._1998.Math.MathML.RelationsType gt4) {
        this.gt4 = gt4;
    }


    /**
     * Gets the equivalent4 value for this MmultiscriptsType.
     * 
     * @return equivalent4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEquivalent4() {
        return equivalent4;
    }


    /**
     * Sets the equivalent4 value for this MmultiscriptsType.
     * 
     * @param equivalent4
     */
    public void setEquivalent4(org.w3.www._1998.Math.MathML.RelationsType equivalent4) {
        this.equivalent4 = equivalent4;
    }


    /**
     * Gets the approx4 value for this MmultiscriptsType.
     * 
     * @return approx4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getApprox4() {
        return approx4;
    }


    /**
     * Sets the approx4 value for this MmultiscriptsType.
     * 
     * @param approx4
     */
    public void setApprox4(org.w3.www._1998.Math.MathML.RelationsType approx4) {
        this.approx4 = approx4;
    }


    /**
     * Gets the factorof4 value for this MmultiscriptsType.
     * 
     * @return factorof4
     */
    public org.w3.www._1998.Math.MathML.RelationsType getFactorof4() {
        return factorof4;
    }


    /**
     * Sets the factorof4 value for this MmultiscriptsType.
     * 
     * @param factorof4
     */
    public void setFactorof4(org.w3.www._1998.Math.MathML.RelationsType factorof4) {
        this.factorof4 = factorof4;
    }


    /**
     * Gets the exp4 value for this MmultiscriptsType.
     * 
     * @return exp4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getExp4() {
        return exp4;
    }


    /**
     * Sets the exp4 value for this MmultiscriptsType.
     * 
     * @param exp4
     */
    public void setExp4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp4) {
        this.exp4 = exp4;
    }


    /**
     * Gets the ln4 value for this MmultiscriptsType.
     * 
     * @return ln4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLn4() {
        return ln4;
    }


    /**
     * Sets the ln4 value for this MmultiscriptsType.
     * 
     * @param ln4
     */
    public void setLn4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln4) {
        this.ln4 = ln4;
    }


    /**
     * Gets the log4 value for this MmultiscriptsType.
     * 
     * @return log4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLog4() {
        return log4;
    }


    /**
     * Sets the log4 value for this MmultiscriptsType.
     * 
     * @param log4
     */
    public void setLog4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType log4) {
        this.log4 = log4;
    }


    /**
     * Gets the logbase4 value for this MmultiscriptsType.
     * 
     * @return logbase4
     */
    public org.w3.www._1998.Math.MathML.LogbaseType getLogbase4() {
        return logbase4;
    }


    /**
     * Sets the logbase4 value for this MmultiscriptsType.
     * 
     * @param logbase4
     */
    public void setLogbase4(org.w3.www._1998.Math.MathML.LogbaseType logbase4) {
        this.logbase4 = logbase4;
    }


    /**
     * Gets the sin4 value for this MmultiscriptsType.
     * 
     * @return sin4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSin4() {
        return sin4;
    }


    /**
     * Sets the sin4 value for this MmultiscriptsType.
     * 
     * @param sin4
     */
    public void setSin4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin4) {
        this.sin4 = sin4;
    }


    /**
     * Gets the cos4 value for this MmultiscriptsType.
     * 
     * @return cos4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCos4() {
        return cos4;
    }


    /**
     * Sets the cos4 value for this MmultiscriptsType.
     * 
     * @param cos4
     */
    public void setCos4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos4) {
        this.cos4 = cos4;
    }


    /**
     * Gets the tan4 value for this MmultiscriptsType.
     * 
     * @return tan4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTan4() {
        return tan4;
    }


    /**
     * Sets the tan4 value for this MmultiscriptsType.
     * 
     * @param tan4
     */
    public void setTan4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan4) {
        this.tan4 = tan4;
    }


    /**
     * Gets the sec4 value for this MmultiscriptsType.
     * 
     * @return sec4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSec4() {
        return sec4;
    }


    /**
     * Sets the sec4 value for this MmultiscriptsType.
     * 
     * @param sec4
     */
    public void setSec4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec4) {
        this.sec4 = sec4;
    }


    /**
     * Gets the csc4 value for this MmultiscriptsType.
     * 
     * @return csc4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsc4() {
        return csc4;
    }


    /**
     * Sets the csc4 value for this MmultiscriptsType.
     * 
     * @param csc4
     */
    public void setCsc4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc4) {
        this.csc4 = csc4;
    }


    /**
     * Gets the cot4 value for this MmultiscriptsType.
     * 
     * @return cot4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCot4() {
        return cot4;
    }


    /**
     * Sets the cot4 value for this MmultiscriptsType.
     * 
     * @param cot4
     */
    public void setCot4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot4) {
        this.cot4 = cot4;
    }


    /**
     * Gets the arcsin4 value for this MmultiscriptsType.
     * 
     * @return arcsin4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsin4() {
        return arcsin4;
    }


    /**
     * Sets the arcsin4 value for this MmultiscriptsType.
     * 
     * @param arcsin4
     */
    public void setArcsin4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin4) {
        this.arcsin4 = arcsin4;
    }


    /**
     * Gets the arccos4 value for this MmultiscriptsType.
     * 
     * @return arccos4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccos4() {
        return arccos4;
    }


    /**
     * Sets the arccos4 value for this MmultiscriptsType.
     * 
     * @param arccos4
     */
    public void setArccos4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos4) {
        this.arccos4 = arccos4;
    }


    /**
     * Gets the arctan4 value for this MmultiscriptsType.
     * 
     * @return arctan4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctan4() {
        return arctan4;
    }


    /**
     * Sets the arctan4 value for this MmultiscriptsType.
     * 
     * @param arctan4
     */
    public void setArctan4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan4) {
        this.arctan4 = arctan4;
    }


    /**
     * Gets the arcsec4 value for this MmultiscriptsType.
     * 
     * @return arcsec4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsec4() {
        return arcsec4;
    }


    /**
     * Sets the arcsec4 value for this MmultiscriptsType.
     * 
     * @param arcsec4
     */
    public void setArcsec4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec4) {
        this.arcsec4 = arcsec4;
    }


    /**
     * Gets the arccsc4 value for this MmultiscriptsType.
     * 
     * @return arccsc4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsc4() {
        return arccsc4;
    }


    /**
     * Sets the arccsc4 value for this MmultiscriptsType.
     * 
     * @param arccsc4
     */
    public void setArccsc4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc4) {
        this.arccsc4 = arccsc4;
    }


    /**
     * Gets the arccot4 value for this MmultiscriptsType.
     * 
     * @return arccot4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccot4() {
        return arccot4;
    }


    /**
     * Sets the arccot4 value for this MmultiscriptsType.
     * 
     * @param arccot4
     */
    public void setArccot4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot4) {
        this.arccot4 = arccot4;
    }


    /**
     * Gets the sinh4 value for this MmultiscriptsType.
     * 
     * @return sinh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSinh4() {
        return sinh4;
    }


    /**
     * Sets the sinh4 value for this MmultiscriptsType.
     * 
     * @param sinh4
     */
    public void setSinh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh4) {
        this.sinh4 = sinh4;
    }


    /**
     * Gets the cosh4 value for this MmultiscriptsType.
     * 
     * @return cosh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCosh4() {
        return cosh4;
    }


    /**
     * Sets the cosh4 value for this MmultiscriptsType.
     * 
     * @param cosh4
     */
    public void setCosh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh4) {
        this.cosh4 = cosh4;
    }


    /**
     * Gets the tanh4 value for this MmultiscriptsType.
     * 
     * @return tanh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTanh4() {
        return tanh4;
    }


    /**
     * Sets the tanh4 value for this MmultiscriptsType.
     * 
     * @param tanh4
     */
    public void setTanh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh4) {
        this.tanh4 = tanh4;
    }


    /**
     * Gets the sech4 value for this MmultiscriptsType.
     * 
     * @return sech4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSech4() {
        return sech4;
    }


    /**
     * Sets the sech4 value for this MmultiscriptsType.
     * 
     * @param sech4
     */
    public void setSech4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech4) {
        this.sech4 = sech4;
    }


    /**
     * Gets the csch4 value for this MmultiscriptsType.
     * 
     * @return csch4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsch4() {
        return csch4;
    }


    /**
     * Sets the csch4 value for this MmultiscriptsType.
     * 
     * @param csch4
     */
    public void setCsch4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch4) {
        this.csch4 = csch4;
    }


    /**
     * Gets the coth4 value for this MmultiscriptsType.
     * 
     * @return coth4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCoth4() {
        return coth4;
    }


    /**
     * Sets the coth4 value for this MmultiscriptsType.
     * 
     * @param coth4
     */
    public void setCoth4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth4) {
        this.coth4 = coth4;
    }


    /**
     * Gets the arccosh4 value for this MmultiscriptsType.
     * 
     * @return arccosh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccosh4() {
        return arccosh4;
    }


    /**
     * Sets the arccosh4 value for this MmultiscriptsType.
     * 
     * @param arccosh4
     */
    public void setArccosh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh4) {
        this.arccosh4 = arccosh4;
    }


    /**
     * Gets the arccoth4 value for this MmultiscriptsType.
     * 
     * @return arccoth4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccoth4() {
        return arccoth4;
    }


    /**
     * Sets the arccoth4 value for this MmultiscriptsType.
     * 
     * @param arccoth4
     */
    public void setArccoth4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth4) {
        this.arccoth4 = arccoth4;
    }


    /**
     * Gets the arccsch4 value for this MmultiscriptsType.
     * 
     * @return arccsch4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsch4() {
        return arccsch4;
    }


    /**
     * Sets the arccsch4 value for this MmultiscriptsType.
     * 
     * @param arccsch4
     */
    public void setArccsch4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch4) {
        this.arccsch4 = arccsch4;
    }


    /**
     * Gets the arcsech4 value for this MmultiscriptsType.
     * 
     * @return arcsech4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsech4() {
        return arcsech4;
    }


    /**
     * Sets the arcsech4 value for this MmultiscriptsType.
     * 
     * @param arcsech4
     */
    public void setArcsech4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech4) {
        this.arcsech4 = arcsech4;
    }


    /**
     * Gets the arcsinh4 value for this MmultiscriptsType.
     * 
     * @return arcsinh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsinh4() {
        return arcsinh4;
    }


    /**
     * Sets the arcsinh4 value for this MmultiscriptsType.
     * 
     * @param arcsinh4
     */
    public void setArcsinh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh4) {
        this.arcsinh4 = arcsinh4;
    }


    /**
     * Gets the arctanh4 value for this MmultiscriptsType.
     * 
     * @return arctanh4
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctanh4() {
        return arctanh4;
    }


    /**
     * Sets the arctanh4 value for this MmultiscriptsType.
     * 
     * @param arctanh4
     */
    public void setArctanh4(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh4) {
        this.arctanh4 = arctanh4;
    }


    /**
     * Gets the _int4 value for this MmultiscriptsType.
     * 
     * @return _int4
     */
    public org.w3.www._1998.Math.MathML.IntType get_int4() {
        return _int4;
    }


    /**
     * Sets the _int4 value for this MmultiscriptsType.
     * 
     * @param _int4
     */
    public void set_int4(org.w3.www._1998.Math.MathML.IntType _int4) {
        this._int4 = _int4;
    }


    /**
     * Gets the diff4 value for this MmultiscriptsType.
     * 
     * @return diff4
     */
    public org.w3.www._1998.Math.MathML.DiffType getDiff4() {
        return diff4;
    }


    /**
     * Sets the diff4 value for this MmultiscriptsType.
     * 
     * @param diff4
     */
    public void setDiff4(org.w3.www._1998.Math.MathML.DiffType diff4) {
        this.diff4 = diff4;
    }


    /**
     * Gets the partialdiff4 value for this MmultiscriptsType.
     * 
     * @return partialdiff4
     */
    public org.w3.www._1998.Math.MathML.PartialdiffType getPartialdiff4() {
        return partialdiff4;
    }


    /**
     * Sets the partialdiff4 value for this MmultiscriptsType.
     * 
     * @param partialdiff4
     */
    public void setPartialdiff4(org.w3.www._1998.Math.MathML.PartialdiffType partialdiff4) {
        this.partialdiff4 = partialdiff4;
    }


    /**
     * Gets the limit4 value for this MmultiscriptsType.
     * 
     * @return limit4
     */
    public org.w3.www._1998.Math.MathML.LimitType getLimit4() {
        return limit4;
    }


    /**
     * Sets the limit4 value for this MmultiscriptsType.
     * 
     * @param limit4
     */
    public void setLimit4(org.w3.www._1998.Math.MathML.LimitType limit4) {
        this.limit4 = limit4;
    }


    /**
     * Gets the lowlimit4 value for this MmultiscriptsType.
     * 
     * @return lowlimit4
     */
    public org.w3.www._1998.Math.MathML.LowlimitType getLowlimit4() {
        return lowlimit4;
    }


    /**
     * Sets the lowlimit4 value for this MmultiscriptsType.
     * 
     * @param lowlimit4
     */
    public void setLowlimit4(org.w3.www._1998.Math.MathML.LowlimitType lowlimit4) {
        this.lowlimit4 = lowlimit4;
    }


    /**
     * Gets the uplimit4 value for this MmultiscriptsType.
     * 
     * @return uplimit4
     */
    public org.w3.www._1998.Math.MathML.UplimitType getUplimit4() {
        return uplimit4;
    }


    /**
     * Sets the uplimit4 value for this MmultiscriptsType.
     * 
     * @param uplimit4
     */
    public void setUplimit4(org.w3.www._1998.Math.MathML.UplimitType uplimit4) {
        this.uplimit4 = uplimit4;
    }


    /**
     * Gets the tendsto4 value for this MmultiscriptsType.
     * 
     * @return tendsto4
     */
    public org.w3.www._1998.Math.MathML.TendstoType getTendsto4() {
        return tendsto4;
    }


    /**
     * Sets the tendsto4 value for this MmultiscriptsType.
     * 
     * @param tendsto4
     */
    public void setTendsto4(org.w3.www._1998.Math.MathML.TendstoType tendsto4) {
        this.tendsto4 = tendsto4;
    }


    /**
     * Gets the vector4 value for this MmultiscriptsType.
     * 
     * @return vector4
     */
    public org.w3.www._1998.Math.MathML.VectorType getVector4() {
        return vector4;
    }


    /**
     * Sets the vector4 value for this MmultiscriptsType.
     * 
     * @param vector4
     */
    public void setVector4(org.w3.www._1998.Math.MathML.VectorType vector4) {
        this.vector4 = vector4;
    }


    /**
     * Gets the matrix4 value for this MmultiscriptsType.
     * 
     * @return matrix4
     */
    public org.w3.www._1998.Math.MathML.MatrixType getMatrix4() {
        return matrix4;
    }


    /**
     * Sets the matrix4 value for this MmultiscriptsType.
     * 
     * @param matrix4
     */
    public void setMatrix4(org.w3.www._1998.Math.MathML.MatrixType matrix4) {
        this.matrix4 = matrix4;
    }


    /**
     * Gets the determinant4 value for this MmultiscriptsType.
     * 
     * @return determinant4
     */
    public org.w3.www._1998.Math.MathML.DeterminantType getDeterminant4() {
        return determinant4;
    }


    /**
     * Sets the determinant4 value for this MmultiscriptsType.
     * 
     * @param determinant4
     */
    public void setDeterminant4(org.w3.www._1998.Math.MathML.DeterminantType determinant4) {
        this.determinant4 = determinant4;
    }


    /**
     * Gets the transpose4 value for this MmultiscriptsType.
     * 
     * @return transpose4
     */
    public org.w3.www._1998.Math.MathML.TransposeType getTranspose4() {
        return transpose4;
    }


    /**
     * Sets the transpose4 value for this MmultiscriptsType.
     * 
     * @param transpose4
     */
    public void setTranspose4(org.w3.www._1998.Math.MathML.TransposeType transpose4) {
        this.transpose4 = transpose4;
    }


    /**
     * Gets the selector4 value for this MmultiscriptsType.
     * 
     * @return selector4
     */
    public org.w3.www._1998.Math.MathML.SelectorType getSelector4() {
        return selector4;
    }


    /**
     * Sets the selector4 value for this MmultiscriptsType.
     * 
     * @param selector4
     */
    public void setSelector4(org.w3.www._1998.Math.MathML.SelectorType selector4) {
        this.selector4 = selector4;
    }


    /**
     * Gets the vectorproduct4 value for this MmultiscriptsType.
     * 
     * @return vectorproduct4
     */
    public org.w3.www._1998.Math.MathML.VectorproductType getVectorproduct4() {
        return vectorproduct4;
    }


    /**
     * Sets the vectorproduct4 value for this MmultiscriptsType.
     * 
     * @param vectorproduct4
     */
    public void setVectorproduct4(org.w3.www._1998.Math.MathML.VectorproductType vectorproduct4) {
        this.vectorproduct4 = vectorproduct4;
    }


    /**
     * Gets the scalarproduct4 value for this MmultiscriptsType.
     * 
     * @return scalarproduct4
     */
    public org.w3.www._1998.Math.MathML.ScalarproductType getScalarproduct4() {
        return scalarproduct4;
    }


    /**
     * Sets the scalarproduct4 value for this MmultiscriptsType.
     * 
     * @param scalarproduct4
     */
    public void setScalarproduct4(org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct4) {
        this.scalarproduct4 = scalarproduct4;
    }


    /**
     * Gets the outerproduct4 value for this MmultiscriptsType.
     * 
     * @return outerproduct4
     */
    public org.w3.www._1998.Math.MathML.OuterproductType getOuterproduct4() {
        return outerproduct4;
    }


    /**
     * Sets the outerproduct4 value for this MmultiscriptsType.
     * 
     * @param outerproduct4
     */
    public void setOuterproduct4(org.w3.www._1998.Math.MathML.OuterproductType outerproduct4) {
        this.outerproduct4 = outerproduct4;
    }


    /**
     * Gets the divergence4 value for this MmultiscriptsType.
     * 
     * @return divergence4
     */
    public org.w3.www._1998.Math.MathML.DivergenceType getDivergence4() {
        return divergence4;
    }


    /**
     * Sets the divergence4 value for this MmultiscriptsType.
     * 
     * @param divergence4
     */
    public void setDivergence4(org.w3.www._1998.Math.MathML.DivergenceType divergence4) {
        this.divergence4 = divergence4;
    }


    /**
     * Gets the grad4 value for this MmultiscriptsType.
     * 
     * @return grad4
     */
    public org.w3.www._1998.Math.MathML.GradType getGrad4() {
        return grad4;
    }


    /**
     * Sets the grad4 value for this MmultiscriptsType.
     * 
     * @param grad4
     */
    public void setGrad4(org.w3.www._1998.Math.MathML.GradType grad4) {
        this.grad4 = grad4;
    }


    /**
     * Gets the curl4 value for this MmultiscriptsType.
     * 
     * @return curl4
     */
    public org.w3.www._1998.Math.MathML.CurlType getCurl4() {
        return curl4;
    }


    /**
     * Sets the curl4 value for this MmultiscriptsType.
     * 
     * @param curl4
     */
    public void setCurl4(org.w3.www._1998.Math.MathML.CurlType curl4) {
        this.curl4 = curl4;
    }


    /**
     * Gets the laplacian4 value for this MmultiscriptsType.
     * 
     * @return laplacian4
     */
    public org.w3.www._1998.Math.MathML.LaplacianType getLaplacian4() {
        return laplacian4;
    }


    /**
     * Sets the laplacian4 value for this MmultiscriptsType.
     * 
     * @param laplacian4
     */
    public void setLaplacian4(org.w3.www._1998.Math.MathML.LaplacianType laplacian4) {
        this.laplacian4 = laplacian4;
    }


    /**
     * Gets the mean4 value for this MmultiscriptsType.
     * 
     * @return mean4
     */
    public org.w3.www._1998.Math.MathML.MeanType getMean4() {
        return mean4;
    }


    /**
     * Sets the mean4 value for this MmultiscriptsType.
     * 
     * @param mean4
     */
    public void setMean4(org.w3.www._1998.Math.MathML.MeanType mean4) {
        this.mean4 = mean4;
    }


    /**
     * Gets the sdev4 value for this MmultiscriptsType.
     * 
     * @return sdev4
     */
    public org.w3.www._1998.Math.MathML.SdevType getSdev4() {
        return sdev4;
    }


    /**
     * Sets the sdev4 value for this MmultiscriptsType.
     * 
     * @param sdev4
     */
    public void setSdev4(org.w3.www._1998.Math.MathML.SdevType sdev4) {
        this.sdev4 = sdev4;
    }


    /**
     * Gets the variance4 value for this MmultiscriptsType.
     * 
     * @return variance4
     */
    public org.w3.www._1998.Math.MathML.VarianceType getVariance4() {
        return variance4;
    }


    /**
     * Sets the variance4 value for this MmultiscriptsType.
     * 
     * @param variance4
     */
    public void setVariance4(org.w3.www._1998.Math.MathML.VarianceType variance4) {
        this.variance4 = variance4;
    }


    /**
     * Gets the median4 value for this MmultiscriptsType.
     * 
     * @return median4
     */
    public org.w3.www._1998.Math.MathML.MedianType getMedian4() {
        return median4;
    }


    /**
     * Sets the median4 value for this MmultiscriptsType.
     * 
     * @param median4
     */
    public void setMedian4(org.w3.www._1998.Math.MathML.MedianType median4) {
        this.median4 = median4;
    }


    /**
     * Gets the mode4 value for this MmultiscriptsType.
     * 
     * @return mode4
     */
    public org.w3.www._1998.Math.MathML.ModeType getMode4() {
        return mode4;
    }


    /**
     * Sets the mode4 value for this MmultiscriptsType.
     * 
     * @param mode4
     */
    public void setMode4(org.w3.www._1998.Math.MathML.ModeType mode4) {
        this.mode4 = mode4;
    }


    /**
     * Gets the moment4 value for this MmultiscriptsType.
     * 
     * @return moment4
     */
    public org.w3.www._1998.Math.MathML.MomentType getMoment4() {
        return moment4;
    }


    /**
     * Sets the moment4 value for this MmultiscriptsType.
     * 
     * @param moment4
     */
    public void setMoment4(org.w3.www._1998.Math.MathML.MomentType moment4) {
        this.moment4 = moment4;
    }


    /**
     * Gets the momentabout4 value for this MmultiscriptsType.
     * 
     * @return momentabout4
     */
    public org.w3.www._1998.Math.MathML.MomentaboutType getMomentabout4() {
        return momentabout4;
    }


    /**
     * Sets the momentabout4 value for this MmultiscriptsType.
     * 
     * @param momentabout4
     */
    public void setMomentabout4(org.w3.www._1998.Math.MathML.MomentaboutType momentabout4) {
        this.momentabout4 = momentabout4;
    }


    /**
     * Gets the apply4 value for this MmultiscriptsType.
     * 
     * @return apply4
     */
    public org.w3.www._1998.Math.MathML.ApplyType getApply4() {
        return apply4;
    }


    /**
     * Sets the apply4 value for this MmultiscriptsType.
     * 
     * @param apply4
     */
    public void setApply4(org.w3.www._1998.Math.MathML.ApplyType apply4) {
        this.apply4 = apply4;
    }


    /**
     * Gets the interval4 value for this MmultiscriptsType.
     * 
     * @return interval4
     */
    public org.w3.www._1998.Math.MathML.IntervalType getInterval4() {
        return interval4;
    }


    /**
     * Sets the interval4 value for this MmultiscriptsType.
     * 
     * @param interval4
     */
    public void setInterval4(org.w3.www._1998.Math.MathML.IntervalType interval4) {
        this.interval4 = interval4;
    }


    /**
     * Gets the inverse4 value for this MmultiscriptsType.
     * 
     * @return inverse4
     */
    public org.w3.www._1998.Math.MathML.InverseType getInverse4() {
        return inverse4;
    }


    /**
     * Sets the inverse4 value for this MmultiscriptsType.
     * 
     * @param inverse4
     */
    public void setInverse4(org.w3.www._1998.Math.MathML.InverseType inverse4) {
        this.inverse4 = inverse4;
    }


    /**
     * Gets the condition4 value for this MmultiscriptsType.
     * 
     * @return condition4
     */
    public org.w3.www._1998.Math.MathML.ConditionType getCondition4() {
        return condition4;
    }


    /**
     * Sets the condition4 value for this MmultiscriptsType.
     * 
     * @param condition4
     */
    public void setCondition4(org.w3.www._1998.Math.MathML.ConditionType condition4) {
        this.condition4 = condition4;
    }


    /**
     * Gets the declare4 value for this MmultiscriptsType.
     * 
     * @return declare4
     */
    public org.w3.www._1998.Math.MathML.DeclareType getDeclare4() {
        return declare4;
    }


    /**
     * Sets the declare4 value for this MmultiscriptsType.
     * 
     * @param declare4
     */
    public void setDeclare4(org.w3.www._1998.Math.MathML.DeclareType declare4) {
        this.declare4 = declare4;
    }


    /**
     * Gets the lambda4 value for this MmultiscriptsType.
     * 
     * @return lambda4
     */
    public org.w3.www._1998.Math.MathML.LambdaType getLambda4() {
        return lambda4;
    }


    /**
     * Sets the lambda4 value for this MmultiscriptsType.
     * 
     * @param lambda4
     */
    public void setLambda4(org.w3.www._1998.Math.MathML.LambdaType lambda4) {
        this.lambda4 = lambda4;
    }


    /**
     * Gets the piecewise4 value for this MmultiscriptsType.
     * 
     * @return piecewise4
     */
    public org.w3.www._1998.Math.MathML.PiecewiseType getPiecewise4() {
        return piecewise4;
    }


    /**
     * Sets the piecewise4 value for this MmultiscriptsType.
     * 
     * @param piecewise4
     */
    public void setPiecewise4(org.w3.www._1998.Math.MathML.PiecewiseType piecewise4) {
        this.piecewise4 = piecewise4;
    }


    /**
     * Gets the bvar4 value for this MmultiscriptsType.
     * 
     * @return bvar4
     */
    public org.w3.www._1998.Math.MathML.BvarType getBvar4() {
        return bvar4;
    }


    /**
     * Sets the bvar4 value for this MmultiscriptsType.
     * 
     * @param bvar4
     */
    public void setBvar4(org.w3.www._1998.Math.MathML.BvarType bvar4) {
        this.bvar4 = bvar4;
    }


    /**
     * Gets the degree4 value for this MmultiscriptsType.
     * 
     * @return degree4
     */
    public org.w3.www._1998.Math.MathML.DegreeType getDegree4() {
        return degree4;
    }


    /**
     * Sets the degree4 value for this MmultiscriptsType.
     * 
     * @param degree4
     */
    public void setDegree4(org.w3.www._1998.Math.MathML.DegreeType degree4) {
        this.degree4 = degree4;
    }


    /**
     * Gets the semantics4 value for this MmultiscriptsType.
     * 
     * @return semantics4
     */
    public org.w3.www._1998.Math.MathML.SemanticsType getSemantics4() {
        return semantics4;
    }


    /**
     * Sets the semantics4 value for this MmultiscriptsType.
     * 
     * @param semantics4
     */
    public void setSemantics4(org.w3.www._1998.Math.MathML.SemanticsType semantics4) {
        this.semantics4 = semantics4;
    }


    /**
     * Gets the none3 value for this MmultiscriptsType.
     * 
     * @return none3
     */
    public org.w3.www._1998.Math.MathML.NoneType getNone3() {
        return none3;
    }


    /**
     * Sets the none3 value for this MmultiscriptsType.
     * 
     * @param none3
     */
    public void setNone3(org.w3.www._1998.Math.MathML.NoneType none3) {
        this.none3 = none3;
    }


    /**
     * Gets the mi5 value for this MmultiscriptsType.
     * 
     * @return mi5
     */
    public org.w3.www._1998.Math.MathML.MiType getMi5() {
        return mi5;
    }


    /**
     * Sets the mi5 value for this MmultiscriptsType.
     * 
     * @param mi5
     */
    public void setMi5(org.w3.www._1998.Math.MathML.MiType mi5) {
        this.mi5 = mi5;
    }


    /**
     * Gets the mo5 value for this MmultiscriptsType.
     * 
     * @return mo5
     */
    public org.w3.www._1998.Math.MathML.MoType getMo5() {
        return mo5;
    }


    /**
     * Sets the mo5 value for this MmultiscriptsType.
     * 
     * @param mo5
     */
    public void setMo5(org.w3.www._1998.Math.MathML.MoType mo5) {
        this.mo5 = mo5;
    }


    /**
     * Gets the mn5 value for this MmultiscriptsType.
     * 
     * @return mn5
     */
    public org.w3.www._1998.Math.MathML.MnType getMn5() {
        return mn5;
    }


    /**
     * Sets the mn5 value for this MmultiscriptsType.
     * 
     * @param mn5
     */
    public void setMn5(org.w3.www._1998.Math.MathML.MnType mn5) {
        this.mn5 = mn5;
    }


    /**
     * Gets the mtext5 value for this MmultiscriptsType.
     * 
     * @return mtext5
     */
    public org.w3.www._1998.Math.MathML.MtextType getMtext5() {
        return mtext5;
    }


    /**
     * Sets the mtext5 value for this MmultiscriptsType.
     * 
     * @param mtext5
     */
    public void setMtext5(org.w3.www._1998.Math.MathML.MtextType mtext5) {
        this.mtext5 = mtext5;
    }


    /**
     * Gets the ms5 value for this MmultiscriptsType.
     * 
     * @return ms5
     */
    public org.w3.www._1998.Math.MathML.MsType getMs5() {
        return ms5;
    }


    /**
     * Sets the ms5 value for this MmultiscriptsType.
     * 
     * @param ms5
     */
    public void setMs5(org.w3.www._1998.Math.MathML.MsType ms5) {
        this.ms5 = ms5;
    }


    /**
     * Gets the mrow5 value for this MmultiscriptsType.
     * 
     * @return mrow5
     */
    public org.w3.www._1998.Math.MathML.MrowType getMrow5() {
        return mrow5;
    }


    /**
     * Sets the mrow5 value for this MmultiscriptsType.
     * 
     * @param mrow5
     */
    public void setMrow5(org.w3.www._1998.Math.MathML.MrowType mrow5) {
        this.mrow5 = mrow5;
    }


    /**
     * Gets the mfrac5 value for this MmultiscriptsType.
     * 
     * @return mfrac5
     */
    public org.w3.www._1998.Math.MathML.MfracType getMfrac5() {
        return mfrac5;
    }


    /**
     * Sets the mfrac5 value for this MmultiscriptsType.
     * 
     * @param mfrac5
     */
    public void setMfrac5(org.w3.www._1998.Math.MathML.MfracType mfrac5) {
        this.mfrac5 = mfrac5;
    }


    /**
     * Gets the msqrt5 value for this MmultiscriptsType.
     * 
     * @return msqrt5
     */
    public org.w3.www._1998.Math.MathML.MsqrtType getMsqrt5() {
        return msqrt5;
    }


    /**
     * Sets the msqrt5 value for this MmultiscriptsType.
     * 
     * @param msqrt5
     */
    public void setMsqrt5(org.w3.www._1998.Math.MathML.MsqrtType msqrt5) {
        this.msqrt5 = msqrt5;
    }


    /**
     * Gets the mroot5 value for this MmultiscriptsType.
     * 
     * @return mroot5
     */
    public org.w3.www._1998.Math.MathML.MrootType getMroot5() {
        return mroot5;
    }


    /**
     * Sets the mroot5 value for this MmultiscriptsType.
     * 
     * @param mroot5
     */
    public void setMroot5(org.w3.www._1998.Math.MathML.MrootType mroot5) {
        this.mroot5 = mroot5;
    }


    /**
     * Gets the mpadded5 value for this MmultiscriptsType.
     * 
     * @return mpadded5
     */
    public org.w3.www._1998.Math.MathML.MpaddedType getMpadded5() {
        return mpadded5;
    }


    /**
     * Sets the mpadded5 value for this MmultiscriptsType.
     * 
     * @param mpadded5
     */
    public void setMpadded5(org.w3.www._1998.Math.MathML.MpaddedType mpadded5) {
        this.mpadded5 = mpadded5;
    }


    /**
     * Gets the mphantom5 value for this MmultiscriptsType.
     * 
     * @return mphantom5
     */
    public org.w3.www._1998.Math.MathML.MphantomType getMphantom5() {
        return mphantom5;
    }


    /**
     * Sets the mphantom5 value for this MmultiscriptsType.
     * 
     * @param mphantom5
     */
    public void setMphantom5(org.w3.www._1998.Math.MathML.MphantomType mphantom5) {
        this.mphantom5 = mphantom5;
    }


    /**
     * Gets the mfenced5 value for this MmultiscriptsType.
     * 
     * @return mfenced5
     */
    public org.w3.www._1998.Math.MathML.MfencedType getMfenced5() {
        return mfenced5;
    }


    /**
     * Sets the mfenced5 value for this MmultiscriptsType.
     * 
     * @param mfenced5
     */
    public void setMfenced5(org.w3.www._1998.Math.MathML.MfencedType mfenced5) {
        this.mfenced5 = mfenced5;
    }


    /**
     * Gets the menclose5 value for this MmultiscriptsType.
     * 
     * @return menclose5
     */
    public org.w3.www._1998.Math.MathML.MencloseType getMenclose5() {
        return menclose5;
    }


    /**
     * Sets the menclose5 value for this MmultiscriptsType.
     * 
     * @param menclose5
     */
    public void setMenclose5(org.w3.www._1998.Math.MathML.MencloseType menclose5) {
        this.menclose5 = menclose5;
    }


    /**
     * Gets the msub5 value for this MmultiscriptsType.
     * 
     * @return msub5
     */
    public org.w3.www._1998.Math.MathML.MsubType getMsub5() {
        return msub5;
    }


    /**
     * Sets the msub5 value for this MmultiscriptsType.
     * 
     * @param msub5
     */
    public void setMsub5(org.w3.www._1998.Math.MathML.MsubType msub5) {
        this.msub5 = msub5;
    }


    /**
     * Gets the msup5 value for this MmultiscriptsType.
     * 
     * @return msup5
     */
    public org.w3.www._1998.Math.MathML.MsupType getMsup5() {
        return msup5;
    }


    /**
     * Sets the msup5 value for this MmultiscriptsType.
     * 
     * @param msup5
     */
    public void setMsup5(org.w3.www._1998.Math.MathML.MsupType msup5) {
        this.msup5 = msup5;
    }


    /**
     * Gets the msubsup5 value for this MmultiscriptsType.
     * 
     * @return msubsup5
     */
    public org.w3.www._1998.Math.MathML.MsubsupType getMsubsup5() {
        return msubsup5;
    }


    /**
     * Sets the msubsup5 value for this MmultiscriptsType.
     * 
     * @param msubsup5
     */
    public void setMsubsup5(org.w3.www._1998.Math.MathML.MsubsupType msubsup5) {
        this.msubsup5 = msubsup5;
    }


    /**
     * Gets the munder5 value for this MmultiscriptsType.
     * 
     * @return munder5
     */
    public org.w3.www._1998.Math.MathML.MunderType getMunder5() {
        return munder5;
    }


    /**
     * Sets the munder5 value for this MmultiscriptsType.
     * 
     * @param munder5
     */
    public void setMunder5(org.w3.www._1998.Math.MathML.MunderType munder5) {
        this.munder5 = munder5;
    }


    /**
     * Gets the mover5 value for this MmultiscriptsType.
     * 
     * @return mover5
     */
    public org.w3.www._1998.Math.MathML.MoverType getMover5() {
        return mover5;
    }


    /**
     * Sets the mover5 value for this MmultiscriptsType.
     * 
     * @param mover5
     */
    public void setMover5(org.w3.www._1998.Math.MathML.MoverType mover5) {
        this.mover5 = mover5;
    }


    /**
     * Gets the munderover5 value for this MmultiscriptsType.
     * 
     * @return munderover5
     */
    public org.w3.www._1998.Math.MathML.MunderoverType getMunderover5() {
        return munderover5;
    }


    /**
     * Sets the munderover5 value for this MmultiscriptsType.
     * 
     * @param munderover5
     */
    public void setMunderover5(org.w3.www._1998.Math.MathML.MunderoverType munderover5) {
        this.munderover5 = munderover5;
    }


    /**
     * Gets the mmultiscripts5 value for this MmultiscriptsType.
     * 
     * @return mmultiscripts5
     */
    public org.w3.www._1998.Math.MathML.MmultiscriptsType getMmultiscripts5() {
        return mmultiscripts5;
    }


    /**
     * Sets the mmultiscripts5 value for this MmultiscriptsType.
     * 
     * @param mmultiscripts5
     */
    public void setMmultiscripts5(org.w3.www._1998.Math.MathML.MmultiscriptsType mmultiscripts5) {
        this.mmultiscripts5 = mmultiscripts5;
    }


    /**
     * Gets the mtable5 value for this MmultiscriptsType.
     * 
     * @return mtable5
     */
    public org.w3.www._1998.Math.MathML.MtableType getMtable5() {
        return mtable5;
    }


    /**
     * Sets the mtable5 value for this MmultiscriptsType.
     * 
     * @param mtable5
     */
    public void setMtable5(org.w3.www._1998.Math.MathML.MtableType mtable5) {
        this.mtable5 = mtable5;
    }


    /**
     * Gets the maligngroup5 value for this MmultiscriptsType.
     * 
     * @return maligngroup5
     */
    public org.w3.www._1998.Math.MathML.MaligngroupType getMaligngroup5() {
        return maligngroup5;
    }


    /**
     * Sets the maligngroup5 value for this MmultiscriptsType.
     * 
     * @param maligngroup5
     */
    public void setMaligngroup5(org.w3.www._1998.Math.MathML.MaligngroupType maligngroup5) {
        this.maligngroup5 = maligngroup5;
    }


    /**
     * Gets the malignmark5 value for this MmultiscriptsType.
     * 
     * @return malignmark5
     */
    public org.w3.www._1998.Math.MathML.MalignmarkType getMalignmark5() {
        return malignmark5;
    }


    /**
     * Sets the malignmark5 value for this MmultiscriptsType.
     * 
     * @param malignmark5
     */
    public void setMalignmark5(org.w3.www._1998.Math.MathML.MalignmarkType malignmark5) {
        this.malignmark5 = malignmark5;
    }


    /**
     * Gets the mspace5 value for this MmultiscriptsType.
     * 
     * @return mspace5
     */
    public org.w3.www._1998.Math.MathML.MspaceType getMspace5() {
        return mspace5;
    }


    /**
     * Sets the mspace5 value for this MmultiscriptsType.
     * 
     * @param mspace5
     */
    public void setMspace5(org.w3.www._1998.Math.MathML.MspaceType mspace5) {
        this.mspace5 = mspace5;
    }


    /**
     * Gets the maction5 value for this MmultiscriptsType.
     * 
     * @return maction5
     */
    public org.w3.www._1998.Math.MathML.MactionType getMaction5() {
        return maction5;
    }


    /**
     * Sets the maction5 value for this MmultiscriptsType.
     * 
     * @param maction5
     */
    public void setMaction5(org.w3.www._1998.Math.MathML.MactionType maction5) {
        this.maction5 = maction5;
    }


    /**
     * Gets the merror5 value for this MmultiscriptsType.
     * 
     * @return merror5
     */
    public org.w3.www._1998.Math.MathML.MerrorType getMerror5() {
        return merror5;
    }


    /**
     * Sets the merror5 value for this MmultiscriptsType.
     * 
     * @param merror5
     */
    public void setMerror5(org.w3.www._1998.Math.MathML.MerrorType merror5) {
        this.merror5 = merror5;
    }


    /**
     * Gets the mstyle5 value for this MmultiscriptsType.
     * 
     * @return mstyle5
     */
    public org.w3.www._1998.Math.MathML.MstyleType getMstyle5() {
        return mstyle5;
    }


    /**
     * Sets the mstyle5 value for this MmultiscriptsType.
     * 
     * @param mstyle5
     */
    public void setMstyle5(org.w3.www._1998.Math.MathML.MstyleType mstyle5) {
        this.mstyle5 = mstyle5;
    }


    /**
     * Gets the cn5 value for this MmultiscriptsType.
     * 
     * @return cn5
     */
    public org.w3.www._1998.Math.MathML.CnType getCn5() {
        return cn5;
    }


    /**
     * Sets the cn5 value for this MmultiscriptsType.
     * 
     * @param cn5
     */
    public void setCn5(org.w3.www._1998.Math.MathML.CnType cn5) {
        this.cn5 = cn5;
    }


    /**
     * Gets the ci5 value for this MmultiscriptsType.
     * 
     * @return ci5
     */
    public org.w3.www._1998.Math.MathML.CiType getCi5() {
        return ci5;
    }


    /**
     * Sets the ci5 value for this MmultiscriptsType.
     * 
     * @param ci5
     */
    public void setCi5(org.w3.www._1998.Math.MathML.CiType ci5) {
        this.ci5 = ci5;
    }


    /**
     * Gets the csymbol5 value for this MmultiscriptsType.
     * 
     * @return csymbol5
     */
    public org.w3.www._1998.Math.MathML.CsymbolType getCsymbol5() {
        return csymbol5;
    }


    /**
     * Sets the csymbol5 value for this MmultiscriptsType.
     * 
     * @param csymbol5
     */
    public void setCsymbol5(org.w3.www._1998.Math.MathML.CsymbolType csymbol5) {
        this.csymbol5 = csymbol5;
    }


    /**
     * Gets the abs5 value for this MmultiscriptsType.
     * 
     * @return abs5
     */
    public org.w3.www._1998.Math.MathML.ArithType getAbs5() {
        return abs5;
    }


    /**
     * Sets the abs5 value for this MmultiscriptsType.
     * 
     * @param abs5
     */
    public void setAbs5(org.w3.www._1998.Math.MathML.ArithType abs5) {
        this.abs5 = abs5;
    }


    /**
     * Gets the conjugate5 value for this MmultiscriptsType.
     * 
     * @return conjugate5
     */
    public org.w3.www._1998.Math.MathML.ArithType getConjugate5() {
        return conjugate5;
    }


    /**
     * Sets the conjugate5 value for this MmultiscriptsType.
     * 
     * @param conjugate5
     */
    public void setConjugate5(org.w3.www._1998.Math.MathML.ArithType conjugate5) {
        this.conjugate5 = conjugate5;
    }


    /**
     * Gets the factorial5 value for this MmultiscriptsType.
     * 
     * @return factorial5
     */
    public org.w3.www._1998.Math.MathML.ArithType getFactorial5() {
        return factorial5;
    }


    /**
     * Sets the factorial5 value for this MmultiscriptsType.
     * 
     * @param factorial5
     */
    public void setFactorial5(org.w3.www._1998.Math.MathML.ArithType factorial5) {
        this.factorial5 = factorial5;
    }


    /**
     * Gets the arg5 value for this MmultiscriptsType.
     * 
     * @return arg5
     */
    public org.w3.www._1998.Math.MathML.ArithType getArg5() {
        return arg5;
    }


    /**
     * Sets the arg5 value for this MmultiscriptsType.
     * 
     * @param arg5
     */
    public void setArg5(org.w3.www._1998.Math.MathML.ArithType arg5) {
        this.arg5 = arg5;
    }


    /**
     * Gets the real5 value for this MmultiscriptsType.
     * 
     * @return real5
     */
    public org.w3.www._1998.Math.MathML.ArithType getReal5() {
        return real5;
    }


    /**
     * Sets the real5 value for this MmultiscriptsType.
     * 
     * @param real5
     */
    public void setReal5(org.w3.www._1998.Math.MathML.ArithType real5) {
        this.real5 = real5;
    }


    /**
     * Gets the imaginary5 value for this MmultiscriptsType.
     * 
     * @return imaginary5
     */
    public org.w3.www._1998.Math.MathML.ArithType getImaginary5() {
        return imaginary5;
    }


    /**
     * Sets the imaginary5 value for this MmultiscriptsType.
     * 
     * @param imaginary5
     */
    public void setImaginary5(org.w3.www._1998.Math.MathML.ArithType imaginary5) {
        this.imaginary5 = imaginary5;
    }


    /**
     * Gets the floor5 value for this MmultiscriptsType.
     * 
     * @return floor5
     */
    public org.w3.www._1998.Math.MathML.ArithType getFloor5() {
        return floor5;
    }


    /**
     * Sets the floor5 value for this MmultiscriptsType.
     * 
     * @param floor5
     */
    public void setFloor5(org.w3.www._1998.Math.MathML.ArithType floor5) {
        this.floor5 = floor5;
    }


    /**
     * Gets the ceiling5 value for this MmultiscriptsType.
     * 
     * @return ceiling5
     */
    public org.w3.www._1998.Math.MathML.ArithType getCeiling5() {
        return ceiling5;
    }


    /**
     * Sets the ceiling5 value for this MmultiscriptsType.
     * 
     * @param ceiling5
     */
    public void setCeiling5(org.w3.www._1998.Math.MathML.ArithType ceiling5) {
        this.ceiling5 = ceiling5;
    }


    /**
     * Gets the quotient5 value for this MmultiscriptsType.
     * 
     * @return quotient5
     */
    public org.w3.www._1998.Math.MathML.ArithType getQuotient5() {
        return quotient5;
    }


    /**
     * Sets the quotient5 value for this MmultiscriptsType.
     * 
     * @param quotient5
     */
    public void setQuotient5(org.w3.www._1998.Math.MathML.ArithType quotient5) {
        this.quotient5 = quotient5;
    }


    /**
     * Gets the divide5 value for this MmultiscriptsType.
     * 
     * @return divide5
     */
    public org.w3.www._1998.Math.MathML.ArithType getDivide5() {
        return divide5;
    }


    /**
     * Sets the divide5 value for this MmultiscriptsType.
     * 
     * @param divide5
     */
    public void setDivide5(org.w3.www._1998.Math.MathML.ArithType divide5) {
        this.divide5 = divide5;
    }


    /**
     * Gets the rem5 value for this MmultiscriptsType.
     * 
     * @return rem5
     */
    public org.w3.www._1998.Math.MathML.ArithType getRem5() {
        return rem5;
    }


    /**
     * Sets the rem5 value for this MmultiscriptsType.
     * 
     * @param rem5
     */
    public void setRem5(org.w3.www._1998.Math.MathML.ArithType rem5) {
        this.rem5 = rem5;
    }


    /**
     * Gets the minus5 value for this MmultiscriptsType.
     * 
     * @return minus5
     */
    public org.w3.www._1998.Math.MathML.ArithType getMinus5() {
        return minus5;
    }


    /**
     * Sets the minus5 value for this MmultiscriptsType.
     * 
     * @param minus5
     */
    public void setMinus5(org.w3.www._1998.Math.MathML.ArithType minus5) {
        this.minus5 = minus5;
    }


    /**
     * Gets the plus5 value for this MmultiscriptsType.
     * 
     * @return plus5
     */
    public org.w3.www._1998.Math.MathML.ArithType getPlus5() {
        return plus5;
    }


    /**
     * Sets the plus5 value for this MmultiscriptsType.
     * 
     * @param plus5
     */
    public void setPlus5(org.w3.www._1998.Math.MathML.ArithType plus5) {
        this.plus5 = plus5;
    }


    /**
     * Gets the times5 value for this MmultiscriptsType.
     * 
     * @return times5
     */
    public org.w3.www._1998.Math.MathML.ArithType getTimes5() {
        return times5;
    }


    /**
     * Sets the times5 value for this MmultiscriptsType.
     * 
     * @param times5
     */
    public void setTimes5(org.w3.www._1998.Math.MathML.ArithType times5) {
        this.times5 = times5;
    }


    /**
     * Gets the power5 value for this MmultiscriptsType.
     * 
     * @return power5
     */
    public org.w3.www._1998.Math.MathML.ArithType getPower5() {
        return power5;
    }


    /**
     * Sets the power5 value for this MmultiscriptsType.
     * 
     * @param power5
     */
    public void setPower5(org.w3.www._1998.Math.MathML.ArithType power5) {
        this.power5 = power5;
    }


    /**
     * Gets the root5 value for this MmultiscriptsType.
     * 
     * @return root5
     */
    public org.w3.www._1998.Math.MathML.ArithType getRoot5() {
        return root5;
    }


    /**
     * Sets the root5 value for this MmultiscriptsType.
     * 
     * @param root5
     */
    public void setRoot5(org.w3.www._1998.Math.MathML.ArithType root5) {
        this.root5 = root5;
    }


    /**
     * Gets the max5 value for this MmultiscriptsType.
     * 
     * @return max5
     */
    public org.w3.www._1998.Math.MathML.ArithType getMax5() {
        return max5;
    }


    /**
     * Sets the max5 value for this MmultiscriptsType.
     * 
     * @param max5
     */
    public void setMax5(org.w3.www._1998.Math.MathML.ArithType max5) {
        this.max5 = max5;
    }


    /**
     * Gets the min5 value for this MmultiscriptsType.
     * 
     * @return min5
     */
    public org.w3.www._1998.Math.MathML.ArithType getMin5() {
        return min5;
    }


    /**
     * Sets the min5 value for this MmultiscriptsType.
     * 
     * @param min5
     */
    public void setMin5(org.w3.www._1998.Math.MathML.ArithType min5) {
        this.min5 = min5;
    }


    /**
     * Gets the gcd5 value for this MmultiscriptsType.
     * 
     * @return gcd5
     */
    public org.w3.www._1998.Math.MathML.ArithType getGcd5() {
        return gcd5;
    }


    /**
     * Sets the gcd5 value for this MmultiscriptsType.
     * 
     * @param gcd5
     */
    public void setGcd5(org.w3.www._1998.Math.MathML.ArithType gcd5) {
        this.gcd5 = gcd5;
    }


    /**
     * Gets the lcm5 value for this MmultiscriptsType.
     * 
     * @return lcm5
     */
    public org.w3.www._1998.Math.MathML.ArithType getLcm5() {
        return lcm5;
    }


    /**
     * Sets the lcm5 value for this MmultiscriptsType.
     * 
     * @param lcm5
     */
    public void setLcm5(org.w3.www._1998.Math.MathML.ArithType lcm5) {
        this.lcm5 = lcm5;
    }


    /**
     * Gets the sum5 value for this MmultiscriptsType.
     * 
     * @return sum5
     */
    public org.w3.www._1998.Math.MathML.ArithType getSum5() {
        return sum5;
    }


    /**
     * Sets the sum5 value for this MmultiscriptsType.
     * 
     * @param sum5
     */
    public void setSum5(org.w3.www._1998.Math.MathML.ArithType sum5) {
        this.sum5 = sum5;
    }


    /**
     * Gets the product5 value for this MmultiscriptsType.
     * 
     * @return product5
     */
    public org.w3.www._1998.Math.MathML.ArithType getProduct5() {
        return product5;
    }


    /**
     * Sets the product5 value for this MmultiscriptsType.
     * 
     * @param product5
     */
    public void setProduct5(org.w3.www._1998.Math.MathML.ArithType product5) {
        this.product5 = product5;
    }


    /**
     * Gets the compose5 value for this MmultiscriptsType.
     * 
     * @return compose5
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCompose5() {
        return compose5;
    }


    /**
     * Sets the compose5 value for this MmultiscriptsType.
     * 
     * @param compose5
     */
    public void setCompose5(org.w3.www._1998.Math.MathML.FunctionsType compose5) {
        this.compose5 = compose5;
    }


    /**
     * Gets the domain5 value for this MmultiscriptsType.
     * 
     * @return domain5
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getDomain5() {
        return domain5;
    }


    /**
     * Sets the domain5 value for this MmultiscriptsType.
     * 
     * @param domain5
     */
    public void setDomain5(org.w3.www._1998.Math.MathML.FunctionsType domain5) {
        this.domain5 = domain5;
    }


    /**
     * Gets the codomain5 value for this MmultiscriptsType.
     * 
     * @return codomain5
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getCodomain5() {
        return codomain5;
    }


    /**
     * Sets the codomain5 value for this MmultiscriptsType.
     * 
     * @param codomain5
     */
    public void setCodomain5(org.w3.www._1998.Math.MathML.FunctionsType codomain5) {
        this.codomain5 = codomain5;
    }


    /**
     * Gets the image5 value for this MmultiscriptsType.
     * 
     * @return image5
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getImage5() {
        return image5;
    }


    /**
     * Sets the image5 value for this MmultiscriptsType.
     * 
     * @param image5
     */
    public void setImage5(org.w3.www._1998.Math.MathML.FunctionsType image5) {
        this.image5 = image5;
    }


    /**
     * Gets the domainofapplication5 value for this MmultiscriptsType.
     * 
     * @return domainofapplication5
     */
    public org.w3.www._1998.Math.MathML.DomainofapplicationType getDomainofapplication5() {
        return domainofapplication5;
    }


    /**
     * Sets the domainofapplication5 value for this MmultiscriptsType.
     * 
     * @param domainofapplication5
     */
    public void setDomainofapplication5(org.w3.www._1998.Math.MathML.DomainofapplicationType domainofapplication5) {
        this.domainofapplication5 = domainofapplication5;
    }


    /**
     * Gets the ident5 value for this MmultiscriptsType.
     * 
     * @return ident5
     */
    public org.w3.www._1998.Math.MathML.FunctionsType getIdent5() {
        return ident5;
    }


    /**
     * Sets the ident5 value for this MmultiscriptsType.
     * 
     * @param ident5
     */
    public void setIdent5(org.w3.www._1998.Math.MathML.FunctionsType ident5) {
        this.ident5 = ident5;
    }


    /**
     * Gets the and5 value for this MmultiscriptsType.
     * 
     * @return and5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getAnd5() {
        return and5;
    }


    /**
     * Sets the and5 value for this MmultiscriptsType.
     * 
     * @param and5
     */
    public void setAnd5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType and5) {
        this.and5 = and5;
    }


    /**
     * Gets the or5 value for this MmultiscriptsType.
     * 
     * @return or5
     */
    public org.w3.www._1998.Math.MathML.LogicType getOr5() {
        return or5;
    }


    /**
     * Sets the or5 value for this MmultiscriptsType.
     * 
     * @param or5
     */
    public void setOr5(org.w3.www._1998.Math.MathML.LogicType or5) {
        this.or5 = or5;
    }


    /**
     * Gets the xor5 value for this MmultiscriptsType.
     * 
     * @return xor5
     */
    public org.w3.www._1998.Math.MathML.LogicType getXor5() {
        return xor5;
    }


    /**
     * Sets the xor5 value for this MmultiscriptsType.
     * 
     * @param xor5
     */
    public void setXor5(org.w3.www._1998.Math.MathML.LogicType xor5) {
        this.xor5 = xor5;
    }


    /**
     * Gets the not5 value for this MmultiscriptsType.
     * 
     * @return not5
     */
    public org.w3.www._1998.Math.MathML.LogicType getNot5() {
        return not5;
    }


    /**
     * Sets the not5 value for this MmultiscriptsType.
     * 
     * @param not5
     */
    public void setNot5(org.w3.www._1998.Math.MathML.LogicType not5) {
        this.not5 = not5;
    }


    /**
     * Gets the exists5 value for this MmultiscriptsType.
     * 
     * @return exists5
     */
    public org.w3.www._1998.Math.MathML.LogicType getExists5() {
        return exists5;
    }


    /**
     * Sets the exists5 value for this MmultiscriptsType.
     * 
     * @param exists5
     */
    public void setExists5(org.w3.www._1998.Math.MathML.LogicType exists5) {
        this.exists5 = exists5;
    }


    /**
     * Gets the forall5 value for this MmultiscriptsType.
     * 
     * @return forall5
     */
    public org.w3.www._1998.Math.MathML.LogicType getForall5() {
        return forall5;
    }


    /**
     * Sets the forall5 value for this MmultiscriptsType.
     * 
     * @param forall5
     */
    public void setForall5(org.w3.www._1998.Math.MathML.LogicType forall5) {
        this.forall5 = forall5;
    }


    /**
     * Gets the implies5 value for this MmultiscriptsType.
     * 
     * @return implies5
     */
    public org.w3.www._1998.Math.MathML.LogicType getImplies5() {
        return implies5;
    }


    /**
     * Sets the implies5 value for this MmultiscriptsType.
     * 
     * @param implies5
     */
    public void setImplies5(org.w3.www._1998.Math.MathML.LogicType implies5) {
        this.implies5 = implies5;
    }


    /**
     * Gets the naturalnumbers5 value for this MmultiscriptsType.
     * 
     * @return naturalnumbers5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNaturalnumbers5() {
        return naturalnumbers5;
    }


    /**
     * Sets the naturalnumbers5 value for this MmultiscriptsType.
     * 
     * @param naturalnumbers5
     */
    public void setNaturalnumbers5(org.w3.www._1998.Math.MathML.ConstantType naturalnumbers5) {
        this.naturalnumbers5 = naturalnumbers5;
    }


    /**
     * Gets the primes5 value for this MmultiscriptsType.
     * 
     * @return primes5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPrimes5() {
        return primes5;
    }


    /**
     * Sets the primes5 value for this MmultiscriptsType.
     * 
     * @param primes5
     */
    public void setPrimes5(org.w3.www._1998.Math.MathML.ConstantType primes5) {
        this.primes5 = primes5;
    }


    /**
     * Gets the integers5 value for this MmultiscriptsType.
     * 
     * @return integers5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getIntegers5() {
        return integers5;
    }


    /**
     * Sets the integers5 value for this MmultiscriptsType.
     * 
     * @param integers5
     */
    public void setIntegers5(org.w3.www._1998.Math.MathML.ConstantType integers5) {
        this.integers5 = integers5;
    }


    /**
     * Gets the rationals5 value for this MmultiscriptsType.
     * 
     * @return rationals5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getRationals5() {
        return rationals5;
    }


    /**
     * Sets the rationals5 value for this MmultiscriptsType.
     * 
     * @param rationals5
     */
    public void setRationals5(org.w3.www._1998.Math.MathML.ConstantType rationals5) {
        this.rationals5 = rationals5;
    }


    /**
     * Gets the reals5 value for this MmultiscriptsType.
     * 
     * @return reals5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getReals5() {
        return reals5;
    }


    /**
     * Sets the reals5 value for this MmultiscriptsType.
     * 
     * @param reals5
     */
    public void setReals5(org.w3.www._1998.Math.MathML.ConstantType reals5) {
        this.reals5 = reals5;
    }


    /**
     * Gets the complexes5 value for this MmultiscriptsType.
     * 
     * @return complexes5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getComplexes5() {
        return complexes5;
    }


    /**
     * Sets the complexes5 value for this MmultiscriptsType.
     * 
     * @param complexes5
     */
    public void setComplexes5(org.w3.www._1998.Math.MathML.ConstantType complexes5) {
        this.complexes5 = complexes5;
    }


    /**
     * Gets the emptyset5 value for this MmultiscriptsType.
     * 
     * @return emptyset5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEmptyset5() {
        return emptyset5;
    }


    /**
     * Sets the emptyset5 value for this MmultiscriptsType.
     * 
     * @param emptyset5
     */
    public void setEmptyset5(org.w3.www._1998.Math.MathML.ConstantType emptyset5) {
        this.emptyset5 = emptyset5;
    }


    /**
     * Gets the exponentiale5 value for this MmultiscriptsType.
     * 
     * @return exponentiale5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getExponentiale5() {
        return exponentiale5;
    }


    /**
     * Sets the exponentiale5 value for this MmultiscriptsType.
     * 
     * @param exponentiale5
     */
    public void setExponentiale5(org.w3.www._1998.Math.MathML.ConstantType exponentiale5) {
        this.exponentiale5 = exponentiale5;
    }


    /**
     * Gets the imaginaryi5 value for this MmultiscriptsType.
     * 
     * @return imaginaryi5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getImaginaryi5() {
        return imaginaryi5;
    }


    /**
     * Sets the imaginaryi5 value for this MmultiscriptsType.
     * 
     * @param imaginaryi5
     */
    public void setImaginaryi5(org.w3.www._1998.Math.MathML.ConstantType imaginaryi5) {
        this.imaginaryi5 = imaginaryi5;
    }


    /**
     * Gets the pi5 value for this MmultiscriptsType.
     * 
     * @return pi5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getPi5() {
        return pi5;
    }


    /**
     * Sets the pi5 value for this MmultiscriptsType.
     * 
     * @param pi5
     */
    public void setPi5(org.w3.www._1998.Math.MathML.ConstantType pi5) {
        this.pi5 = pi5;
    }


    /**
     * Gets the eulergamma5 value for this MmultiscriptsType.
     * 
     * @return eulergamma5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getEulergamma5() {
        return eulergamma5;
    }


    /**
     * Sets the eulergamma5 value for this MmultiscriptsType.
     * 
     * @param eulergamma5
     */
    public void setEulergamma5(org.w3.www._1998.Math.MathML.ConstantType eulergamma5) {
        this.eulergamma5 = eulergamma5;
    }


    /**
     * Gets the _true5 value for this MmultiscriptsType.
     * 
     * @return _true5
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_true5() {
        return _true5;
    }


    /**
     * Sets the _true5 value for this MmultiscriptsType.
     * 
     * @param _true5
     */
    public void set_true5(org.w3.www._1998.Math.MathML.ConstantType _true5) {
        this._true5 = _true5;
    }


    /**
     * Gets the _false5 value for this MmultiscriptsType.
     * 
     * @return _false5
     */
    public org.w3.www._1998.Math.MathML.ConstantType get_false5() {
        return _false5;
    }


    /**
     * Sets the _false5 value for this MmultiscriptsType.
     * 
     * @param _false5
     */
    public void set_false5(org.w3.www._1998.Math.MathML.ConstantType _false5) {
        this._false5 = _false5;
    }


    /**
     * Gets the infinity5 value for this MmultiscriptsType.
     * 
     * @return infinity5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getInfinity5() {
        return infinity5;
    }


    /**
     * Sets the infinity5 value for this MmultiscriptsType.
     * 
     * @param infinity5
     */
    public void setInfinity5(org.w3.www._1998.Math.MathML.ConstantType infinity5) {
        this.infinity5 = infinity5;
    }


    /**
     * Gets the notanumber5 value for this MmultiscriptsType.
     * 
     * @return notanumber5
     */
    public org.w3.www._1998.Math.MathML.ConstantType getNotanumber5() {
        return notanumber5;
    }


    /**
     * Sets the notanumber5 value for this MmultiscriptsType.
     * 
     * @param notanumber5
     */
    public void setNotanumber5(org.w3.www._1998.Math.MathML.ConstantType notanumber5) {
        this.notanumber5 = notanumber5;
    }


    /**
     * Gets the set5 value for this MmultiscriptsType.
     * 
     * @return set5
     */
    public org.w3.www._1998.Math.MathML.SetType getSet5() {
        return set5;
    }


    /**
     * Sets the set5 value for this MmultiscriptsType.
     * 
     * @param set5
     */
    public void setSet5(org.w3.www._1998.Math.MathML.SetType set5) {
        this.set5 = set5;
    }


    /**
     * Gets the list5 value for this MmultiscriptsType.
     * 
     * @return list5
     */
    public org.w3.www._1998.Math.MathML.ListType getList5() {
        return list5;
    }


    /**
     * Sets the list5 value for this MmultiscriptsType.
     * 
     * @param list5
     */
    public void setList5(org.w3.www._1998.Math.MathML.ListType list5) {
        this.list5 = list5;
    }


    /**
     * Gets the union5 value for this MmultiscriptsType.
     * 
     * @return union5
     */
    public org.w3.www._1998.Math.MathML.UnionType getUnion5() {
        return union5;
    }


    /**
     * Sets the union5 value for this MmultiscriptsType.
     * 
     * @param union5
     */
    public void setUnion5(org.w3.www._1998.Math.MathML.UnionType union5) {
        this.union5 = union5;
    }


    /**
     * Gets the intersect5 value for this MmultiscriptsType.
     * 
     * @return intersect5
     */
    public org.w3.www._1998.Math.MathML.IntersectType getIntersect5() {
        return intersect5;
    }


    /**
     * Sets the intersect5 value for this MmultiscriptsType.
     * 
     * @param intersect5
     */
    public void setIntersect5(org.w3.www._1998.Math.MathML.IntersectType intersect5) {
        this.intersect5 = intersect5;
    }


    /**
     * Gets the in5 value for this MmultiscriptsType.
     * 
     * @return in5
     */
    public org.w3.www._1998.Math.MathML.InType getIn5() {
        return in5;
    }


    /**
     * Sets the in5 value for this MmultiscriptsType.
     * 
     * @param in5
     */
    public void setIn5(org.w3.www._1998.Math.MathML.InType in5) {
        this.in5 = in5;
    }


    /**
     * Gets the notin5 value for this MmultiscriptsType.
     * 
     * @return notin5
     */
    public org.w3.www._1998.Math.MathML.NotinType getNotin5() {
        return notin5;
    }


    /**
     * Sets the notin5 value for this MmultiscriptsType.
     * 
     * @param notin5
     */
    public void setNotin5(org.w3.www._1998.Math.MathML.NotinType notin5) {
        this.notin5 = notin5;
    }


    /**
     * Gets the subset5 value for this MmultiscriptsType.
     * 
     * @return subset5
     */
    public org.w3.www._1998.Math.MathML.SubsetType getSubset5() {
        return subset5;
    }


    /**
     * Sets the subset5 value for this MmultiscriptsType.
     * 
     * @param subset5
     */
    public void setSubset5(org.w3.www._1998.Math.MathML.SubsetType subset5) {
        this.subset5 = subset5;
    }


    /**
     * Gets the prsubset5 value for this MmultiscriptsType.
     * 
     * @return prsubset5
     */
    public org.w3.www._1998.Math.MathML.PrsubsetType getPrsubset5() {
        return prsubset5;
    }


    /**
     * Sets the prsubset5 value for this MmultiscriptsType.
     * 
     * @param prsubset5
     */
    public void setPrsubset5(org.w3.www._1998.Math.MathML.PrsubsetType prsubset5) {
        this.prsubset5 = prsubset5;
    }


    /**
     * Gets the notsubset5 value for this MmultiscriptsType.
     * 
     * @return notsubset5
     */
    public org.w3.www._1998.Math.MathML.NotsubsetType getNotsubset5() {
        return notsubset5;
    }


    /**
     * Sets the notsubset5 value for this MmultiscriptsType.
     * 
     * @param notsubset5
     */
    public void setNotsubset5(org.w3.www._1998.Math.MathML.NotsubsetType notsubset5) {
        this.notsubset5 = notsubset5;
    }


    /**
     * Gets the notprsubset5 value for this MmultiscriptsType.
     * 
     * @return notprsubset5
     */
    public org.w3.www._1998.Math.MathML.NotprsubsetType getNotprsubset5() {
        return notprsubset5;
    }


    /**
     * Sets the notprsubset5 value for this MmultiscriptsType.
     * 
     * @param notprsubset5
     */
    public void setNotprsubset5(org.w3.www._1998.Math.MathML.NotprsubsetType notprsubset5) {
        this.notprsubset5 = notprsubset5;
    }


    /**
     * Gets the setdiff5 value for this MmultiscriptsType.
     * 
     * @return setdiff5
     */
    public org.w3.www._1998.Math.MathML.SetdiffType getSetdiff5() {
        return setdiff5;
    }


    /**
     * Sets the setdiff5 value for this MmultiscriptsType.
     * 
     * @param setdiff5
     */
    public void setSetdiff5(org.w3.www._1998.Math.MathML.SetdiffType setdiff5) {
        this.setdiff5 = setdiff5;
    }


    /**
     * Gets the card5 value for this MmultiscriptsType.
     * 
     * @return card5
     */
    public org.w3.www._1998.Math.MathML.CardType getCard5() {
        return card5;
    }


    /**
     * Sets the card5 value for this MmultiscriptsType.
     * 
     * @param card5
     */
    public void setCard5(org.w3.www._1998.Math.MathML.CardType card5) {
        this.card5 = card5;
    }


    /**
     * Gets the cartesianproduct5 value for this MmultiscriptsType.
     * 
     * @return cartesianproduct5
     */
    public org.w3.www._1998.Math.MathML.CartesianproductType getCartesianproduct5() {
        return cartesianproduct5;
    }


    /**
     * Sets the cartesianproduct5 value for this MmultiscriptsType.
     * 
     * @param cartesianproduct5
     */
    public void setCartesianproduct5(org.w3.www._1998.Math.MathML.CartesianproductType cartesianproduct5) {
        this.cartesianproduct5 = cartesianproduct5;
    }


    /**
     * Gets the eq5 value for this MmultiscriptsType.
     * 
     * @return eq5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEq5() {
        return eq5;
    }


    /**
     * Sets the eq5 value for this MmultiscriptsType.
     * 
     * @param eq5
     */
    public void setEq5(org.w3.www._1998.Math.MathML.RelationsType eq5) {
        this.eq5 = eq5;
    }


    /**
     * Gets the neq5 value for this MmultiscriptsType.
     * 
     * @return neq5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getNeq5() {
        return neq5;
    }


    /**
     * Sets the neq5 value for this MmultiscriptsType.
     * 
     * @param neq5
     */
    public void setNeq5(org.w3.www._1998.Math.MathML.RelationsType neq5) {
        this.neq5 = neq5;
    }


    /**
     * Gets the leq5 value for this MmultiscriptsType.
     * 
     * @return leq5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLeq5() {
        return leq5;
    }


    /**
     * Sets the leq5 value for this MmultiscriptsType.
     * 
     * @param leq5
     */
    public void setLeq5(org.w3.www._1998.Math.MathML.RelationsType leq5) {
        this.leq5 = leq5;
    }


    /**
     * Gets the lt5 value for this MmultiscriptsType.
     * 
     * @return lt5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getLt5() {
        return lt5;
    }


    /**
     * Sets the lt5 value for this MmultiscriptsType.
     * 
     * @param lt5
     */
    public void setLt5(org.w3.www._1998.Math.MathML.RelationsType lt5) {
        this.lt5 = lt5;
    }


    /**
     * Gets the geq5 value for this MmultiscriptsType.
     * 
     * @return geq5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGeq5() {
        return geq5;
    }


    /**
     * Sets the geq5 value for this MmultiscriptsType.
     * 
     * @param geq5
     */
    public void setGeq5(org.w3.www._1998.Math.MathML.RelationsType geq5) {
        this.geq5 = geq5;
    }


    /**
     * Gets the gt5 value for this MmultiscriptsType.
     * 
     * @return gt5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getGt5() {
        return gt5;
    }


    /**
     * Sets the gt5 value for this MmultiscriptsType.
     * 
     * @param gt5
     */
    public void setGt5(org.w3.www._1998.Math.MathML.RelationsType gt5) {
        this.gt5 = gt5;
    }


    /**
     * Gets the equivalent5 value for this MmultiscriptsType.
     * 
     * @return equivalent5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getEquivalent5() {
        return equivalent5;
    }


    /**
     * Sets the equivalent5 value for this MmultiscriptsType.
     * 
     * @param equivalent5
     */
    public void setEquivalent5(org.w3.www._1998.Math.MathML.RelationsType equivalent5) {
        this.equivalent5 = equivalent5;
    }


    /**
     * Gets the approx5 value for this MmultiscriptsType.
     * 
     * @return approx5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getApprox5() {
        return approx5;
    }


    /**
     * Sets the approx5 value for this MmultiscriptsType.
     * 
     * @param approx5
     */
    public void setApprox5(org.w3.www._1998.Math.MathML.RelationsType approx5) {
        this.approx5 = approx5;
    }


    /**
     * Gets the factorof5 value for this MmultiscriptsType.
     * 
     * @return factorof5
     */
    public org.w3.www._1998.Math.MathML.RelationsType getFactorof5() {
        return factorof5;
    }


    /**
     * Sets the factorof5 value for this MmultiscriptsType.
     * 
     * @param factorof5
     */
    public void setFactorof5(org.w3.www._1998.Math.MathML.RelationsType factorof5) {
        this.factorof5 = factorof5;
    }


    /**
     * Gets the exp5 value for this MmultiscriptsType.
     * 
     * @return exp5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getExp5() {
        return exp5;
    }


    /**
     * Sets the exp5 value for this MmultiscriptsType.
     * 
     * @param exp5
     */
    public void setExp5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType exp5) {
        this.exp5 = exp5;
    }


    /**
     * Gets the ln5 value for this MmultiscriptsType.
     * 
     * @return ln5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLn5() {
        return ln5;
    }


    /**
     * Sets the ln5 value for this MmultiscriptsType.
     * 
     * @param ln5
     */
    public void setLn5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType ln5) {
        this.ln5 = ln5;
    }


    /**
     * Gets the log5 value for this MmultiscriptsType.
     * 
     * @return log5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getLog5() {
        return log5;
    }


    /**
     * Sets the log5 value for this MmultiscriptsType.
     * 
     * @param log5
     */
    public void setLog5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType log5) {
        this.log5 = log5;
    }


    /**
     * Gets the logbase5 value for this MmultiscriptsType.
     * 
     * @return logbase5
     */
    public org.w3.www._1998.Math.MathML.LogbaseType getLogbase5() {
        return logbase5;
    }


    /**
     * Sets the logbase5 value for this MmultiscriptsType.
     * 
     * @param logbase5
     */
    public void setLogbase5(org.w3.www._1998.Math.MathML.LogbaseType logbase5) {
        this.logbase5 = logbase5;
    }


    /**
     * Gets the sin5 value for this MmultiscriptsType.
     * 
     * @return sin5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSin5() {
        return sin5;
    }


    /**
     * Sets the sin5 value for this MmultiscriptsType.
     * 
     * @param sin5
     */
    public void setSin5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sin5) {
        this.sin5 = sin5;
    }


    /**
     * Gets the cos5 value for this MmultiscriptsType.
     * 
     * @return cos5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCos5() {
        return cos5;
    }


    /**
     * Sets the cos5 value for this MmultiscriptsType.
     * 
     * @param cos5
     */
    public void setCos5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cos5) {
        this.cos5 = cos5;
    }


    /**
     * Gets the tan5 value for this MmultiscriptsType.
     * 
     * @return tan5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTan5() {
        return tan5;
    }


    /**
     * Sets the tan5 value for this MmultiscriptsType.
     * 
     * @param tan5
     */
    public void setTan5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tan5) {
        this.tan5 = tan5;
    }


    /**
     * Gets the sec5 value for this MmultiscriptsType.
     * 
     * @return sec5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSec5() {
        return sec5;
    }


    /**
     * Sets the sec5 value for this MmultiscriptsType.
     * 
     * @param sec5
     */
    public void setSec5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sec5) {
        this.sec5 = sec5;
    }


    /**
     * Gets the csc5 value for this MmultiscriptsType.
     * 
     * @return csc5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsc5() {
        return csc5;
    }


    /**
     * Sets the csc5 value for this MmultiscriptsType.
     * 
     * @param csc5
     */
    public void setCsc5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csc5) {
        this.csc5 = csc5;
    }


    /**
     * Gets the cot5 value for this MmultiscriptsType.
     * 
     * @return cot5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCot5() {
        return cot5;
    }


    /**
     * Sets the cot5 value for this MmultiscriptsType.
     * 
     * @param cot5
     */
    public void setCot5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cot5) {
        this.cot5 = cot5;
    }


    /**
     * Gets the arcsin5 value for this MmultiscriptsType.
     * 
     * @return arcsin5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsin5() {
        return arcsin5;
    }


    /**
     * Sets the arcsin5 value for this MmultiscriptsType.
     * 
     * @param arcsin5
     */
    public void setArcsin5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsin5) {
        this.arcsin5 = arcsin5;
    }


    /**
     * Gets the arccos5 value for this MmultiscriptsType.
     * 
     * @return arccos5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccos5() {
        return arccos5;
    }


    /**
     * Sets the arccos5 value for this MmultiscriptsType.
     * 
     * @param arccos5
     */
    public void setArccos5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccos5) {
        this.arccos5 = arccos5;
    }


    /**
     * Gets the arctan5 value for this MmultiscriptsType.
     * 
     * @return arctan5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctan5() {
        return arctan5;
    }


    /**
     * Sets the arctan5 value for this MmultiscriptsType.
     * 
     * @param arctan5
     */
    public void setArctan5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctan5) {
        this.arctan5 = arctan5;
    }


    /**
     * Gets the arcsec5 value for this MmultiscriptsType.
     * 
     * @return arcsec5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsec5() {
        return arcsec5;
    }


    /**
     * Sets the arcsec5 value for this MmultiscriptsType.
     * 
     * @param arcsec5
     */
    public void setArcsec5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsec5) {
        this.arcsec5 = arcsec5;
    }


    /**
     * Gets the arccsc5 value for this MmultiscriptsType.
     * 
     * @return arccsc5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsc5() {
        return arccsc5;
    }


    /**
     * Sets the arccsc5 value for this MmultiscriptsType.
     * 
     * @param arccsc5
     */
    public void setArccsc5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsc5) {
        this.arccsc5 = arccsc5;
    }


    /**
     * Gets the arccot5 value for this MmultiscriptsType.
     * 
     * @return arccot5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccot5() {
        return arccot5;
    }


    /**
     * Sets the arccot5 value for this MmultiscriptsType.
     * 
     * @param arccot5
     */
    public void setArccot5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccot5) {
        this.arccot5 = arccot5;
    }


    /**
     * Gets the sinh5 value for this MmultiscriptsType.
     * 
     * @return sinh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSinh5() {
        return sinh5;
    }


    /**
     * Sets the sinh5 value for this MmultiscriptsType.
     * 
     * @param sinh5
     */
    public void setSinh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sinh5) {
        this.sinh5 = sinh5;
    }


    /**
     * Gets the cosh5 value for this MmultiscriptsType.
     * 
     * @return cosh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCosh5() {
        return cosh5;
    }


    /**
     * Sets the cosh5 value for this MmultiscriptsType.
     * 
     * @param cosh5
     */
    public void setCosh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType cosh5) {
        this.cosh5 = cosh5;
    }


    /**
     * Gets the tanh5 value for this MmultiscriptsType.
     * 
     * @return tanh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getTanh5() {
        return tanh5;
    }


    /**
     * Sets the tanh5 value for this MmultiscriptsType.
     * 
     * @param tanh5
     */
    public void setTanh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType tanh5) {
        this.tanh5 = tanh5;
    }


    /**
     * Gets the sech5 value for this MmultiscriptsType.
     * 
     * @return sech5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getSech5() {
        return sech5;
    }


    /**
     * Sets the sech5 value for this MmultiscriptsType.
     * 
     * @param sech5
     */
    public void setSech5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType sech5) {
        this.sech5 = sech5;
    }


    /**
     * Gets the csch5 value for this MmultiscriptsType.
     * 
     * @return csch5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCsch5() {
        return csch5;
    }


    /**
     * Sets the csch5 value for this MmultiscriptsType.
     * 
     * @param csch5
     */
    public void setCsch5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType csch5) {
        this.csch5 = csch5;
    }


    /**
     * Gets the coth5 value for this MmultiscriptsType.
     * 
     * @return coth5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getCoth5() {
        return coth5;
    }


    /**
     * Sets the coth5 value for this MmultiscriptsType.
     * 
     * @param coth5
     */
    public void setCoth5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType coth5) {
        this.coth5 = coth5;
    }


    /**
     * Gets the arccosh5 value for this MmultiscriptsType.
     * 
     * @return arccosh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccosh5() {
        return arccosh5;
    }


    /**
     * Sets the arccosh5 value for this MmultiscriptsType.
     * 
     * @param arccosh5
     */
    public void setArccosh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccosh5) {
        this.arccosh5 = arccosh5;
    }


    /**
     * Gets the arccoth5 value for this MmultiscriptsType.
     * 
     * @return arccoth5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccoth5() {
        return arccoth5;
    }


    /**
     * Sets the arccoth5 value for this MmultiscriptsType.
     * 
     * @param arccoth5
     */
    public void setArccoth5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccoth5) {
        this.arccoth5 = arccoth5;
    }


    /**
     * Gets the arccsch5 value for this MmultiscriptsType.
     * 
     * @return arccsch5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArccsch5() {
        return arccsch5;
    }


    /**
     * Sets the arccsch5 value for this MmultiscriptsType.
     * 
     * @param arccsch5
     */
    public void setArccsch5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arccsch5) {
        this.arccsch5 = arccsch5;
    }


    /**
     * Gets the arcsech5 value for this MmultiscriptsType.
     * 
     * @return arcsech5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsech5() {
        return arcsech5;
    }


    /**
     * Sets the arcsech5 value for this MmultiscriptsType.
     * 
     * @param arcsech5
     */
    public void setArcsech5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsech5) {
        this.arcsech5 = arcsech5;
    }


    /**
     * Gets the arcsinh5 value for this MmultiscriptsType.
     * 
     * @return arcsinh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArcsinh5() {
        return arcsinh5;
    }


    /**
     * Sets the arcsinh5 value for this MmultiscriptsType.
     * 
     * @param arcsinh5
     */
    public void setArcsinh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arcsinh5) {
        this.arcsinh5 = arcsinh5;
    }


    /**
     * Gets the arctanh5 value for this MmultiscriptsType.
     * 
     * @return arctanh5
     */
    public org.w3.www._1998.Math.MathML.ElementaryFunctionsType getArctanh5() {
        return arctanh5;
    }


    /**
     * Sets the arctanh5 value for this MmultiscriptsType.
     * 
     * @param arctanh5
     */
    public void setArctanh5(org.w3.www._1998.Math.MathML.ElementaryFunctionsType arctanh5) {
        this.arctanh5 = arctanh5;
    }


    /**
     * Gets the _int5 value for this MmultiscriptsType.
     * 
     * @return _int5
     */
    public org.w3.www._1998.Math.MathML.IntType get_int5() {
        return _int5;
    }


    /**
     * Sets the _int5 value for this MmultiscriptsType.
     * 
     * @param _int5
     */
    public void set_int5(org.w3.www._1998.Math.MathML.IntType _int5) {
        this._int5 = _int5;
    }


    /**
     * Gets the diff5 value for this MmultiscriptsType.
     * 
     * @return diff5
     */
    public org.w3.www._1998.Math.MathML.DiffType getDiff5() {
        return diff5;
    }


    /**
     * Sets the diff5 value for this MmultiscriptsType.
     * 
     * @param diff5
     */
    public void setDiff5(org.w3.www._1998.Math.MathML.DiffType diff5) {
        this.diff5 = diff5;
    }


    /**
     * Gets the partialdiff5 value for this MmultiscriptsType.
     * 
     * @return partialdiff5
     */
    public org.w3.www._1998.Math.MathML.PartialdiffType getPartialdiff5() {
        return partialdiff5;
    }


    /**
     * Sets the partialdiff5 value for this MmultiscriptsType.
     * 
     * @param partialdiff5
     */
    public void setPartialdiff5(org.w3.www._1998.Math.MathML.PartialdiffType partialdiff5) {
        this.partialdiff5 = partialdiff5;
    }


    /**
     * Gets the limit5 value for this MmultiscriptsType.
     * 
     * @return limit5
     */
    public org.w3.www._1998.Math.MathML.LimitType getLimit5() {
        return limit5;
    }


    /**
     * Sets the limit5 value for this MmultiscriptsType.
     * 
     * @param limit5
     */
    public void setLimit5(org.w3.www._1998.Math.MathML.LimitType limit5) {
        this.limit5 = limit5;
    }


    /**
     * Gets the lowlimit5 value for this MmultiscriptsType.
     * 
     * @return lowlimit5
     */
    public org.w3.www._1998.Math.MathML.LowlimitType getLowlimit5() {
        return lowlimit5;
    }


    /**
     * Sets the lowlimit5 value for this MmultiscriptsType.
     * 
     * @param lowlimit5
     */
    public void setLowlimit5(org.w3.www._1998.Math.MathML.LowlimitType lowlimit5) {
        this.lowlimit5 = lowlimit5;
    }


    /**
     * Gets the uplimit5 value for this MmultiscriptsType.
     * 
     * @return uplimit5
     */
    public org.w3.www._1998.Math.MathML.UplimitType getUplimit5() {
        return uplimit5;
    }


    /**
     * Sets the uplimit5 value for this MmultiscriptsType.
     * 
     * @param uplimit5
     */
    public void setUplimit5(org.w3.www._1998.Math.MathML.UplimitType uplimit5) {
        this.uplimit5 = uplimit5;
    }


    /**
     * Gets the tendsto5 value for this MmultiscriptsType.
     * 
     * @return tendsto5
     */
    public org.w3.www._1998.Math.MathML.TendstoType getTendsto5() {
        return tendsto5;
    }


    /**
     * Sets the tendsto5 value for this MmultiscriptsType.
     * 
     * @param tendsto5
     */
    public void setTendsto5(org.w3.www._1998.Math.MathML.TendstoType tendsto5) {
        this.tendsto5 = tendsto5;
    }


    /**
     * Gets the vector5 value for this MmultiscriptsType.
     * 
     * @return vector5
     */
    public org.w3.www._1998.Math.MathML.VectorType getVector5() {
        return vector5;
    }


    /**
     * Sets the vector5 value for this MmultiscriptsType.
     * 
     * @param vector5
     */
    public void setVector5(org.w3.www._1998.Math.MathML.VectorType vector5) {
        this.vector5 = vector5;
    }


    /**
     * Gets the matrix5 value for this MmultiscriptsType.
     * 
     * @return matrix5
     */
    public org.w3.www._1998.Math.MathML.MatrixType getMatrix5() {
        return matrix5;
    }


    /**
     * Sets the matrix5 value for this MmultiscriptsType.
     * 
     * @param matrix5
     */
    public void setMatrix5(org.w3.www._1998.Math.MathML.MatrixType matrix5) {
        this.matrix5 = matrix5;
    }


    /**
     * Gets the determinant5 value for this MmultiscriptsType.
     * 
     * @return determinant5
     */
    public org.w3.www._1998.Math.MathML.DeterminantType getDeterminant5() {
        return determinant5;
    }


    /**
     * Sets the determinant5 value for this MmultiscriptsType.
     * 
     * @param determinant5
     */
    public void setDeterminant5(org.w3.www._1998.Math.MathML.DeterminantType determinant5) {
        this.determinant5 = determinant5;
    }


    /**
     * Gets the transpose5 value for this MmultiscriptsType.
     * 
     * @return transpose5
     */
    public org.w3.www._1998.Math.MathML.TransposeType getTranspose5() {
        return transpose5;
    }


    /**
     * Sets the transpose5 value for this MmultiscriptsType.
     * 
     * @param transpose5
     */
    public void setTranspose5(org.w3.www._1998.Math.MathML.TransposeType transpose5) {
        this.transpose5 = transpose5;
    }


    /**
     * Gets the selector5 value for this MmultiscriptsType.
     * 
     * @return selector5
     */
    public org.w3.www._1998.Math.MathML.SelectorType getSelector5() {
        return selector5;
    }


    /**
     * Sets the selector5 value for this MmultiscriptsType.
     * 
     * @param selector5
     */
    public void setSelector5(org.w3.www._1998.Math.MathML.SelectorType selector5) {
        this.selector5 = selector5;
    }


    /**
     * Gets the vectorproduct5 value for this MmultiscriptsType.
     * 
     * @return vectorproduct5
     */
    public org.w3.www._1998.Math.MathML.VectorproductType getVectorproduct5() {
        return vectorproduct5;
    }


    /**
     * Sets the vectorproduct5 value for this MmultiscriptsType.
     * 
     * @param vectorproduct5
     */
    public void setVectorproduct5(org.w3.www._1998.Math.MathML.VectorproductType vectorproduct5) {
        this.vectorproduct5 = vectorproduct5;
    }


    /**
     * Gets the scalarproduct5 value for this MmultiscriptsType.
     * 
     * @return scalarproduct5
     */
    public org.w3.www._1998.Math.MathML.ScalarproductType getScalarproduct5() {
        return scalarproduct5;
    }


    /**
     * Sets the scalarproduct5 value for this MmultiscriptsType.
     * 
     * @param scalarproduct5
     */
    public void setScalarproduct5(org.w3.www._1998.Math.MathML.ScalarproductType scalarproduct5) {
        this.scalarproduct5 = scalarproduct5;
    }


    /**
     * Gets the outerproduct5 value for this MmultiscriptsType.
     * 
     * @return outerproduct5
     */
    public org.w3.www._1998.Math.MathML.OuterproductType getOuterproduct5() {
        return outerproduct5;
    }


    /**
     * Sets the outerproduct5 value for this MmultiscriptsType.
     * 
     * @param outerproduct5
     */
    public void setOuterproduct5(org.w3.www._1998.Math.MathML.OuterproductType outerproduct5) {
        this.outerproduct5 = outerproduct5;
    }


    /**
     * Gets the divergence5 value for this MmultiscriptsType.
     * 
     * @return divergence5
     */
    public org.w3.www._1998.Math.MathML.DivergenceType getDivergence5() {
        return divergence5;
    }


    /**
     * Sets the divergence5 value for this MmultiscriptsType.
     * 
     * @param divergence5
     */
    public void setDivergence5(org.w3.www._1998.Math.MathML.DivergenceType divergence5) {
        this.divergence5 = divergence5;
    }


    /**
     * Gets the grad5 value for this MmultiscriptsType.
     * 
     * @return grad5
     */
    public org.w3.www._1998.Math.MathML.GradType getGrad5() {
        return grad5;
    }


    /**
     * Sets the grad5 value for this MmultiscriptsType.
     * 
     * @param grad5
     */
    public void setGrad5(org.w3.www._1998.Math.MathML.GradType grad5) {
        this.grad5 = grad5;
    }


    /**
     * Gets the curl5 value for this MmultiscriptsType.
     * 
     * @return curl5
     */
    public org.w3.www._1998.Math.MathML.CurlType getCurl5() {
        return curl5;
    }


    /**
     * Sets the curl5 value for this MmultiscriptsType.
     * 
     * @param curl5
     */
    public void setCurl5(org.w3.www._1998.Math.MathML.CurlType curl5) {
        this.curl5 = curl5;
    }


    /**
     * Gets the laplacian5 value for this MmultiscriptsType.
     * 
     * @return laplacian5
     */
    public org.w3.www._1998.Math.MathML.LaplacianType getLaplacian5() {
        return laplacian5;
    }


    /**
     * Sets the laplacian5 value for this MmultiscriptsType.
     * 
     * @param laplacian5
     */
    public void setLaplacian5(org.w3.www._1998.Math.MathML.LaplacianType laplacian5) {
        this.laplacian5 = laplacian5;
    }


    /**
     * Gets the mean5 value for this MmultiscriptsType.
     * 
     * @return mean5
     */
    public org.w3.www._1998.Math.MathML.MeanType getMean5() {
        return mean5;
    }


    /**
     * Sets the mean5 value for this MmultiscriptsType.
     * 
     * @param mean5
     */
    public void setMean5(org.w3.www._1998.Math.MathML.MeanType mean5) {
        this.mean5 = mean5;
    }


    /**
     * Gets the sdev5 value for this MmultiscriptsType.
     * 
     * @return sdev5
     */
    public org.w3.www._1998.Math.MathML.SdevType getSdev5() {
        return sdev5;
    }


    /**
     * Sets the sdev5 value for this MmultiscriptsType.
     * 
     * @param sdev5
     */
    public void setSdev5(org.w3.www._1998.Math.MathML.SdevType sdev5) {
        this.sdev5 = sdev5;
    }


    /**
     * Gets the variance5 value for this MmultiscriptsType.
     * 
     * @return variance5
     */
    public org.w3.www._1998.Math.MathML.VarianceType getVariance5() {
        return variance5;
    }


    /**
     * Sets the variance5 value for this MmultiscriptsType.
     * 
     * @param variance5
     */
    public void setVariance5(org.w3.www._1998.Math.MathML.VarianceType variance5) {
        this.variance5 = variance5;
    }


    /**
     * Gets the median5 value for this MmultiscriptsType.
     * 
     * @return median5
     */
    public org.w3.www._1998.Math.MathML.MedianType getMedian5() {
        return median5;
    }


    /**
     * Sets the median5 value for this MmultiscriptsType.
     * 
     * @param median5
     */
    public void setMedian5(org.w3.www._1998.Math.MathML.MedianType median5) {
        this.median5 = median5;
    }


    /**
     * Gets the mode5 value for this MmultiscriptsType.
     * 
     * @return mode5
     */
    public org.w3.www._1998.Math.MathML.ModeType getMode5() {
        return mode5;
    }


    /**
     * Sets the mode5 value for this MmultiscriptsType.
     * 
     * @param mode5
     */
    public void setMode5(org.w3.www._1998.Math.MathML.ModeType mode5) {
        this.mode5 = mode5;
    }


    /**
     * Gets the moment5 value for this MmultiscriptsType.
     * 
     * @return moment5
     */
    public org.w3.www._1998.Math.MathML.MomentType getMoment5() {
        return moment5;
    }


    /**
     * Sets the moment5 value for this MmultiscriptsType.
     * 
     * @param moment5
     */
    public void setMoment5(org.w3.www._1998.Math.MathML.MomentType moment5) {
        this.moment5 = moment5;
    }


    /**
     * Gets the momentabout5 value for this MmultiscriptsType.
     * 
     * @return momentabout5
     */
    public org.w3.www._1998.Math.MathML.MomentaboutType getMomentabout5() {
        return momentabout5;
    }


    /**
     * Sets the momentabout5 value for this MmultiscriptsType.
     * 
     * @param momentabout5
     */
    public void setMomentabout5(org.w3.www._1998.Math.MathML.MomentaboutType momentabout5) {
        this.momentabout5 = momentabout5;
    }


    /**
     * Gets the apply5 value for this MmultiscriptsType.
     * 
     * @return apply5
     */
    public org.w3.www._1998.Math.MathML.ApplyType getApply5() {
        return apply5;
    }


    /**
     * Sets the apply5 value for this MmultiscriptsType.
     * 
     * @param apply5
     */
    public void setApply5(org.w3.www._1998.Math.MathML.ApplyType apply5) {
        this.apply5 = apply5;
    }


    /**
     * Gets the interval5 value for this MmultiscriptsType.
     * 
     * @return interval5
     */
    public org.w3.www._1998.Math.MathML.IntervalType getInterval5() {
        return interval5;
    }


    /**
     * Sets the interval5 value for this MmultiscriptsType.
     * 
     * @param interval5
     */
    public void setInterval5(org.w3.www._1998.Math.MathML.IntervalType interval5) {
        this.interval5 = interval5;
    }


    /**
     * Gets the inverse5 value for this MmultiscriptsType.
     * 
     * @return inverse5
     */
    public org.w3.www._1998.Math.MathML.InverseType getInverse5() {
        return inverse5;
    }


    /**
     * Sets the inverse5 value for this MmultiscriptsType.
     * 
     * @param inverse5
     */
    public void setInverse5(org.w3.www._1998.Math.MathML.InverseType inverse5) {
        this.inverse5 = inverse5;
    }


    /**
     * Gets the condition5 value for this MmultiscriptsType.
     * 
     * @return condition5
     */
    public org.w3.www._1998.Math.MathML.ConditionType getCondition5() {
        return condition5;
    }


    /**
     * Sets the condition5 value for this MmultiscriptsType.
     * 
     * @param condition5
     */
    public void setCondition5(org.w3.www._1998.Math.MathML.ConditionType condition5) {
        this.condition5 = condition5;
    }


    /**
     * Gets the declare5 value for this MmultiscriptsType.
     * 
     * @return declare5
     */
    public org.w3.www._1998.Math.MathML.DeclareType getDeclare5() {
        return declare5;
    }


    /**
     * Sets the declare5 value for this MmultiscriptsType.
     * 
     * @param declare5
     */
    public void setDeclare5(org.w3.www._1998.Math.MathML.DeclareType declare5) {
        this.declare5 = declare5;
    }


    /**
     * Gets the lambda5 value for this MmultiscriptsType.
     * 
     * @return lambda5
     */
    public org.w3.www._1998.Math.MathML.LambdaType getLambda5() {
        return lambda5;
    }


    /**
     * Sets the lambda5 value for this MmultiscriptsType.
     * 
     * @param lambda5
     */
    public void setLambda5(org.w3.www._1998.Math.MathML.LambdaType lambda5) {
        this.lambda5 = lambda5;
    }


    /**
     * Gets the piecewise5 value for this MmultiscriptsType.
     * 
     * @return piecewise5
     */
    public org.w3.www._1998.Math.MathML.PiecewiseType getPiecewise5() {
        return piecewise5;
    }


    /**
     * Sets the piecewise5 value for this MmultiscriptsType.
     * 
     * @param piecewise5
     */
    public void setPiecewise5(org.w3.www._1998.Math.MathML.PiecewiseType piecewise5) {
        this.piecewise5 = piecewise5;
    }


    /**
     * Gets the bvar5 value for this MmultiscriptsType.
     * 
     * @return bvar5
     */
    public org.w3.www._1998.Math.MathML.BvarType getBvar5() {
        return bvar5;
    }


    /**
     * Sets the bvar5 value for this MmultiscriptsType.
     * 
     * @param bvar5
     */
    public void setBvar5(org.w3.www._1998.Math.MathML.BvarType bvar5) {
        this.bvar5 = bvar5;
    }


    /**
     * Gets the degree5 value for this MmultiscriptsType.
     * 
     * @return degree5
     */
    public org.w3.www._1998.Math.MathML.DegreeType getDegree5() {
        return degree5;
    }


    /**
     * Sets the degree5 value for this MmultiscriptsType.
     * 
     * @param degree5
     */
    public void setDegree5(org.w3.www._1998.Math.MathML.DegreeType degree5) {
        this.degree5 = degree5;
    }


    /**
     * Gets the semantics5 value for this MmultiscriptsType.
     * 
     * @return semantics5
     */
    public org.w3.www._1998.Math.MathML.SemanticsType getSemantics5() {
        return semantics5;
    }


    /**
     * Sets the semantics5 value for this MmultiscriptsType.
     * 
     * @param semantics5
     */
    public void setSemantics5(org.w3.www._1998.Math.MathML.SemanticsType semantics5) {
        this.semantics5 = semantics5;
    }


    /**
     * Gets the none4 value for this MmultiscriptsType.
     * 
     * @return none4
     */
    public org.w3.www._1998.Math.MathML.NoneType getNone4() {
        return none4;
    }


    /**
     * Sets the none4 value for this MmultiscriptsType.
     * 
     * @param none4
     */
    public void setNone4(org.w3.www._1998.Math.MathML.NoneType none4) {
        this.none4 = none4;
    }


    /**
     * Gets the _class value for this MmultiscriptsType.
     * 
     * @return _class
     */
    public org.apache.axis.types.NMTokens get_class() {
        return _class;
    }


    /**
     * Sets the _class value for this MmultiscriptsType.
     * 
     * @param _class
     */
    public void set_class(org.apache.axis.types.NMTokens _class) {
        this._class = _class;
    }


    /**
     * Gets the style value for this MmultiscriptsType.
     * 
     * @return style
     */
    public java.lang.String getStyle() {
        return style;
    }


    /**
     * Sets the style value for this MmultiscriptsType.
     * 
     * @param style
     */
    public void setStyle(java.lang.String style) {
        this.style = style;
    }


    /**
     * Gets the xref value for this MmultiscriptsType.
     * 
     * @return xref
     */
    public org.apache.axis.types.IDRef getXref() {
        return xref;
    }


    /**
     * Sets the xref value for this MmultiscriptsType.
     * 
     * @param xref
     */
    public void setXref(org.apache.axis.types.IDRef xref) {
        this.xref = xref;
    }


    /**
     * Gets the id value for this MmultiscriptsType.
     * 
     * @return id
     */
    public org.apache.axis.types.Id getId() {
        return id;
    }


    /**
     * Sets the id value for this MmultiscriptsType.
     * 
     * @param id
     */
    public void setId(org.apache.axis.types.Id id) {
        this.id = id;
    }


    /**
     * Gets the href value for this MmultiscriptsType.
     * 
     * @return href
     */
    public java.lang.Object getHref() {
        return href;
    }


    /**
     * Sets the href value for this MmultiscriptsType.
     * 
     * @param href
     */
    public void setHref(java.lang.Object href) {
        this.href = href;
    }

    private java.lang.Object __equalsCalc = null;
    public synchronized boolean equals(java.lang.Object obj) {
        if (!(obj instanceof MmultiscriptsType)) return false;
        MmultiscriptsType other = (MmultiscriptsType) obj;
        if (obj == null) return false;
        if (this == obj) return true;
        if (__equalsCalc != null) {
            return (__equalsCalc == obj);
        }
        __equalsCalc = obj;
        boolean _equals;
        _equals = true && 
            ((this.mi==null && other.getMi()==null) || 
             (this.mi!=null &&
              this.mi.equals(other.getMi()))) &&
            ((this.mo==null && other.getMo()==null) || 
             (this.mo!=null &&
              this.mo.equals(other.getMo()))) &&
            ((this.mn==null && other.getMn()==null) || 
             (this.mn!=null &&
              this.mn.equals(other.getMn()))) &&
            ((this.mtext==null && other.getMtext()==null) || 
             (this.mtext!=null &&
              this.mtext.equals(other.getMtext()))) &&
            ((this.ms==null && other.getMs()==null) || 
             (this.ms!=null &&
              this.ms.equals(other.getMs()))) &&
            ((this.mrow==null && other.getMrow()==null) || 
             (this.mrow!=null &&
              this.mrow.equals(other.getMrow()))) &&
            ((this.mfrac==null && other.getMfrac()==null) || 
             (this.mfrac!=null &&
              this.mfrac.equals(other.getMfrac()))) &&
            ((this.msqrt==null && other.getMsqrt()==null) || 
             (this.msqrt!=null &&
              this.msqrt.equals(other.getMsqrt()))) &&
            ((this.mroot==null && other.getMroot()==null) || 
             (this.mroot!=null &&
              this.mroot.equals(other.getMroot()))) &&
            ((this.mpadded==null && other.getMpadded()==null) || 
             (this.mpadded!=null &&
              this.mpadded.equals(other.getMpadded()))) &&
            ((this.mphantom==null && other.getMphantom()==null) || 
             (this.mphantom!=null &&
              this.mphantom.equals(other.getMphantom()))) &&
            ((this.mfenced==null && other.getMfenced()==null) || 
             (this.mfenced!=null &&
              this.mfenced.equals(other.getMfenced()))) &&
            ((this.menclose==null && other.getMenclose()==null) || 
             (this.menclose!=null &&
              this.menclose.equals(other.getMenclose()))) &&
            ((this.msub==null && other.getMsub()==null) || 
             (this.msub!=null &&
              this.msub.equals(other.getMsub()))) &&
            ((this.msup==null && other.getMsup()==null) || 
             (this.msup!=null &&
              this.msup.equals(other.getMsup()))) &&
            ((this.msubsup==null && other.getMsubsup()==null) || 
             (this.msubsup!=null &&
              this.msubsup.equals(other.getMsubsup()))) &&
            ((this.munder==null && other.getMunder()==null) || 
             (this.munder!=null &&
              this.munder.equals(other.getMunder()))) &&
            ((this.mover==null && other.getMover()==null) || 
             (this.mover!=null &&
              this.mover.equals(other.getMover()))) &&
            ((this.munderover==null && other.getMunderover()==null) || 
             (this.munderover!=null &&
              this.munderover.equals(other.getMunderover()))) &&
            ((this.mmultiscripts==null && other.getMmultiscripts()==null) || 
             (this.mmultiscripts!=null &&
              this.mmultiscripts.equals(other.getMmultiscripts()))) &&
            ((this.mtable==null && other.getMtable()==null) || 
             (this.mtable!=null &&
              this.mtable.equals(other.getMtable()))) &&
            ((this.maligngroup==null && other.getMaligngroup()==null) || 
             (this.maligngroup!=null &&
              this.maligngroup.equals(other.getMaligngroup()))) &&
            ((this.malignmark==null && other.getMalignmark()==null) || 
             (this.malignmark!=null &&
              this.malignmark.equals(other.getMalignmark()))) &&
            ((this.mspace==null && other.getMspace()==null) || 
             (this.mspace!=null &&
              this.mspace.equals(other.getMspace()))) &&
            ((this.maction==null && other.getMaction()==null) || 
             (this.maction!=null &&
              this.maction.equals(other.getMaction()))) &&
            ((this.merror==null && other.getMerror()==null) || 
             (this.merror!=null &&
              this.merror.equals(other.getMerror()))) &&
            ((this.mstyle==null && other.getMstyle()==null) || 
             (this.mstyle!=null &&
              this.mstyle.equals(other.getMstyle()))) &&
            ((this.cn==null && other.getCn()==null) || 
             (this.cn!=null &&
              this.cn.equals(other.getCn()))) &&
            ((this.ci==null && other.getCi()==null) || 
             (this.ci!=null &&
              this.ci.equals(other.getCi()))) &&
            ((this.csymbol==null && other.getCsymbol()==null) || 
             (this.csymbol!=null &&
              this.csymbol.equals(other.getCsymbol()))) &&
            ((this.abs==null && other.getAbs()==null) || 
             (this.abs!=null &&
              this.abs.equals(other.getAbs()))) &&
            ((this.conjugate==null && other.getConjugate()==null) || 
             (this.conjugate!=null &&
              this.conjugate.equals(other.getConjugate()))) &&
            ((this.factorial==null && other.getFactorial()==null) || 
             (this.factorial!=null &&
              this.factorial.equals(other.getFactorial()))) &&
            ((this.arg==null && other.getArg()==null) || 
             (this.arg!=null &&
              this.arg.equals(other.getArg()))) &&
            ((this.real==null && other.getReal()==null) || 
             (this.real!=null &&
              this.real.equals(other.getReal()))) &&
            ((this.imaginary==null && other.getImaginary()==null) || 
             (this.imaginary!=null &&
              this.imaginary.equals(other.getImaginary()))) &&
            ((this.floor==null && other.getFloor()==null) || 
             (this.floor!=null &&
              this.floor.equals(other.getFloor()))) &&
            ((this.ceiling==null && other.getCeiling()==null) || 
             (this.ceiling!=null &&
              this.ceiling.equals(other.getCeiling()))) &&
            ((this.quotient==null && other.getQuotient()==null) || 
             (this.quotient!=null &&
              this.quotient.equals(other.getQuotient()))) &&
            ((this.divide==null && other.getDivide()==null) || 
             (this.divide!=null &&
              this.divide.equals(other.getDivide()))) &&
            ((this.rem==null && other.getRem()==null) || 
             (this.rem!=null &&
              this.rem.equals(other.getRem()))) &&
            ((this.minus==null && other.getMinus()==null) || 
             (this.minus!=null &&
              this.minus.equals(other.getMinus()))) &&
            ((this.plus==null && other.getPlus()==null) || 
             (this.plus!=null &&
              this.plus.equals(other.getPlus()))) &&
            ((this.times==null && other.getTimes()==null) || 
             (this.times!=null &&
              this.times.equals(other.getTimes()))) &&
            ((this.power==null && other.getPower()==null) || 
             (this.power!=null &&
              this.power.equals(other.getPower()))) &&
            ((this.root==null && other.getRoot()==null) || 
             (this.root!=null &&
              this.root.equals(other.getRoot()))) &&
            ((this.max==null && other.getMax()==null) || 
             (this.max!=null &&
              this.max.equals(other.getMax()))) &&
            ((this.min==null && other.getMin()==null) || 
             (this.min!=null &&
              this.min.equals(other.getMin()))) &&
            ((this.gcd==null && other.getGcd()==null) || 
             (this.gcd!=null &&
              this.gcd.equals(other.getGcd()))) &&
            ((this.lcm==null && other.getLcm()==null) || 
             (this.lcm!=null &&
              this.lcm.equals(other.getLcm()))) &&
            ((this.sum==null && other.getSum()==null) || 
             (this.sum!=null &&
              this.sum.equals(other.getSum()))) &&
            ((this.product==null && other.getProduct()==null) || 
             (this.product!=null &&
              this.product.equals(other.getProduct()))) &&
            ((this.compose==null && other.getCompose()==null) || 
             (this.compose!=null &&
              this.compose.equals(other.getCompose()))) &&
            ((this.domain==null && other.getDomain()==null) || 
             (this.domain!=null &&
              this.domain.equals(other.getDomain()))) &&
            ((this.codomain==null && other.getCodomain()==null) || 
             (this.codomain!=null &&
              this.codomain.equals(other.getCodomain()))) &&
            ((this.image==null && other.getImage()==null) || 
             (this.image!=null &&
              this.image.equals(other.getImage()))) &&
            ((this.domainofapplication==null && other.getDomainofapplication()==null) || 
             (this.domainofapplication!=null &&
              this.domainofapplication.equals(other.getDomainofapplication()))) &&
            ((this.ident==null && other.getIdent()==null) || 
             (this.ident!=null &&
              this.ident.equals(other.getIdent()))) &&
            ((this.and==null && other.getAnd()==null) || 
             (this.and!=null &&
              this.and.equals(other.getAnd()))) &&
            ((this.or==null && other.getOr()==null) || 
             (this.or!=null &&
              this.or.equals(other.getOr()))) &&
            ((this.xor==null && other.getXor()==null) || 
             (this.xor!=null &&
              this.xor.equals(other.getXor()))) &&
            ((this.not==null && other.getNot()==null) || 
             (this.not!=null &&
              this.not.equals(other.getNot()))) &&
            ((this.exists==null && other.getExists()==null) || 
             (this.exists!=null &&
              this.exists.equals(other.getExists()))) &&
            ((this.forall==null && other.getForall()==null) || 
             (this.forall!=null &&
              this.forall.equals(other.getForall()))) &&
            ((this.implies==null && other.getImplies()==null) || 
             (this.implies!=null &&
              this.implies.equals(other.getImplies()))) &&
            ((this.naturalnumbers==null && other.getNaturalnumbers()==null) || 
             (this.naturalnumbers!=null &&
              this.naturalnumbers.equals(other.getNaturalnumbers()))) &&
            ((this.primes==null && other.getPrimes()==null) || 
             (this.primes!=null &&
              this.primes.equals(other.getPrimes()))) &&
            ((this.integers==null && other.getIntegers()==null) || 
             (this.integers!=null &&
              this.integers.equals(other.getIntegers()))) &&
            ((this.rationals==null && other.getRationals()==null) || 
             (this.rationals!=null &&
              this.rationals.equals(other.getRationals()))) &&
            ((this.reals==null && other.getReals()==null) || 
             (this.reals!=null &&
              this.reals.equals(other.getReals()))) &&
            ((this.complexes==null && other.getComplexes()==null) || 
             (this.complexes!=null &&
              this.complexes.equals(other.getComplexes()))) &&
            ((this.emptyset==null && other.getEmptyset()==null) || 
             (this.emptyset!=null &&
              this.emptyset.equals(other.getEmptyset()))) &&
            ((this.exponentiale==null && other.getExponentiale()==null) || 
             (this.exponentiale!=null &&
              this.exponentiale.equals(other.getExponentiale()))) &&
            ((this.imaginaryi==null && other.getImaginaryi()==null) || 
             (this.imaginaryi!=null &&
              this.imaginaryi.equals(other.getImaginaryi()))) &&
            ((this.pi==null && other.getPi()==null) || 
             (this.pi!=null &&
              this.pi.equals(other.getPi()))) &&
            ((this.eulergamma==null && other.getEulergamma()==null) || 
             (this.eulergamma!=null &&
              this.eulergamma.equals(other.getEulergamma()))) &&
            ((this._true==null && other.get_true()==null) || 
             (this._true!=null &&
              this._true.equals(other.get_true()))) &&
            ((this._false==null && other.get_false()==null) || 
             (this._false!=null &&
              this._false.equals(other.get_false()))) &&
            ((this.infinity==null && other.getInfinity()==null) || 
             (this.infinity!=null &&
              this.infinity.equals(other.getInfinity()))) &&
            ((this.notanumber==null && other.getNotanumber()==null) || 
             (this.notanumber!=null &&
              this.notanumber.equals(other.getNotanumber()))) &&
            ((this.set==null && other.getSet()==null) || 
             (this.set!=null &&
              this.set.equals(other.getSet()))) &&
            ((this.list==null && other.getList()==null) || 
             (this.list!=null &&
              this.list.equals(other.getList()))) &&
            ((this.union==null && other.getUnion()==null) || 
             (this.union!=null &&
              this.union.equals(other.getUnion()))) &&
            ((this.intersect==null && other.getIntersect()==null) || 
             (this.intersect!=null &&
              this.intersect.equals(other.getIntersect()))) &&
            ((this.in==null && other.getIn()==null) || 
             (this.in!=null &&
              this.in.equals(other.getIn()))) &&
            ((this.notin==null && other.getNotin()==null) || 
             (this.notin!=null &&
              this.notin.equals(other.getNotin()))) &&
            ((this.subset==null && other.getSubset()==null) || 
             (this.subset!=null &&
              this.subset.equals(other.getSubset()))) &&
            ((this.prsubset==null && other.getPrsubset()==null) || 
             (this.prsubset!=null &&
              this.prsubset.equals(other.getPrsubset()))) &&
            ((this.notsubset==null && other.getNotsubset()==null) || 
             (this.notsubset!=null &&
              this.notsubset.equals(other.getNotsubset()))) &&
            ((this.notprsubset==null && other.getNotprsubset()==null) || 
             (this.notprsubset!=null &&
              this.notprsubset.equals(other.getNotprsubset()))) &&
            ((this.setdiff==null && other.getSetdiff()==null) || 
             (this.setdiff!=null &&
              this.setdiff.equals(other.getSetdiff()))) &&
            ((this.card==null && other.getCard()==null) || 
             (this.card!=null &&
              this.card.equals(other.getCard()))) &&
            ((this.cartesianproduct==null && other.getCartesianproduct()==null) || 
             (this.cartesianproduct!=null &&
              this.cartesianproduct.equals(other.getCartesianproduct()))) &&
            ((this.eq==null && other.getEq()==null) || 
             (this.eq!=null &&
              this.eq.equals(other.getEq()))) &&
            ((this.neq==null && other.getNeq()==null) || 
             (this.neq!=null &&
              this.neq.equals(other.getNeq()))) &&
            ((this.leq==null && other.getLeq()==null) || 
             (this.leq!=null &&
              this.leq.equals(other.getLeq()))) &&
            ((this.lt==null && other.getLt()==null) || 
             (this.lt!=null &&
              this.lt.equals(other.getLt()))) &&
            ((this.geq==null && other.getGeq()==null) || 
             (this.geq!=null &&
              this.geq.equals(other.getGeq()))) &&
            ((this.gt==null && other.getGt()==null) || 
             (this.gt!=null &&
              this.gt.equals(other.getGt()))) &&
            ((this.equivalent==null && other.getEquivalent()==null) || 
             (this.equivalent!=null &&
              this.equivalent.equals(other.getEquivalent()))) &&
            ((this.approx==null && other.getApprox()==null) || 
             (this.approx!=null &&
              this.approx.equals(other.getApprox()))) &&
            ((this.factorof==null && other.getFactorof()==null) || 
             (this.factorof!=null &&
              this.factorof.equals(other.getFactorof()))) &&
            ((this.exp==null && other.getExp()==null) || 
             (this.exp!=null &&
              this.exp.equals(other.getExp()))) &&
            ((this.ln==null && other.getLn()==null) || 
             (this.ln!=null &&
              this.ln.equals(other.getLn()))) &&
            ((this.log==null && other.getLog()==null) || 
             (this.log!=null &&
              this.log.equals(other.getLog()))) &&
            ((this.logbase==null && other.getLogbase()==null) || 
             (this.logbase!=null &&
              this.logbase.equals(other.getLogbase()))) &&
            ((this.sin==null && other.getSin()==null) || 
             (this.sin!=null &&
              this.sin.equals(other.getSin()))) &&
            ((this.cos==null && other.getCos()==null) || 
             (this.cos!=null &&
              this.cos.equals(other.getCos()))) &&
            ((this.tan==null && other.getTan()==null) || 
             (this.tan!=null &&
              this.tan.equals(other.getTan()))) &&
            ((this.sec==null && other.getSec()==null) || 
             (this.sec!=null &&
              this.sec.equals(other.getSec()))) &&
            ((this.csc==null && other.getCsc()==null) || 
             (this.csc!=null &&
              this.csc.equals(other.getCsc()))) &&
            ((this.cot==null && other.getCot()==null) || 
             (this.cot!=null &&
              this.cot.equals(other.getCot()))) &&
            ((this.arcsin==null && other.getArcsin()==null) || 
             (this.arcsin!=null &&
              this.arcsin.equals(other.getArcsin()))) &&
            ((this.arccos==null && other.getArccos()==null) || 
             (this.arccos!=null &&
              this.arccos.equals(other.getArccos()))) &&
            ((this.arctan==null && other.getArctan()==null) || 
             (this.arctan!=null &&
              this.arctan.equals(other.getArctan()))) &&
            ((this.arcsec==null && other.getArcsec()==null) || 
             (this.arcsec!=null &&
              this.arcsec.equals(other.getArcsec()))) &&
            ((this.arccsc==null && other.getArccsc()==null) || 
             (this.arccsc!=null &&
              this.arccsc.equals(other.getArccsc()))) &&
            ((this.arccot==null && other.getArccot()==null) || 
             (this.arccot!=null &&
              this.arccot.equals(other.getArccot()))) &&
            ((this.sinh==null && other.getSinh()==null) || 
             (this.sinh!=null &&
              this.sinh.equals(other.getSinh()))) &&
            ((this.cosh==null && other.getCosh()==null) || 
             (this.cosh!=null &&
              this.cosh.equals(other.getCosh()))) &&
            ((this.tanh==null && other.getTanh()==null) || 
             (this.tanh!=null &&
              this.tanh.equals(other.getTanh()))) &&
            ((this.sech==null && other.getSech()==null) || 
             (this.sech!=null &&
              this.sech.equals(other.getSech()))) &&
            ((this.csch==null && other.getCsch()==null) || 
             (this.csch!=null &&
              this.csch.equals(other.getCsch()))) &&
            ((this.coth==null && other.getCoth()==null) || 
             (this.coth!=null &&
              this.coth.equals(other.getCoth()))) &&
            ((this.arccosh==null && other.getArccosh()==null) || 
             (this.arccosh!=null &&
              this.arccosh.equals(other.getArccosh()))) &&
            ((this.arccoth==null && other.getArccoth()==null) || 
             (this.arccoth!=null &&
              this.arccoth.equals(other.getArccoth()))) &&
            ((this.arccsch==null && other.getArccsch()==null) || 
             (this.arccsch!=null &&
              this.arccsch.equals(other.getArccsch()))) &&
            ((this.arcsech==null && other.getArcsech()==null) || 
             (this.arcsech!=null &&
              this.arcsech.equals(other.getArcsech()))) &&
            ((this.arcsinh==null && other.getArcsinh()==null) || 
             (this.arcsinh!=null &&
              this.arcsinh.equals(other.getArcsinh()))) &&
            ((this.arctanh==null && other.getArctanh()==null) || 
             (this.arctanh!=null &&
              this.arctanh.equals(other.getArctanh()))) &&
            ((this._int==null && other.get_int()==null) || 
             (this._int!=null &&
              this._int.equals(other.get_int()))) &&
            ((this.diff==null && other.getDiff()==null) || 
             (this.diff!=null &&
              this.diff.equals(other.getDiff()))) &&
            ((this.partialdiff==null && other.getPartialdiff()==null) || 
             (this.partialdiff!=null &&
              this.partialdiff.equals(other.getPartialdiff()))) &&
            ((this.limit==null && other.getLimit()==null) || 
             (this.limit!=null &&
              this.limit.equals(other.getLimit()))) &&
            ((this.lowlimit==null && other.getLowlimit()==null) || 
             (this.lowlimit!=null &&
              this.lowlimit.equals(other.getLowlimit()))) &&
            ((this.uplimit==null && other.getUplimit()==null) || 
             (this.uplimit!=null &&
              this.uplimit.equals(other.getUplimit()))) &&
            ((this.tendsto==null && other.getTendsto()==null) || 
             (this.tendsto!=null &&
              this.tendsto.equals(other.getTendsto()))) &&
            ((this.vector==null && other.getVector()==null) || 
             (this.vector!=null &&
              this.vector.equals(other.getVector()))) &&
            ((this.matrix==null && other.getMatrix()==null) || 
             (this.matrix!=null &&
              this.matrix.equals(other.getMatrix()))) &&
            ((this.determinant==null && other.getDeterminant()==null) || 
             (this.determinant!=null &&
              this.determinant.equals(other.getDeterminant()))) &&
            ((this.transpose==null && other.getTranspose()==null) || 
             (this.transpose!=null &&
              this.transpose.equals(other.getTranspose()))) &&
            ((this.selector==null && other.getSelector()==null) || 
             (this.selector!=null &&
              this.selector.equals(other.getSelector()))) &&
            ((this.vectorproduct==null && other.getVectorproduct()==null) || 
             (this.vectorproduct!=null &&
              this.vectorproduct.equals(other.getVectorproduct()))) &&
            ((this.scalarproduct==null && other.getScalarproduct()==null) || 
             (this.scalarproduct!=null &&
              this.scalarproduct.equals(other.getScalarproduct()))) &&
            ((this.outerproduct==null && other.getOuterproduct()==null) || 
             (this.outerproduct!=null &&
              this.outerproduct.equals(other.getOuterproduct()))) &&
            ((this.divergence==null && other.getDivergence()==null) || 
             (this.divergence!=null &&
              this.divergence.equals(other.getDivergence()))) &&
            ((this.grad==null && other.getGrad()==null) || 
             (this.grad!=null &&
              this.grad.equals(other.getGrad()))) &&
            ((this.curl==null && other.getCurl()==null) || 
             (this.curl!=null &&
              this.curl.equals(other.getCurl()))) &&
            ((this.laplacian==null && other.getLaplacian()==null) || 
             (this.laplacian!=null &&
              this.laplacian.equals(other.getLaplacian()))) &&
            ((this.mean==null && other.getMean()==null) || 
             (this.mean!=null &&
              this.mean.equals(other.getMean()))) &&
            ((this.sdev==null && other.getSdev()==null) || 
             (this.sdev!=null &&
              this.sdev.equals(other.getSdev()))) &&
            ((this.variance==null && other.getVariance()==null) || 
             (this.variance!=null &&
              this.variance.equals(other.getVariance()))) &&
            ((this.median==null && other.getMedian()==null) || 
             (this.median!=null &&
              this.median.equals(other.getMedian()))) &&
            ((this.mode==null && other.getMode()==null) || 
             (this.mode!=null &&
              this.mode.equals(other.getMode()))) &&
            ((this.moment==null && other.getMoment()==null) || 
             (this.moment!=null &&
              this.moment.equals(other.getMoment()))) &&
            ((this.momentabout==null && other.getMomentabout()==null) || 
             (this.momentabout!=null &&
              this.momentabout.equals(other.getMomentabout()))) &&
            ((this.apply==null && other.getApply()==null) || 
             (this.apply!=null &&
              this.apply.equals(other.getApply()))) &&
            ((this.interval==null && other.getInterval()==null) || 
             (this.interval!=null &&
              this.interval.equals(other.getInterval()))) &&
            ((this.inverse==null && other.getInverse()==null) || 
             (this.inverse!=null &&
              this.inverse.equals(other.getInverse()))) &&
            ((this.condition==null && other.getCondition()==null) || 
             (this.condition!=null &&
              this.condition.equals(other.getCondition()))) &&
            ((this.declare==null && other.getDeclare()==null) || 
             (this.declare!=null &&
              this.declare.equals(other.getDeclare()))) &&
            ((this.lambda==null && other.getLambda()==null) || 
             (this.lambda!=null &&
              this.lambda.equals(other.getLambda()))) &&
            ((this.piecewise==null && other.getPiecewise()==null) || 
             (this.piecewise!=null &&
              this.piecewise.equals(other.getPiecewise()))) &&
            ((this.bvar==null && other.getBvar()==null) || 
             (this.bvar!=null &&
              this.bvar.equals(other.getBvar()))) &&
            ((this.degree==null && other.getDegree()==null) || 
             (this.degree!=null &&
              this.degree.equals(other.getDegree()))) &&
            ((this.semantics==null && other.getSemantics()==null) || 
             (this.semantics!=null &&
              this.semantics.equals(other.getSemantics()))) &&
            ((this.mi2==null && other.getMi2()==null) || 
             (this.mi2!=null &&
              this.mi2.equals(other.getMi2()))) &&
            ((this.mo2==null && other.getMo2()==null) || 
             (this.mo2!=null &&
              this.mo2.equals(other.getMo2()))) &&
            ((this.mn2==null && other.getMn2()==null) || 
             (this.mn2!=null &&
              this.mn2.equals(other.getMn2()))) &&
            ((this.mtext2==null && other.getMtext2()==null) || 
             (this.mtext2!=null &&
              this.mtext2.equals(other.getMtext2()))) &&
            ((this.ms2==null && other.getMs2()==null) || 
             (this.ms2!=null &&
              this.ms2.equals(other.getMs2()))) &&
            ((this.mrow2==null && other.getMrow2()==null) || 
             (this.mrow2!=null &&
              this.mrow2.equals(other.getMrow2()))) &&
            ((this.mfrac2==null && other.getMfrac2()==null) || 
             (this.mfrac2!=null &&
              this.mfrac2.equals(other.getMfrac2()))) &&
            ((this.msqrt2==null && other.getMsqrt2()==null) || 
             (this.msqrt2!=null &&
              this.msqrt2.equals(other.getMsqrt2()))) &&
            ((this.mroot2==null && other.getMroot2()==null) || 
             (this.mroot2!=null &&
              this.mroot2.equals(other.getMroot2()))) &&
            ((this.mpadded2==null && other.getMpadded2()==null) || 
             (this.mpadded2!=null &&
              this.mpadded2.equals(other.getMpadded2()))) &&
            ((this.mphantom2==null && other.getMphantom2()==null) || 
             (this.mphantom2!=null &&
              this.mphantom2.equals(other.getMphantom2()))) &&
            ((this.mfenced2==null && other.getMfenced2()==null) || 
             (this.mfenced2!=null &&
              this.mfenced2.equals(other.getMfenced2()))) &&
            ((this.menclose2==null && other.getMenclose2()==null) || 
             (this.menclose2!=null &&
              this.menclose2.equals(other.getMenclose2()))) &&
            ((this.msub2==null && other.getMsub2()==null) || 
             (this.msub2!=null &&
              this.msub2.equals(other.getMsub2()))) &&
            ((this.msup2==null && other.getMsup2()==null) || 
             (this.msup2!=null &&
              this.msup2.equals(other.getMsup2()))) &&
            ((this.msubsup2==null && other.getMsubsup2()==null) || 
             (this.msubsup2!=null &&
              this.msubsup2.equals(other.getMsubsup2()))) &&
            ((this.munder2==null && other.getMunder2()==null) || 
             (this.munder2!=null &&
              this.munder2.equals(other.getMunder2()))) &&
            ((this.mover2==null && other.getMover2()==null) || 
             (this.mover2!=null &&
              this.mover2.equals(other.getMover2()))) &&
            ((this.munderover2==null && other.getMunderover2()==null) || 
             (this.munderover2!=null &&
              this.munderover2.equals(other.getMunderover2()))) &&
            ((this.mmultiscripts2==null && other.getMmultiscripts2()==null) || 
             (this.mmultiscripts2!=null &&
              this.mmultiscripts2.equals(other.getMmultiscripts2()))) &&
            ((this.mtable2==null && other.getMtable2()==null) || 
             (this.mtable2!=null &&
              this.mtable2.equals(other.getMtable2()))) &&
            ((this.maligngroup2==null && other.getMaligngroup2()==null) || 
             (this.maligngroup2!=null &&
              this.maligngroup2.equals(other.getMaligngroup2()))) &&
            ((this.malignmark2==null && other.getMalignmark2()==null) || 
             (this.malignmark2!=null &&
              this.malignmark2.equals(other.getMalignmark2()))) &&
            ((this.mspace2==null && other.getMspace2()==null) || 
             (this.mspace2!=null &&
              this.mspace2.equals(other.getMspace2()))) &&
            ((this.maction2==null && other.getMaction2()==null) || 
             (this.maction2!=null &&
              this.maction2.equals(other.getMaction2()))) &&
            ((this.merror2==null && other.getMerror2()==null) || 
             (this.merror2!=null &&
              this.merror2.equals(other.getMerror2()))) &&
            ((this.mstyle2==null && other.getMstyle2()==null) || 
             (this.mstyle2!=null &&
              this.mstyle2.equals(other.getMstyle2()))) &&
            ((this.cn2==null && other.getCn2()==null) || 
             (this.cn2!=null &&
              this.cn2.equals(other.getCn2()))) &&
            ((this.ci2==null && other.getCi2()==null) || 
             (this.ci2!=null &&
              this.ci2.equals(other.getCi2()))) &&
            ((this.csymbol2==null && other.getCsymbol2()==null) || 
             (this.csymbol2!=null &&
              this.csymbol2.equals(other.getCsymbol2()))) &&
            ((this.abs2==null && other.getAbs2()==null) || 
             (this.abs2!=null &&
              this.abs2.equals(other.getAbs2()))) &&
            ((this.conjugate2==null && other.getConjugate2()==null) || 
             (this.conjugate2!=null &&
              this.conjugate2.equals(other.getConjugate2()))) &&
            ((this.factorial2==null && other.getFactorial2()==null) || 
             (this.factorial2!=null &&
              this.factorial2.equals(other.getFactorial2()))) &&
            ((this.arg2==null && other.getArg2()==null) || 
             (this.arg2!=null &&
              this.arg2.equals(other.getArg2()))) &&
            ((this.real2==null && other.getReal2()==null) || 
             (this.real2!=null &&
              this.real2.equals(other.getReal2()))) &&
            ((this.imaginary2==null && other.getImaginary2()==null) || 
             (this.imaginary2!=null &&
              this.imaginary2.equals(other.getImaginary2()))) &&
            ((this.floor2==null && other.getFloor2()==null) || 
             (this.floor2!=null &&
              this.floor2.equals(other.getFloor2()))) &&
            ((this.ceiling2==null && other.getCeiling2()==null) || 
             (this.ceiling2!=null &&
              this.ceiling2.equals(other.getCeiling2()))) &&
            ((this.quotient2==null && other.getQuotient2()==null) || 
             (this.quotient2!=null &&
              this.quotient2.equals(other.getQuotient2()))) &&
            ((this.divide2==null && other.getDivide2()==null) || 
             (this.divide2!=null &&
              this.divide2.equals(other.getDivide2()))) &&
            ((this.rem2==null && other.getRem2()==null) || 
             (this.rem2!=null &&
              this.rem2.equals(other.getRem2()))) &&
            ((this.minus2==null && other.getMinus2()==null) || 
             (this.minus2!=null &&
              this.minus2.equals(other.getMinus2()))) &&
            ((this.plus2==null && other.getPlus2()==null) || 
             (this.plus2!=null &&
              this.plus2.equals(other.getPlus2()))) &&
            ((this.times2==null && other.getTimes2()==null) || 
             (this.times2!=null &&
              this.times2.equals(other.getTimes2()))) &&
            ((this.power2==null && other.getPower2()==null) || 
             (this.power2!=null &&
              this.power2.equals(other.getPower2()))) &&
            ((this.root2==null && other.getRoot2()==null) || 
             (this.root2!=null &&
              this.root2.equals(other.getRoot2()))) &&
            ((this.max2==null && other.getMax2()==null) || 
             (this.max2!=null &&
              this.max2.equals(other.getMax2()))) &&
            ((this.min2==null && other.getMin2()==null) || 
             (this.min2!=null &&
              this.min2.equals(other.getMin2()))) &&
            ((this.gcd2==null && other.getGcd2()==null) || 
             (this.gcd2!=null &&
              this.gcd2.equals(other.getGcd2()))) &&
            ((this.lcm2==null && other.getLcm2()==null) || 
             (this.lcm2!=null &&
              this.lcm2.equals(other.getLcm2()))) &&
            ((this.sum2==null && other.getSum2()==null) || 
             (this.sum2!=null &&
              this.sum2.equals(other.getSum2()))) &&
            ((this.product2==null && other.getProduct2()==null) || 
             (this.product2!=null &&
              this.product2.equals(other.getProduct2()))) &&
            ((this.compose2==null && other.getCompose2()==null) || 
             (this.compose2!=null &&
              this.compose2.equals(other.getCompose2()))) &&
            ((this.domain2==null && other.getDomain2()==null) || 
             (this.domain2!=null &&
              this.domain2.equals(other.getDomain2()))) &&
            ((this.codomain2==null && other.getCodomain2()==null) || 
             (this.codomain2!=null &&
              this.codomain2.equals(other.getCodomain2()))) &&
            ((this.image2==null && other.getImage2()==null) || 
             (this.image2!=null &&
              this.image2.equals(other.getImage2()))) &&
            ((this.domainofapplication2==null && other.getDomainofapplication2()==null) || 
             (this.domainofapplication2!=null &&
              this.domainofapplication2.equals(other.getDomainofapplication2()))) &&
            ((this.ident2==null && other.getIdent2()==null) || 
             (this.ident2!=null &&
              this.ident2.equals(other.getIdent2()))) &&
            ((this.and2==null && other.getAnd2()==null) || 
             (this.and2!=null &&
              this.and2.equals(other.getAnd2()))) &&
            ((this.or2==null && other.getOr2()==null) || 
             (this.or2!=null &&
              this.or2.equals(other.getOr2()))) &&
            ((this.xor2==null && other.getXor2()==null) || 
             (this.xor2!=null &&
              this.xor2.equals(other.getXor2()))) &&
            ((this.not2==null && other.getNot2()==null) || 
             (this.not2!=null &&
              this.not2.equals(other.getNot2()))) &&
            ((this.exists2==null && other.getExists2()==null) || 
             (this.exists2!=null &&
              this.exists2.equals(other.getExists2()))) &&
            ((this.forall2==null && other.getForall2()==null) || 
             (this.forall2!=null &&
              this.forall2.equals(other.getForall2()))) &&
            ((this.implies2==null && other.getImplies2()==null) || 
             (this.implies2!=null &&
              this.implies2.equals(other.getImplies2()))) &&
            ((this.naturalnumbers2==null && other.getNaturalnumbers2()==null) || 
             (this.naturalnumbers2!=null &&
              this.naturalnumbers2.equals(other.getNaturalnumbers2()))) &&
            ((this.primes2==null && other.getPrimes2()==null) || 
             (this.primes2!=null &&
              this.primes2.equals(other.getPrimes2()))) &&
            ((this.integers2==null && other.getIntegers2()==null) || 
             (this.integers2!=null &&
              this.integers2.equals(other.getIntegers2()))) &&
            ((this.rationals2==null && other.getRationals2()==null) || 
             (this.rationals2!=null &&
              this.rationals2.equals(other.getRationals2()))) &&
            ((this.reals2==null && other.getReals2()==null) || 
             (this.reals2!=null &&
              this.reals2.equals(other.getReals2()))) &&
            ((this.complexes2==null && other.getComplexes2()==null) || 
             (this.complexes2!=null &&
              this.complexes2.equals(other.getComplexes2()))) &&
            ((this.emptyset2==null && other.getEmptyset2()==null) || 
             (this.emptyset2!=null &&
              this.emptyset2.equals(other.getEmptyset2()))) &&
            ((this.exponentiale2==null && other.getExponentiale2()==null) || 
             (this.exponentiale2!=null &&
              this.exponentiale2.equals(other.getExponentiale2()))) &&
            ((this.imaginaryi2==null && other.getImaginaryi2()==null) || 
             (this.imaginaryi2!=null &&
              this.imaginaryi2.equals(other.getImaginaryi2()))) &&
            ((this.pi2==null && other.getPi2()==null) || 
             (this.pi2!=null &&
              this.pi2.equals(other.getPi2()))) &&
            ((this.eulergamma2==null && other.getEulergamma2()==null) || 
             (this.eulergamma2!=null &&
              this.eulergamma2.equals(other.getEulergamma2()))) &&
            ((this._true2==null && other.get_true2()==null) || 
             (this._true2!=null &&
              this._true2.equals(other.get_true2()))) &&
            ((this._false2==null && other.get_false2()==null) || 
             (this._false2!=null &&
              this._false2.equals(other.get_false2()))) &&
            ((this.infinity2==null && other.getInfinity2()==null) || 
             (this.infinity2!=null &&
              this.infinity2.equals(other.getInfinity2()))) &&
            ((this.notanumber2==null && other.getNotanumber2()==null) || 
             (this.notanumber2!=null &&
              this.notanumber2.equals(other.getNotanumber2()))) &&
            ((this.set2==null && other.getSet2()==null) || 
             (this.set2!=null &&
              this.set2.equals(other.getSet2()))) &&
            ((this.list2==null && other.getList2()==null) || 
             (this.list2!=null &&
              this.list2.equals(other.getList2()))) &&
            ((this.union2==null && other.getUnion2()==null) || 
             (this.union2!=null &&
              this.union2.equals(other.getUnion2()))) &&
            ((this.intersect2==null && other.getIntersect2()==null) || 
             (this.intersect2!=null &&
              this.intersect2.equals(other.getIntersect2()))) &&
            ((this.in2==null && other.getIn2()==null) || 
             (this.in2!=null &&
              this.in2.equals(other.getIn2()))) &&
            ((this.notin2==null && other.getNotin2()==null) || 
             (this.notin2!=null &&
              this.notin2.equals(other.getNotin2()))) &&
            ((this.subset2==null && other.getSubset2()==null) || 
             (this.subset2!=null &&
              this.subset2.equals(other.getSubset2()))) &&
            ((this.prsubset2==null && other.getPrsubset2()==null) || 
             (this.prsubset2!=null &&
              this.prsubset2.equals(other.getPrsubset2()))) &&
            ((this.notsubset2==null && other.getNotsubset2()==null) || 
             (this.notsubset2!=null &&
              this.notsubset2.equals(other.getNotsubset2()))) &&
            ((this.notprsubset2==null && other.getNotprsubset2()==null) || 
             (this.notprsubset2!=null &&
              this.notprsubset2.equals(other.getNotprsubset2()))) &&
            ((this.setdiff2==null && other.getSetdiff2()==null) || 
             (this.setdiff2!=null &&
              this.setdiff2.equals(other.getSetdiff2()))) &&
            ((this.card2==null && other.getCard2()==null) || 
             (this.card2!=null &&
              this.card2.equals(other.getCard2()))) &&
            ((this.cartesianproduct2==null && other.getCartesianproduct2()==null) || 
             (this.cartesianproduct2!=null &&
              this.cartesianproduct2.equals(other.getCartesianproduct2()))) &&
            ((this.eq2==null && other.getEq2()==null) || 
             (this.eq2!=null &&
              this.eq2.equals(other.getEq2()))) &&
            ((this.neq2==null && other.getNeq2()==null) || 
             (this.neq2!=null &&
              this.neq2.equals(other.getNeq2()))) &&
            ((this.leq2==null && other.getLeq2()==null) || 
             (this.leq2!=null &&
              this.leq2.equals(other.getLeq2()))) &&
            ((this.lt2==null && other.getLt2()==null) || 
             (this.lt2!=null &&
              this.lt2.equals(other.getLt2()))) &&
            ((this.geq2==null && other.getGeq2()==null) || 
             (this.geq2!=null &&
              this.geq2.equals(other.getGeq2()))) &&
            ((this.gt2==null && other.getGt2()==null) || 
             (this.gt2!=null &&
              this.gt2.equals(other.getGt2()))) &&
            ((this.equivalent2==null && other.getEquivalent2()==null) || 
             (this.equivalent2!=null &&
              this.equivalent2.equals(other.getEquivalent2()))) &&
            ((this.approx2==null && other.getApprox2()==null) || 
             (this.approx2!=null &&
              this.approx2.equals(other.getApprox2()))) &&
            ((this.factorof2==null && other.getFactorof2()==null) || 
             (this.factorof2!=null &&
              this.factorof2.equals(other.getFactorof2()))) &&
            ((this.exp2==null && other.getExp2()==null) || 
             (this.exp2!=null &&
              this.exp2.equals(other.getExp2()))) &&
            ((this.ln2==null && other.getLn2()==null) || 
             (this.ln2!=null &&
              this.ln2.equals(other.getLn2()))) &&
            ((this.log2==null && other.getLog2()==null) || 
             (this.log2!=null &&
              this.log2.equals(other.getLog2()))) &&
            ((this.logbase2==null && other.getLogbase2()==null) || 
             (this.logbase2!=null &&
              this.logbase2.equals(other.getLogbase2()))) &&
            ((this.sin2==null && other.getSin2()==null) || 
             (this.sin2!=null &&
              this.sin2.equals(other.getSin2()))) &&
            ((this.cos2==null && other.getCos2()==null) || 
             (this.cos2!=null &&
              this.cos2.equals(other.getCos2()))) &&
            ((this.tan2==null && other.getTan2()==null) || 
             (this.tan2!=null &&
              this.tan2.equals(other.getTan2()))) &&
            ((this.sec2==null && other.getSec2()==null) || 
             (this.sec2!=null &&
              this.sec2.equals(other.getSec2()))) &&
            ((this.csc2==null && other.getCsc2()==null) || 
             (this.csc2!=null &&
              this.csc2.equals(other.getCsc2()))) &&
            ((this.cot2==null && other.getCot2()==null) || 
             (this.cot2!=null &&
              this.cot2.equals(other.getCot2()))) &&
            ((this.arcsin2==null && other.getArcsin2()==null) || 
             (this.arcsin2!=null &&
              this.arcsin2.equals(other.getArcsin2()))) &&
            ((this.arccos2==null && other.getArccos2()==null) || 
             (this.arccos2!=null &&
              this.arccos2.equals(other.getArccos2()))) &&
            ((this.arctan2==null && other.getArctan2()==null) || 
             (this.arctan2!=null &&
              this.arctan2.equals(other.getArctan2()))) &&
            ((this.arcsec2==null && other.getArcsec2()==null) || 
             (this.arcsec2!=null &&
              this.arcsec2.equals(other.getArcsec2()))) &&
            ((this.arccsc2==null && other.getArccsc2()==null) || 
             (this.arccsc2!=null &&
              this.arccsc2.equals(other.getArccsc2()))) &&
            ((this.arccot2==null && other.getArccot2()==null) || 
             (this.arccot2!=null &&
              this.arccot2.equals(other.getArccot2()))) &&
            ((this.sinh2==null && other.getSinh2()==null) || 
             (this.sinh2!=null &&
              this.sinh2.equals(other.getSinh2()))) &&
            ((this.cosh2==null && other.getCosh2()==null) || 
             (this.cosh2!=null &&
              this.cosh2.equals(other.getCosh2()))) &&
            ((this.tanh2==null && other.getTanh2()==null) || 
             (this.tanh2!=null &&
              this.tanh2.equals(other.getTanh2()))) &&
            ((this.sech2==null && other.getSech2()==null) || 
             (this.sech2!=null &&
              this.sech2.equals(other.getSech2()))) &&
            ((this.csch2==null && other.getCsch2()==null) || 
             (this.csch2!=null &&
              this.csch2.equals(other.getCsch2()))) &&
            ((this.coth2==null && other.getCoth2()==null) || 
             (this.coth2!=null &&
              this.coth2.equals(other.getCoth2()))) &&
            ((this.arccosh2==null && other.getArccosh2()==null) || 
             (this.arccosh2!=null &&
              this.arccosh2.equals(other.getArccosh2()))) &&
            ((this.arccoth2==null && other.getArccoth2()==null) || 
             (this.arccoth2!=null &&
              this.arccoth2.equals(other.getArccoth2()))) &&
            ((this.arccsch2==null && other.getArccsch2()==null) || 
             (this.arccsch2!=null &&
              this.arccsch2.equals(other.getArccsch2()))) &&
            ((this.arcsech2==null && other.getArcsech2()==null) || 
             (this.arcsech2!=null &&
              this.arcsech2.equals(other.getArcsech2()))) &&
            ((this.arcsinh2==null && other.getArcsinh2()==null) || 
             (this.arcsinh2!=null &&
              this.arcsinh2.equals(other.getArcsinh2()))) &&
            ((this.arctanh2==null && other.getArctanh2()==null) || 
             (this.arctanh2!=null &&
              this.arctanh2.equals(other.getArctanh2()))) &&
            ((this._int2==null && other.get_int2()==null) || 
             (this._int2!=null &&
              this._int2.equals(other.get_int2()))) &&
            ((this.diff2==null && other.getDiff2()==null) || 
             (this.diff2!=null &&
              this.diff2.equals(other.getDiff2()))) &&
            ((this.partialdiff2==null && other.getPartialdiff2()==null) || 
             (this.partialdiff2!=null &&
              this.partialdiff2.equals(other.getPartialdiff2()))) &&
            ((this.limit2==null && other.getLimit2()==null) || 
             (this.limit2!=null &&
              this.limit2.equals(other.getLimit2()))) &&
            ((this.lowlimit2==null && other.getLowlimit2()==null) || 
             (this.lowlimit2!=null &&
              this.lowlimit2.equals(other.getLowlimit2()))) &&
            ((this.uplimit2==null && other.getUplimit2()==null) || 
             (this.uplimit2!=null &&
              this.uplimit2.equals(other.getUplimit2()))) &&
            ((this.tendsto2==null && other.getTendsto2()==null) || 
             (this.tendsto2!=null &&
              this.tendsto2.equals(other.getTendsto2()))) &&
            ((this.vector2==null && other.getVector2()==null) || 
             (this.vector2!=null &&
              this.vector2.equals(other.getVector2()))) &&
            ((this.matrix2==null && other.getMatrix2()==null) || 
             (this.matrix2!=null &&
              this.matrix2.equals(other.getMatrix2()))) &&
            ((this.determinant2==null && other.getDeterminant2()==null) || 
             (this.determinant2!=null &&
              this.determinant2.equals(other.getDeterminant2()))) &&
            ((this.transpose2==null && other.getTranspose2()==null) || 
             (this.transpose2!=null &&
              this.transpose2.equals(other.getTranspose2()))) &&
            ((this.selector2==null && other.getSelector2()==null) || 
             (this.selector2!=null &&
              this.selector2.equals(other.getSelector2()))) &&
            ((this.vectorproduct2==null && other.getVectorproduct2()==null) || 
             (this.vectorproduct2!=null &&
              this.vectorproduct2.equals(other.getVectorproduct2()))) &&
            ((this.scalarproduct2==null && other.getScalarproduct2()==null) || 
             (this.scalarproduct2!=null &&
              this.scalarproduct2.equals(other.getScalarproduct2()))) &&
            ((this.outerproduct2==null && other.getOuterproduct2()==null) || 
             (this.outerproduct2!=null &&
              this.outerproduct2.equals(other.getOuterproduct2()))) &&
            ((this.divergence2==null && other.getDivergence2()==null) || 
             (this.divergence2!=null &&
              this.divergence2.equals(other.getDivergence2()))) &&
            ((this.grad2==null && other.getGrad2()==null) || 
             (this.grad2!=null &&
              this.grad2.equals(other.getGrad2()))) &&
            ((this.curl2==null && other.getCurl2()==null) || 
             (this.curl2!=null &&
              this.curl2.equals(other.getCurl2()))) &&
            ((this.laplacian2==null && other.getLaplacian2()==null) || 
             (this.laplacian2!=null &&
              this.laplacian2.equals(other.getLaplacian2()))) &&
            ((this.mean2==null && other.getMean2()==null) || 
             (this.mean2!=null &&
              this.mean2.equals(other.getMean2()))) &&
            ((this.sdev2==null && other.getSdev2()==null) || 
             (this.sdev2!=null &&
              this.sdev2.equals(other.getSdev2()))) &&
            ((this.variance2==null && other.getVariance2()==null) || 
             (this.variance2!=null &&
              this.variance2.equals(other.getVariance2()))) &&
            ((this.median2==null && other.getMedian2()==null) || 
             (this.median2!=null &&
              this.median2.equals(other.getMedian2()))) &&
            ((this.mode2==null && other.getMode2()==null) || 
             (this.mode2!=null &&
              this.mode2.equals(other.getMode2()))) &&
            ((this.moment2==null && other.getMoment2()==null) || 
             (this.moment2!=null &&
              this.moment2.equals(other.getMoment2()))) &&
            ((this.momentabout2==null && other.getMomentabout2()==null) || 
             (this.momentabout2!=null &&
              this.momentabout2.equals(other.getMomentabout2()))) &&
            ((this.apply2==null && other.getApply2()==null) || 
             (this.apply2!=null &&
              this.apply2.equals(other.getApply2()))) &&
            ((this.interval2==null && other.getInterval2()==null) || 
             (this.interval2!=null &&
              this.interval2.equals(other.getInterval2()))) &&
            ((this.inverse2==null && other.getInverse2()==null) || 
             (this.inverse2!=null &&
              this.inverse2.equals(other.getInverse2()))) &&
            ((this.condition2==null && other.getCondition2()==null) || 
             (this.condition2!=null &&
              this.condition2.equals(other.getCondition2()))) &&
            ((this.declare2==null && other.getDeclare2()==null) || 
             (this.declare2!=null &&
              this.declare2.equals(other.getDeclare2()))) &&
            ((this.lambda2==null && other.getLambda2()==null) || 
             (this.lambda2!=null &&
              this.lambda2.equals(other.getLambda2()))) &&
            ((this.piecewise2==null && other.getPiecewise2()==null) || 
             (this.piecewise2!=null &&
              this.piecewise2.equals(other.getPiecewise2()))) &&
            ((this.bvar2==null && other.getBvar2()==null) || 
             (this.bvar2!=null &&
              this.bvar2.equals(other.getBvar2()))) &&
            ((this.degree2==null && other.getDegree2()==null) || 
             (this.degree2!=null &&
              this.degree2.equals(other.getDegree2()))) &&
            ((this.semantics2==null && other.getSemantics2()==null) || 
             (this.semantics2!=null &&
              this.semantics2.equals(other.getSemantics2()))) &&
            ((this.none==null && other.getNone()==null) || 
             (this.none!=null &&
              this.none.equals(other.getNone()))) &&
            ((this.mi3==null && other.getMi3()==null) || 
             (this.mi3!=null &&
              this.mi3.equals(other.getMi3()))) &&
            ((this.mo3==null && other.getMo3()==null) || 
             (this.mo3!=null &&
              this.mo3.equals(other.getMo3()))) &&
            ((this.mn3==null && other.getMn3()==null) || 
             (this.mn3!=null &&
              this.mn3.equals(other.getMn3()))) &&
            ((this.mtext3==null && other.getMtext3()==null) || 
             (this.mtext3!=null &&
              this.mtext3.equals(other.getMtext3()))) &&
            ((this.ms3==null && other.getMs3()==null) || 
             (this.ms3!=null &&
              this.ms3.equals(other.getMs3()))) &&
            ((this.mrow3==null && other.getMrow3()==null) || 
             (this.mrow3!=null &&
              this.mrow3.equals(other.getMrow3()))) &&
            ((this.mfrac3==null && other.getMfrac3()==null) || 
             (this.mfrac3!=null &&
              this.mfrac3.equals(other.getMfrac3()))) &&
            ((this.msqrt3==null && other.getMsqrt3()==null) || 
             (this.msqrt3!=null &&
              this.msqrt3.equals(other.getMsqrt3()))) &&
            ((this.mroot3==null && other.getMroot3()==null) || 
             (this.mroot3!=null &&
              this.mroot3.equals(other.getMroot3()))) &&
            ((this.mpadded3==null && other.getMpadded3()==null) || 
             (this.mpadded3!=null &&
              this.mpadded3.equals(other.getMpadded3()))) &&
            ((this.mphantom3==null && other.getMphantom3()==null) || 
             (this.mphantom3!=null &&
              this.mphantom3.equals(other.getMphantom3()))) &&
            ((this.mfenced3==null && other.getMfenced3()==null) || 
             (this.mfenced3!=null &&
              this.mfenced3.equals(other.getMfenced3()))) &&
            ((this.menclose3==null && other.getMenclose3()==null) || 
             (this.menclose3!=null &&
              this.menclose3.equals(other.getMenclose3()))) &&
            ((this.msub3==null && other.getMsub3()==null) || 
             (this.msub3!=null &&
              this.msub3.equals(other.getMsub3()))) &&
            ((this.msup3==null && other.getMsup3()==null) || 
             (this.msup3!=null &&
              this.msup3.equals(other.getMsup3()))) &&
            ((this.msubsup3==null && other.getMsubsup3()==null) || 
             (this.msubsup3!=null &&
              this.msubsup3.equals(other.getMsubsup3()))) &&
            ((this.munder3==null && other.getMunder3()==null) || 
             (this.munder3!=null &&
              this.munder3.equals(other.getMunder3()))) &&
            ((this.mover3==null && other.getMover3()==null) || 
             (this.mover3!=null &&
              this.mover3.equals(other.getMover3()))) &&
            ((this.munderover3==null && other.getMunderover3()==null) || 
             (this.munderover3!=null &&
              this.munderover3.equals(other.getMunderover3()))) &&
            ((this.mmultiscripts3==null && other.getMmultiscripts3()==null) || 
             (this.mmultiscripts3!=null &&
              this.mmultiscripts3.equals(other.getMmultiscripts3()))) &&
            ((this.mtable3==null && other.getMtable3()==null) || 
             (this.mtable3!=null &&
              this.mtable3.equals(other.getMtable3()))) &&
            ((this.maligngroup3==null && other.getMaligngroup3()==null) || 
             (this.maligngroup3!=null &&
              this.maligngroup3.equals(other.getMaligngroup3()))) &&
            ((this.malignmark3==null && other.getMalignmark3()==null) || 
             (this.malignmark3!=null &&
              this.malignmark3.equals(other.getMalignmark3()))) &&
            ((this.mspace3==null && other.getMspace3()==null) || 
             (this.mspace3!=null &&
              this.mspace3.equals(other.getMspace3()))) &&
            ((this.maction3==null && other.getMaction3()==null) || 
             (this.maction3!=null &&
              this.maction3.equals(other.getMaction3()))) &&
            ((this.merror3==null && other.getMerror3()==null) || 
             (this.merror3!=null &&
              this.merror3.equals(other.getMerror3()))) &&
            ((this.mstyle3==null && other.getMstyle3()==null) || 
             (this.mstyle3!=null &&
              this.mstyle3.equals(other.getMstyle3()))) &&
            ((this.cn3==null && other.getCn3()==null) || 
             (this.cn3!=null &&
              this.cn3.equals(other.getCn3()))) &&
            ((this.ci3==null && other.getCi3()==null) || 
             (this.ci3!=null &&
              this.ci3.equals(other.getCi3()))) &&
            ((this.csymbol3==null && other.getCsymbol3()==null) || 
             (this.csymbol3!=null &&
              this.csymbol3.equals(other.getCsymbol3()))) &&
            ((this.abs3==null && other.getAbs3()==null) || 
             (this.abs3!=null &&
              this.abs3.equals(other.getAbs3()))) &&
            ((this.conjugate3==null && other.getConjugate3()==null) || 
             (this.conjugate3!=null &&
              this.conjugate3.equals(other.getConjugate3()))) &&
            ((this.factorial3==null && other.getFactorial3()==null) || 
             (this.factorial3!=null &&
              this.factorial3.equals(other.getFactorial3()))) &&
            ((this.arg3==null && other.getArg3()==null) || 
             (this.arg3!=null &&
              this.arg3.equals(other.getArg3()))) &&
            ((this.real3==null && other.getReal3()==null) || 
             (this.real3!=null &&
              this.real3.equals(other.getReal3()))) &&
            ((this.imaginary3==null && other.getImaginary3()==null) || 
             (this.imaginary3!=null &&
              this.imaginary3.equals(other.getImaginary3()))) &&
            ((this.floor3==null && other.getFloor3()==null) || 
             (this.floor3!=null &&
              this.floor3.equals(other.getFloor3()))) &&
            ((this.ceiling3==null && other.getCeiling3()==null) || 
             (this.ceiling3!=null &&
              this.ceiling3.equals(other.getCeiling3()))) &&
            ((this.quotient3==null && other.getQuotient3()==null) || 
             (this.quotient3!=null &&
              this.quotient3.equals(other.getQuotient3()))) &&
            ((this.divide3==null && other.getDivide3()==null) || 
             (this.divide3!=null &&
              this.divide3.equals(other.getDivide3()))) &&
            ((this.rem3==null && other.getRem3()==null) || 
             (this.rem3!=null &&
              this.rem3.equals(other.getRem3()))) &&
            ((this.minus3==null && other.getMinus3()==null) || 
             (this.minus3!=null &&
              this.minus3.equals(other.getMinus3()))) &&
            ((this.plus3==null && other.getPlus3()==null) || 
             (this.plus3!=null &&
              this.plus3.equals(other.getPlus3()))) &&
            ((this.times3==null && other.getTimes3()==null) || 
             (this.times3!=null &&
              this.times3.equals(other.getTimes3()))) &&
            ((this.power3==null && other.getPower3()==null) || 
             (this.power3!=null &&
              this.power3.equals(other.getPower3()))) &&
            ((this.root3==null && other.getRoot3()==null) || 
             (this.root3!=null &&
              this.root3.equals(other.getRoot3()))) &&
            ((this.max3==null && other.getMax3()==null) || 
             (this.max3!=null &&
              this.max3.equals(other.getMax3()))) &&
            ((this.min3==null && other.getMin3()==null) || 
             (this.min3!=null &&
              this.min3.equals(other.getMin3()))) &&
            ((this.gcd3==null && other.getGcd3()==null) || 
             (this.gcd3!=null &&
              this.gcd3.equals(other.getGcd3()))) &&
            ((this.lcm3==null && other.getLcm3()==null) || 
             (this.lcm3!=null &&
              this.lcm3.equals(other.getLcm3()))) &&
            ((this.sum3==null && other.getSum3()==null) || 
             (this.sum3!=null &&
              this.sum3.equals(other.getSum3()))) &&
            ((this.product3==null && other.getProduct3()==null) || 
             (this.product3!=null &&
              this.product3.equals(other.getProduct3()))) &&
            ((this.compose3==null && other.getCompose3()==null) || 
             (this.compose3!=null &&
              this.compose3.equals(other.getCompose3()))) &&
            ((this.domain3==null && other.getDomain3()==null) || 
             (this.domain3!=null &&
              this.domain3.equals(other.getDomain3()))) &&
            ((this.codomain3==null && other.getCodomain3()==null) || 
             (this.codomain3!=null &&
              this.codomain3.equals(other.getCodomain3()))) &&
            ((this.image3==null && other.getImage3()==null) || 
             (this.image3!=null &&
              this.image3.equals(other.getImage3()))) &&
            ((this.domainofapplication3==null && other.getDomainofapplication3()==null) || 
             (this.domainofapplication3!=null &&
              this.domainofapplication3.equals(other.getDomainofapplication3()))) &&
            ((this.ident3==null && other.getIdent3()==null) || 
             (this.ident3!=null &&
              this.ident3.equals(other.getIdent3()))) &&
            ((this.and3==null && other.getAnd3()==null) || 
             (this.and3!=null &&
              this.and3.equals(other.getAnd3()))) &&
            ((this.or3==null && other.getOr3()==null) || 
             (this.or3!=null &&
              this.or3.equals(other.getOr3()))) &&
            ((this.xor3==null && other.getXor3()==null) || 
             (this.xor3!=null &&
              this.xor3.equals(other.getXor3()))) &&
            ((this.not3==null && other.getNot3()==null) || 
             (this.not3!=null &&
              this.not3.equals(other.getNot3()))) &&
            ((this.exists3==null && other.getExists3()==null) || 
             (this.exists3!=null &&
              this.exists3.equals(other.getExists3()))) &&
            ((this.forall3==null && other.getForall3()==null) || 
             (this.forall3!=null &&
              this.forall3.equals(other.getForall3()))) &&
            ((this.implies3==null && other.getImplies3()==null) || 
             (this.implies3!=null &&
              this.implies3.equals(other.getImplies3()))) &&
            ((this.naturalnumbers3==null && other.getNaturalnumbers3()==null) || 
             (this.naturalnumbers3!=null &&
              this.naturalnumbers3.equals(other.getNaturalnumbers3()))) &&
            ((this.primes3==null && other.getPrimes3()==null) || 
             (this.primes3!=null &&
              this.primes3.equals(other.getPrimes3()))) &&
            ((this.integers3==null && other.getIntegers3()==null) || 
             (this.integers3!=null &&
              this.integers3.equals(other.getIntegers3()))) &&
            ((this.rationals3==null && other.getRationals3()==null) || 
             (this.rationals3!=null &&
              this.rationals3.equals(other.getRationals3()))) &&
            ((this.reals3==null && other.getReals3()==null) || 
             (this.reals3!=null &&
              this.reals3.equals(other.getReals3()))) &&
            ((this.complexes3==null && other.getComplexes3()==null) || 
             (this.complexes3!=null &&
              this.complexes3.equals(other.getComplexes3()))) &&
            ((this.emptyset3==null && other.getEmptyset3()==null) || 
             (this.emptyset3!=null &&
              this.emptyset3.equals(other.getEmptyset3()))) &&
            ((this.exponentiale3==null && other.getExponentiale3()==null) || 
             (this.exponentiale3!=null &&
              this.exponentiale3.equals(other.getExponentiale3()))) &&
            ((this.imaginaryi3==null && other.getImaginaryi3()==null) || 
             (this.imaginaryi3!=null &&
              this.imaginaryi3.equals(other.getImaginaryi3()))) &&
            ((this.pi3==null && other.getPi3()==null) || 
             (this.pi3!=null &&
              this.pi3.equals(other.getPi3()))) &&
            ((this.eulergamma3==null && other.getEulergamma3()==null) || 
             (this.eulergamma3!=null &&
              this.eulergamma3.equals(other.getEulergamma3()))) &&
            ((this._true3==null && other.get_true3()==null) || 
             (this._true3!=null &&
              this._true3.equals(other.get_true3()))) &&
            ((this._false3==null && other.get_false3()==null) || 
             (this._false3!=null &&
              this._false3.equals(other.get_false3()))) &&
            ((this.infinity3==null && other.getInfinity3()==null) || 
             (this.infinity3!=null &&
              this.infinity3.equals(other.getInfinity3()))) &&
            ((this.notanumber3==null && other.getNotanumber3()==null) || 
             (this.notanumber3!=null &&
              this.notanumber3.equals(other.getNotanumber3()))) &&
            ((this.set3==null && other.getSet3()==null) || 
             (this.set3!=null &&
              this.set3.equals(other.getSet3()))) &&
            ((this.list3==null && other.getList3()==null) || 
             (this.list3!=null &&
              this.list3.equals(other.getList3()))) &&
            ((this.union3==null && other.getUnion3()==null) || 
             (this.union3!=null &&
              this.union3.equals(other.getUnion3()))) &&
            ((this.intersect3==null && other.getIntersect3()==null) || 
             (this.intersect3!=null &&
              this.intersect3.equals(other.getIntersect3()))) &&
            ((this.in3==null && other.getIn3()==null) || 
             (this.in3!=null &&
              this.in3.equals(other.getIn3()))) &&
            ((this.notin3==null && other.getNotin3()==null) || 
             (this.notin3!=null &&
              this.notin3.equals(other.getNotin3()))) &&
            ((this.subset3==null && other.getSubset3()==null) || 
             (this.subset3!=null &&
              this.subset3.equals(other.getSubset3()))) &&
            ((this.prsubset3==null && other.getPrsubset3()==null) || 
             (this.prsubset3!=null &&
              this.prsubset3.equals(other.getPrsubset3()))) &&
            ((this.notsubset3==null && other.getNotsubset3()==null) || 
             (this.notsubset3!=null &&
              this.notsubset3.equals(other.getNotsubset3()))) &&
            ((this.notprsubset3==null && other.getNotprsubset3()==null) || 
             (this.notprsubset3!=null &&
              this.notprsubset3.equals(other.getNotprsubset3()))) &&
            ((this.setdiff3==null && other.getSetdiff3()==null) || 
             (this.setdiff3!=null &&
              this.setdiff3.equals(other.getSetdiff3()))) &&
            ((this.card3==null && other.getCard3()==null) || 
             (this.card3!=null &&
              this.card3.equals(other.getCard3()))) &&
            ((this.cartesianproduct3==null && other.getCartesianproduct3()==null) || 
             (this.cartesianproduct3!=null &&
              this.cartesianproduct3.equals(other.getCartesianproduct3()))) &&
            ((this.eq3==null && other.getEq3()==null) || 
             (this.eq3!=null &&
              this.eq3.equals(other.getEq3()))) &&
            ((this.neq3==null && other.getNeq3()==null) || 
             (this.neq3!=null &&
              this.neq3.equals(other.getNeq3()))) &&
            ((this.leq3==null && other.getLeq3()==null) || 
             (this.leq3!=null &&
              this.leq3.equals(other.getLeq3()))) &&
            ((this.lt3==null && other.getLt3()==null) || 
             (this.lt3!=null &&
              this.lt3.equals(other.getLt3()))) &&
            ((this.geq3==null && other.getGeq3()==null) || 
             (this.geq3!=null &&
              this.geq3.equals(other.getGeq3()))) &&
            ((this.gt3==null && other.getGt3()==null) || 
             (this.gt3!=null &&
              this.gt3.equals(other.getGt3()))) &&
            ((this.equivalent3==null && other.getEquivalent3()==null) || 
             (this.equivalent3!=null &&
              this.equivalent3.equals(other.getEquivalent3()))) &&
            ((this.approx3==null && other.getApprox3()==null) || 
             (this.approx3!=null &&
              this.approx3.equals(other.getApprox3()))) &&
            ((this.factorof3==null && other.getFactorof3()==null) || 
             (this.factorof3!=null &&
              this.factorof3.equals(other.getFactorof3()))) &&
            ((this.exp3==null && other.getExp3()==null) || 
             (this.exp3!=null &&
              this.exp3.equals(other.getExp3()))) &&
            ((this.ln3==null && other.getLn3()==null) || 
             (this.ln3!=null &&
              this.ln3.equals(other.getLn3()))) &&
            ((this.log3==null && other.getLog3()==null) || 
             (this.log3!=null &&
              this.log3.equals(other.getLog3()))) &&
            ((this.logbase3==null && other.getLogbase3()==null) || 
             (this.logbase3!=null &&
              this.logbase3.equals(other.getLogbase3()))) &&
            ((this.sin3==null && other.getSin3()==null) || 
             (this.sin3!=null &&
              this.sin3.equals(other.getSin3()))) &&
            ((this.cos3==null && other.getCos3()==null) || 
             (this.cos3!=null &&
              this.cos3.equals(other.getCos3()))) &&
            ((this.tan3==null && other.getTan3()==null) || 
             (this.tan3!=null &&
              this.tan3.equals(other.getTan3()))) &&
            ((this.sec3==null && other.getSec3()==null) || 
             (this.sec3!=null &&
              this.sec3.equals(other.getSec3()))) &&
            ((this.csc3==null && other.getCsc3()==null) || 
             (this.csc3!=null &&
              this.csc3.equals(other.getCsc3()))) &&
            ((this.cot3==null && other.getCot3()==null) || 
             (this.cot3!=null &&
              this.cot3.equals(other.getCot3()))) &&
            ((this.arcsin3==null && other.getArcsin3()==null) || 
             (this.arcsin3!=null &&
              this.arcsin3.equals(other.getArcsin3()))) &&
            ((this.arccos3==null && other.getArccos3()==null) || 
             (this.arccos3!=null &&
              this.arccos3.equals(other.getArccos3()))) &&
            ((this.arctan3==null && other.getArctan3()==null) || 
             (this.arctan3!=null &&
              this.arctan3.equals(other.getArctan3()))) &&
            ((this.arcsec3==null && other.getArcsec3()==null) || 
             (this.arcsec3!=null &&
              this.arcsec3.equals(other.getArcsec3()))) &&
            ((this.arccsc3==null && other.getArccsc3()==null) || 
             (this.arccsc3!=null &&
              this.arccsc3.equals(other.getArccsc3()))) &&
            ((this.arccot3==null && other.getArccot3()==null) || 
             (this.arccot3!=null &&
              this.arccot3.equals(other.getArccot3()))) &&
            ((this.sinh3==null && other.getSinh3()==null) || 
             (this.sinh3!=null &&
              this.sinh3.equals(other.getSinh3()))) &&
            ((this.cosh3==null && other.getCosh3()==null) || 
             (this.cosh3!=null &&
              this.cosh3.equals(other.getCosh3()))) &&
            ((this.tanh3==null && other.getTanh3()==null) || 
             (this.tanh3!=null &&
              this.tanh3.equals(other.getTanh3()))) &&
            ((this.sech3==null && other.getSech3()==null) || 
             (this.sech3!=null &&
              this.sech3.equals(other.getSech3()))) &&
            ((this.csch3==null && other.getCsch3()==null) || 
             (this.csch3!=null &&
              this.csch3.equals(other.getCsch3()))) &&
            ((this.coth3==null && other.getCoth3()==null) || 
             (this.coth3!=null &&
              this.coth3.equals(other.getCoth3()))) &&
            ((this.arccosh3==null && other.getArccosh3()==null) || 
             (this.arccosh3!=null &&
              this.arccosh3.equals(other.getArccosh3()))) &&
            ((this.arccoth3==null && other.getArccoth3()==null) || 
             (this.arccoth3!=null &&
              this.arccoth3.equals(other.getArccoth3()))) &&
            ((this.arccsch3==null && other.getArccsch3()==null) || 
             (this.arccsch3!=null &&
              this.arccsch3.equals(other.getArccsch3()))) &&
            ((this.arcsech3==null && other.getArcsech3()==null) || 
             (this.arcsech3!=null &&
              this.arcsech3.equals(other.getArcsech3()))) &&
            ((this.arcsinh3==null && other.getArcsinh3()==null) || 
             (this.arcsinh3!=null &&
              this.arcsinh3.equals(other.getArcsinh3()))) &&
            ((this.arctanh3==null && other.getArctanh3()==null) || 
             (this.arctanh3!=null &&
              this.arctanh3.equals(other.getArctanh3()))) &&
            ((this._int3==null && other.get_int3()==null) || 
             (this._int3!=null &&
              this._int3.equals(other.get_int3()))) &&
            ((this.diff3==null && other.getDiff3()==null) || 
             (this.diff3!=null &&
              this.diff3.equals(other.getDiff3()))) &&
            ((this.partialdiff3==null && other.getPartialdiff3()==null) || 
             (this.partialdiff3!=null &&
              this.partialdiff3.equals(other.getPartialdiff3()))) &&
            ((this.limit3==null && other.getLimit3()==null) || 
             (this.limit3!=null &&
              this.limit3.equals(other.getLimit3()))) &&
            ((this.lowlimit3==null && other.getLowlimit3()==null) || 
             (this.lowlimit3!=null &&
              this.lowlimit3.equals(other.getLowlimit3()))) &&
            ((this.uplimit3==null && other.getUplimit3()==null) || 
             (this.uplimit3!=null &&
              this.uplimit3.equals(other.getUplimit3()))) &&
            ((this.tendsto3==null && other.getTendsto3()==null) || 
             (this.tendsto3!=null &&
              this.tendsto3.equals(other.getTendsto3()))) &&
            ((this.vector3==null && other.getVector3()==null) || 
             (this.vector3!=null &&
              this.vector3.equals(other.getVector3()))) &&
            ((this.matrix3==null && other.getMatrix3()==null) || 
             (this.matrix3!=null &&
              this.matrix3.equals(other.getMatrix3()))) &&
            ((this.determinant3==null && other.getDeterminant3()==null) || 
             (this.determinant3!=null &&
              this.determinant3.equals(other.getDeterminant3()))) &&
            ((this.transpose3==null && other.getTranspose3()==null) || 
             (this.transpose3!=null &&
              this.transpose3.equals(other.getTranspose3()))) &&
            ((this.selector3==null && other.getSelector3()==null) || 
             (this.selector3!=null &&
              this.selector3.equals(other.getSelector3()))) &&
            ((this.vectorproduct3==null && other.getVectorproduct3()==null) || 
             (this.vectorproduct3!=null &&
              this.vectorproduct3.equals(other.getVectorproduct3()))) &&
            ((this.scalarproduct3==null && other.getScalarproduct3()==null) || 
             (this.scalarproduct3!=null &&
              this.scalarproduct3.equals(other.getScalarproduct3()))) &&
            ((this.outerproduct3==null && other.getOuterproduct3()==null) || 
             (this.outerproduct3!=null &&
              this.outerproduct3.equals(other.getOuterproduct3()))) &&
            ((this.divergence3==null && other.getDivergence3()==null) || 
             (this.divergence3!=null &&
              this.divergence3.equals(other.getDivergence3()))) &&
            ((this.grad3==null && other.getGrad3()==null) || 
             (this.grad3!=null &&
              this.grad3.equals(other.getGrad3()))) &&
            ((this.curl3==null && other.getCurl3()==null) || 
             (this.curl3!=null &&
              this.curl3.equals(other.getCurl3()))) &&
            ((this.laplacian3==null && other.getLaplacian3()==null) || 
             (this.laplacian3!=null &&
              this.laplacian3.equals(other.getLaplacian3()))) &&
            ((this.mean3==null && other.getMean3()==null) || 
             (this.mean3!=null &&
              this.mean3.equals(other.getMean3()))) &&
            ((this.sdev3==null && other.getSdev3()==null) || 
             (this.sdev3!=null &&
              this.sdev3.equals(other.getSdev3()))) &&
            ((this.variance3==null && other.getVariance3()==null) || 
             (this.variance3!=null &&
              this.variance3.equals(other.getVariance3()))) &&
            ((this.median3==null && other.getMedian3()==null) || 
             (this.median3!=null &&
              this.median3.equals(other.getMedian3()))) &&
            ((this.mode3==null && other.getMode3()==null) || 
             (this.mode3!=null &&
              this.mode3.equals(other.getMode3()))) &&
            ((this.moment3==null && other.getMoment3()==null) || 
             (this.moment3!=null &&
              this.moment3.equals(other.getMoment3()))) &&
            ((this.momentabout3==null && other.getMomentabout3()==null) || 
             (this.momentabout3!=null &&
              this.momentabout3.equals(other.getMomentabout3()))) &&
            ((this.apply3==null && other.getApply3()==null) || 
             (this.apply3!=null &&
              this.apply3.equals(other.getApply3()))) &&
            ((this.interval3==null && other.getInterval3()==null) || 
             (this.interval3!=null &&
              this.interval3.equals(other.getInterval3()))) &&
            ((this.inverse3==null && other.getInverse3()==null) || 
             (this.inverse3!=null &&
              this.inverse3.equals(other.getInverse3()))) &&
            ((this.condition3==null && other.getCondition3()==null) || 
             (this.condition3!=null &&
              this.condition3.equals(other.getCondition3()))) &&
            ((this.declare3==null && other.getDeclare3()==null) || 
             (this.declare3!=null &&
              this.declare3.equals(other.getDeclare3()))) &&
            ((this.lambda3==null && other.getLambda3()==null) || 
             (this.lambda3!=null &&
              this.lambda3.equals(other.getLambda3()))) &&
            ((this.piecewise3==null && other.getPiecewise3()==null) || 
             (this.piecewise3!=null &&
              this.piecewise3.equals(other.getPiecewise3()))) &&
            ((this.bvar3==null && other.getBvar3()==null) || 
             (this.bvar3!=null &&
              this.bvar3.equals(other.getBvar3()))) &&
            ((this.degree3==null && other.getDegree3()==null) || 
             (this.degree3!=null &&
              this.degree3.equals(other.getDegree3()))) &&
            ((this.semantics3==null && other.getSemantics3()==null) || 
             (this.semantics3!=null &&
              this.semantics3.equals(other.getSemantics3()))) &&
            ((this.none2==null && other.getNone2()==null) || 
             (this.none2!=null &&
              this.none2.equals(other.getNone2()))) &&
            ((this.mprescripts==null && other.getMprescripts()==null) || 
             (this.mprescripts!=null &&
              this.mprescripts.equals(other.getMprescripts()))) &&
            ((this.mi4==null && other.getMi4()==null) || 
             (this.mi4!=null &&
              this.mi4.equals(other.getMi4()))) &&
            ((this.mo4==null && other.getMo4()==null) || 
             (this.mo4!=null &&
              this.mo4.equals(other.getMo4()))) &&
            ((this.mn4==null && other.getMn4()==null) || 
             (this.mn4!=null &&
              this.mn4.equals(other.getMn4()))) &&
            ((this.mtext4==null && other.getMtext4()==null) || 
             (this.mtext4!=null &&
              this.mtext4.equals(other.getMtext4()))) &&
            ((this.ms4==null && other.getMs4()==null) || 
             (this.ms4!=null &&
              this.ms4.equals(other.getMs4()))) &&
            ((this.mrow4==null && other.getMrow4()==null) || 
             (this.mrow4!=null &&
              this.mrow4.equals(other.getMrow4()))) &&
            ((this.mfrac4==null && other.getMfrac4()==null) || 
             (this.mfrac4!=null &&
              this.mfrac4.equals(other.getMfrac4()))) &&
            ((this.msqrt4==null && other.getMsqrt4()==null) || 
             (this.msqrt4!=null &&
              this.msqrt4.equals(other.getMsqrt4()))) &&
            ((this.mroot4==null && other.getMroot4()==null) || 
             (this.mroot4!=null &&
              this.mroot4.equals(other.getMroot4()))) &&
            ((this.mpadded4==null && other.getMpadded4()==null) || 
             (this.mpadded4!=null &&
              this.mpadded4.equals(other.getMpadded4()))) &&
            ((this.mphantom4==null && other.getMphantom4()==null) || 
             (this.mphantom4!=null &&
              this.mphantom4.equals(other.getMphantom4()))) &&
            ((this.mfenced4==null && other.getMfenced4()==null) || 
             (this.mfenced4!=null &&
              this.mfenced4.equals(other.getMfenced4()))) &&
            ((this.menclose4==null && other.getMenclose4()==null) || 
             (this.menclose4!=null &&
              this.menclose4.equals(other.getMenclose4()))) &&
            ((this.msub4==null && other.getMsub4()==null) || 
             (this.msub4!=null &&
              this.msub4.equals(other.getMsub4()))) &&
            ((this.msup4==null && other.getMsup4()==null) || 
             (this.msup4!=null &&
              this.msup4.equals(other.getMsup4()))) &&
            ((this.msubsup4==null && other.getMsubsup4()==null) || 
             (this.msubsup4!=null &&
              this.msubsup4.equals(other.getMsubsup4()))) &&
            ((this.munder4==null && other.getMunder4()==null) || 
             (this.munder4!=null &&
              this.munder4.equals(other.getMunder4()))) &&
            ((this.mover4==null && other.getMover4()==null) || 
             (this.mover4!=null &&
              this.mover4.equals(other.getMover4()))) &&
            ((this.munderover4==null && other.getMunderover4()==null) || 
             (this.munderover4!=null &&
              this.munderover4.equals(other.getMunderover4()))) &&
            ((this.mmultiscripts4==null && other.getMmultiscripts4()==null) || 
             (this.mmultiscripts4!=null &&
              this.mmultiscripts4.equals(other.getMmultiscripts4()))) &&
            ((this.mtable4==null && other.getMtable4()==null) || 
             (this.mtable4!=null &&
              this.mtable4.equals(other.getMtable4()))) &&
            ((this.maligngroup4==null && other.getMaligngroup4()==null) || 
             (this.maligngroup4!=null &&
              this.maligngroup4.equals(other.getMaligngroup4()))) &&
            ((this.malignmark4==null && other.getMalignmark4()==null) || 
             (this.malignmark4!=null &&
              this.malignmark4.equals(other.getMalignmark4()))) &&
            ((this.mspace4==null && other.getMspace4()==null) || 
             (this.mspace4!=null &&
              this.mspace4.equals(other.getMspace4()))) &&
            ((this.maction4==null && other.getMaction4()==null) || 
             (this.maction4!=null &&
              this.maction4.equals(other.getMaction4()))) &&
            ((this.merror4==null && other.getMerror4()==null) || 
             (this.merror4!=null &&
              this.merror4.equals(other.getMerror4()))) &&
            ((this.mstyle4==null && other.getMstyle4()==null) || 
             (this.mstyle4!=null &&
              this.mstyle4.equals(other.getMstyle4()))) &&
            ((this.cn4==null && other.getCn4()==null) || 
             (this.cn4!=null &&
              this.cn4.equals(other.getCn4()))) &&
            ((this.ci4==null && other.getCi4()==null) || 
             (this.ci4!=null &&
              this.ci4.equals(other.getCi4()))) &&
            ((this.csymbol4==null && other.getCsymbol4()==null) || 
             (this.csymbol4!=null &&
              this.csymbol4.equals(other.getCsymbol4()))) &&
            ((this.abs4==null && other.getAbs4()==null) || 
             (this.abs4!=null &&
              this.abs4.equals(other.getAbs4()))) &&
            ((this.conjugate4==null && other.getConjugate4()==null) || 
             (this.conjugate4!=null &&
              this.conjugate4.equals(other.getConjugate4()))) &&
            ((this.factorial4==null && other.getFactorial4()==null) || 
             (this.factorial4!=null &&
              this.factorial4.equals(other.getFactorial4()))) &&
            ((this.arg4==null && other.getArg4()==null) || 
             (this.arg4!=null &&
              this.arg4.equals(other.getArg4()))) &&
            ((this.real4==null && other.getReal4()==null) || 
             (this.real4!=null &&
              this.real4.equals(other.getReal4()))) &&
            ((this.imaginary4==null && other.getImaginary4()==null) || 
             (this.imaginary4!=null &&
              this.imaginary4.equals(other.getImaginary4()))) &&
            ((this.floor4==null && other.getFloor4()==null) || 
             (this.floor4!=null &&
              this.floor4.equals(other.getFloor4()))) &&
            ((this.ceiling4==null && other.getCeiling4()==null) || 
             (this.ceiling4!=null &&
              this.ceiling4.equals(other.getCeiling4()))) &&
            ((this.quotient4==null && other.getQuotient4()==null) || 
             (this.quotient4!=null &&
              this.quotient4.equals(other.getQuotient4()))) &&
            ((this.divide4==null && other.getDivide4()==null) || 
             (this.divide4!=null &&
              this.divide4.equals(other.getDivide4()))) &&
            ((this.rem4==null && other.getRem4()==null) || 
             (this.rem4!=null &&
              this.rem4.equals(other.getRem4()))) &&
            ((this.minus4==null && other.getMinus4()==null) || 
             (this.minus4!=null &&
              this.minus4.equals(other.getMinus4()))) &&
            ((this.plus4==null && other.getPlus4()==null) || 
             (this.plus4!=null &&
              this.plus4.equals(other.getPlus4()))) &&
            ((this.times4==null && other.getTimes4()==null) || 
             (this.times4!=null &&
              this.times4.equals(other.getTimes4()))) &&
            ((this.power4==null && other.getPower4()==null) || 
             (this.power4!=null &&
              this.power4.equals(other.getPower4()))) &&
            ((this.root4==null && other.getRoot4()==null) || 
             (this.root4!=null &&
              this.root4.equals(other.getRoot4()))) &&
            ((this.max4==null && other.getMax4()==null) || 
             (this.max4!=null &&
              this.max4.equals(other.getMax4()))) &&
            ((this.min4==null && other.getMin4()==null) || 
             (this.min4!=null &&
              this.min4.equals(other.getMin4()))) &&
            ((this.gcd4==null && other.getGcd4()==null) || 
             (this.gcd4!=null &&
              this.gcd4.equals(other.getGcd4()))) &&
            ((this.lcm4==null && other.getLcm4()==null) || 
             (this.lcm4!=null &&
              this.lcm4.equals(other.getLcm4()))) &&
            ((this.sum4==null && other.getSum4()==null) || 
             (this.sum4!=null &&
              this.sum4.equals(other.getSum4()))) &&
            ((this.product4==null && other.getProduct4()==null) || 
             (this.product4!=null &&
              this.product4.equals(other.getProduct4()))) &&
            ((this.compose4==null && other.getCompose4()==null) || 
             (this.compose4!=null &&
              this.compose4.equals(other.getCompose4()))) &&
            ((this.domain4==null && other.getDomain4()==null) || 
             (this.domain4!=null &&
              this.domain4.equals(other.getDomain4()))) &&
            ((this.codomain4==null && other.getCodomain4()==null) || 
             (this.codomain4!=null &&
              this.codomain4.equals(other.getCodomain4()))) &&
            ((this.image4==null && other.getImage4()==null) || 
             (this.image4!=null &&
              this.image4.equals(other.getImage4()))) &&
            ((this.domainofapplication4==null && other.getDomainofapplication4()==null) || 
             (this.domainofapplication4!=null &&
              this.domainofapplication4.equals(other.getDomainofapplication4()))) &&
            ((this.ident4==null && other.getIdent4()==null) || 
             (this.ident4!=null &&
              this.ident4.equals(other.getIdent4()))) &&
            ((this.and4==null && other.getAnd4()==null) || 
             (this.and4!=null &&
              this.and4.equals(other.getAnd4()))) &&
            ((this.or4==null && other.getOr4()==null) || 
             (this.or4!=null &&
              this.or4.equals(other.getOr4()))) &&
            ((this.xor4==null && other.getXor4()==null) || 
             (this.xor4!=null &&
              this.xor4.equals(other.getXor4()))) &&
            ((this.not4==null && other.getNot4()==null) || 
             (this.not4!=null &&
              this.not4.equals(other.getNot4()))) &&
            ((this.exists4==null && other.getExists4()==null) || 
             (this.exists4!=null &&
              this.exists4.equals(other.getExists4()))) &&
            ((this.forall4==null && other.getForall4()==null) || 
             (this.forall4!=null &&
              this.forall4.equals(other.getForall4()))) &&
            ((this.implies4==null && other.getImplies4()==null) || 
             (this.implies4!=null &&
              this.implies4.equals(other.getImplies4()))) &&
            ((this.naturalnumbers4==null && other.getNaturalnumbers4()==null) || 
             (this.naturalnumbers4!=null &&
              this.naturalnumbers4.equals(other.getNaturalnumbers4()))) &&
            ((this.primes4==null && other.getPrimes4()==null) || 
             (this.primes4!=null &&
              this.primes4.equals(other.getPrimes4()))) &&
            ((this.integers4==null && other.getIntegers4()==null) || 
             (this.integers4!=null &&
              this.integers4.equals(other.getIntegers4()))) &&
            ((this.rationals4==null && other.getRationals4()==null) || 
             (this.rationals4!=null &&
              this.rationals4.equals(other.getRationals4()))) &&
            ((this.reals4==null && other.getReals4()==null) || 
             (this.reals4!=null &&
              this.reals4.equals(other.getReals4()))) &&
            ((this.complexes4==null && other.getComplexes4()==null) || 
             (this.complexes4!=null &&
              this.complexes4.equals(other.getComplexes4()))) &&
            ((this.emptyset4==null && other.getEmptyset4()==null) || 
             (this.emptyset4!=null &&
              this.emptyset4.equals(other.getEmptyset4()))) &&
            ((this.exponentiale4==null && other.getExponentiale4()==null) || 
             (this.exponentiale4!=null &&
              this.exponentiale4.equals(other.getExponentiale4()))) &&
            ((this.imaginaryi4==null && other.getImaginaryi4()==null) || 
             (this.imaginaryi4!=null &&
              this.imaginaryi4.equals(other.getImaginaryi4()))) &&
            ((this.pi4==null && other.getPi4()==null) || 
             (this.pi4!=null &&
              this.pi4.equals(other.getPi4()))) &&
            ((this.eulergamma4==null && other.getEulergamma4()==null) || 
             (this.eulergamma4!=null &&
              this.eulergamma4.equals(other.getEulergamma4()))) &&
            ((this._true4==null && other.get_true4()==null) || 
             (this._true4!=null &&
              this._true4.equals(other.get_true4()))) &&
            ((this._false4==null && other.get_false4()==null) || 
             (this._false4!=null &&
              this._false4.equals(other.get_false4()))) &&
            ((this.infinity4==null && other.getInfinity4()==null) || 
             (this.infinity4!=null &&
              this.infinity4.equals(other.getInfinity4()))) &&
            ((this.notanumber4==null && other.getNotanumber4()==null) || 
             (this.notanumber4!=null &&
              this.notanumber4.equals(other.getNotanumber4()))) &&
            ((this.set4==null && other.getSet4()==null) || 
             (this.set4!=null &&
              this.set4.equals(other.getSet4()))) &&
            ((this.list4==null && other.getList4()==null) || 
             (this.list4!=null &&
              this.list4.equals(other.getList4()))) &&
            ((this.union4==null && other.getUnion4()==null) || 
             (this.union4!=null &&
              this.union4.equals(other.getUnion4()))) &&
            ((this.intersect4==null && other.getIntersect4()==null) || 
             (this.intersect4!=null &&
              this.intersect4.equals(other.getIntersect4()))) &&
            ((this.in4==null && other.getIn4()==null) || 
             (this.in4!=null &&
              this.in4.equals(other.getIn4()))) &&
            ((this.notin4==null && other.getNotin4()==null) || 
             (this.notin4!=null &&
              this.notin4.equals(other.getNotin4()))) &&
            ((this.subset4==null && other.getSubset4()==null) || 
             (this.subset4!=null &&
              this.subset4.equals(other.getSubset4()))) &&
            ((this.prsubset4==null && other.getPrsubset4()==null) || 
             (this.prsubset4!=null &&
              this.prsubset4.equals(other.getPrsubset4()))) &&
            ((this.notsubset4==null && other.getNotsubset4()==null) || 
             (this.notsubset4!=null &&
              this.notsubset4.equals(other.getNotsubset4()))) &&
            ((this.notprsubset4==null && other.getNotprsubset4()==null) || 
             (this.notprsubset4!=null &&
              this.notprsubset4.equals(other.getNotprsubset4()))) &&
            ((this.setdiff4==null && other.getSetdiff4()==null) || 
             (this.setdiff4!=null &&
              this.setdiff4.equals(other.getSetdiff4()))) &&
            ((this.card4==null && other.getCard4()==null) || 
             (this.card4!=null &&
              this.card4.equals(other.getCard4()))) &&
            ((this.cartesianproduct4==null && other.getCartesianproduct4()==null) || 
             (this.cartesianproduct4!=null &&
              this.cartesianproduct4.equals(other.getCartesianproduct4()))) &&
            ((this.eq4==null && other.getEq4()==null) || 
             (this.eq4!=null &&
              this.eq4.equals(other.getEq4()))) &&
            ((this.neq4==null && other.getNeq4()==null) || 
             (this.neq4!=null &&
              this.neq4.equals(other.getNeq4()))) &&
            ((this.leq4==null && other.getLeq4()==null) || 
             (this.leq4!=null &&
              this.leq4.equals(other.getLeq4()))) &&
            ((this.lt4==null && other.getLt4()==null) || 
             (this.lt4!=null &&
              this.lt4.equals(other.getLt4()))) &&
            ((this.geq4==null && other.getGeq4()==null) || 
             (this.geq4!=null &&
              this.geq4.equals(other.getGeq4()))) &&
            ((this.gt4==null && other.getGt4()==null) || 
             (this.gt4!=null &&
              this.gt4.equals(other.getGt4()))) &&
            ((this.equivalent4==null && other.getEquivalent4()==null) || 
             (this.equivalent4!=null &&
              this.equivalent4.equals(other.getEquivalent4()))) &&
            ((this.approx4==null && other.getApprox4()==null) || 
             (this.approx4!=null &&
              this.approx4.equals(other.getApprox4()))) &&
            ((this.factorof4==null && other.getFactorof4()==null) || 
             (this.factorof4!=null &&
              this.factorof4.equals(other.getFactorof4()))) &&
            ((this.exp4==null && other.getExp4()==null) || 
             (this.exp4!=null &&
              this.exp4.equals(other.getExp4()))) &&
            ((this.ln4==null && other.getLn4()==null) || 
             (this.ln4!=null &&
              this.ln4.equals(other.getLn4()))) &&
            ((this.log4==null && other.getLog4()==null) || 
             (this.log4!=null &&
              this.log4.equals(other.getLog4()))) &&
            ((this.logbase4==null && other.getLogbase4()==null) || 
             (this.logbase4!=null &&
              this.logbase4.equals(other.getLogbase4()))) &&
            ((this.sin4==null && other.getSin4()==null) || 
             (this.sin4!=null &&
              this.sin4.equals(other.getSin4()))) &&
            ((this.cos4==null && other.getCos4()==null) || 
             (this.cos4!=null &&
              this.cos4.equals(other.getCos4()))) &&
            ((this.tan4==null && other.getTan4()==null) || 
             (this.tan4!=null &&
              this.tan4.equals(other.getTan4()))) &&
            ((this.sec4==null && other.getSec4()==null) || 
             (this.sec4!=null &&
              this.sec4.equals(other.getSec4()))) &&
            ((this.csc4==null && other.getCsc4()==null) || 
             (this.csc4!=null &&
              this.csc4.equals(other.getCsc4()))) &&
            ((this.cot4==null && other.getCot4()==null) || 
             (this.cot4!=null &&
              this.cot4.equals(other.getCot4()))) &&
            ((this.arcsin4==null && other.getArcsin4()==null) || 
             (this.arcsin4!=null &&
              this.arcsin4.equals(other.getArcsin4()))) &&
            ((this.arccos4==null && other.getArccos4()==null) || 
             (this.arccos4!=null &&
              this.arccos4.equals(other.getArccos4()))) &&
            ((this.arctan4==null && other.getArctan4()==null) || 
             (this.arctan4!=null &&
              this.arctan4.equals(other.getArctan4()))) &&
            ((this.arcsec4==null && other.getArcsec4()==null) || 
             (this.arcsec4!=null &&
              this.arcsec4.equals(other.getArcsec4()))) &&
            ((this.arccsc4==null && other.getArccsc4()==null) || 
             (this.arccsc4!=null &&
              this.arccsc4.equals(other.getArccsc4()))) &&
            ((this.arccot4==null && other.getArccot4()==null) || 
             (this.arccot4!=null &&
              this.arccot4.equals(other.getArccot4()))) &&
            ((this.sinh4==null && other.getSinh4()==null) || 
             (this.sinh4!=null &&
              this.sinh4.equals(other.getSinh4()))) &&
            ((this.cosh4==null && other.getCosh4()==null) || 
             (this.cosh4!=null &&
              this.cosh4.equals(other.getCosh4()))) &&
            ((this.tanh4==null && other.getTanh4()==null) || 
             (this.tanh4!=null &&
              this.tanh4.equals(other.getTanh4()))) &&
            ((this.sech4==null && other.getSech4()==null) || 
             (this.sech4!=null &&
              this.sech4.equals(other.getSech4()))) &&
            ((this.csch4==null && other.getCsch4()==null) || 
             (this.csch4!=null &&
              this.csch4.equals(other.getCsch4()))) &&
            ((this.coth4==null && other.getCoth4()==null) || 
             (this.coth4!=null &&
              this.coth4.equals(other.getCoth4()))) &&
            ((this.arccosh4==null && other.getArccosh4()==null) || 
             (this.arccosh4!=null &&
              this.arccosh4.equals(other.getArccosh4()))) &&
            ((this.arccoth4==null && other.getArccoth4()==null) || 
             (this.arccoth4!=null &&
              this.arccoth4.equals(other.getArccoth4()))) &&
            ((this.arccsch4==null && other.getArccsch4()==null) || 
             (this.arccsch4!=null &&
              this.arccsch4.equals(other.getArccsch4()))) &&
            ((this.arcsech4==null && other.getArcsech4()==null) || 
             (this.arcsech4!=null &&
              this.arcsech4.equals(other.getArcsech4()))) &&
            ((this.arcsinh4==null && other.getArcsinh4()==null) || 
             (this.arcsinh4!=null &&
              this.arcsinh4.equals(other.getArcsinh4()))) &&
            ((this.arctanh4==null && other.getArctanh4()==null) || 
             (this.arctanh4!=null &&
              this.arctanh4.equals(other.getArctanh4()))) &&
            ((this._int4==null && other.get_int4()==null) || 
             (this._int4!=null &&
              this._int4.equals(other.get_int4()))) &&
            ((this.diff4==null && other.getDiff4()==null) || 
             (this.diff4!=null &&
              this.diff4.equals(other.getDiff4()))) &&
            ((this.partialdiff4==null && other.getPartialdiff4()==null) || 
             (this.partialdiff4!=null &&
              this.partialdiff4.equals(other.getPartialdiff4()))) &&
            ((this.limit4==null && other.getLimit4()==null) || 
             (this.limit4!=null &&
              this.limit4.equals(other.getLimit4()))) &&
            ((this.lowlimit4==null && other.getLowlimit4()==null) || 
             (this.lowlimit4!=null &&
              this.lowlimit4.equals(other.getLowlimit4()))) &&
            ((this.uplimit4==null && other.getUplimit4()==null) || 
             (this.uplimit4!=null &&
              this.uplimit4.equals(other.getUplimit4()))) &&
            ((this.tendsto4==null && other.getTendsto4()==null) || 
             (this.tendsto4!=null &&
              this.tendsto4.equals(other.getTendsto4()))) &&
            ((this.vector4==null && other.getVector4()==null) || 
             (this.vector4!=null &&
              this.vector4.equals(other.getVector4()))) &&
            ((this.matrix4==null && other.getMatrix4()==null) || 
             (this.matrix4!=null &&
              this.matrix4.equals(other.getMatrix4()))) &&
            ((this.determinant4==null && other.getDeterminant4()==null) || 
             (this.determinant4!=null &&
              this.determinant4.equals(other.getDeterminant4()))) &&
            ((this.transpose4==null && other.getTranspose4()==null) || 
             (this.transpose4!=null &&
              this.transpose4.equals(other.getTranspose4()))) &&
            ((this.selector4==null && other.getSelector4()==null) || 
             (this.selector4!=null &&
              this.selector4.equals(other.getSelector4()))) &&
            ((this.vectorproduct4==null && other.getVectorproduct4()==null) || 
             (this.vectorproduct4!=null &&
              this.vectorproduct4.equals(other.getVectorproduct4()))) &&
            ((this.scalarproduct4==null && other.getScalarproduct4()==null) || 
             (this.scalarproduct4!=null &&
              this.scalarproduct4.equals(other.getScalarproduct4()))) &&
            ((this.outerproduct4==null && other.getOuterproduct4()==null) || 
             (this.outerproduct4!=null &&
              this.outerproduct4.equals(other.getOuterproduct4()))) &&
            ((this.divergence4==null && other.getDivergence4()==null) || 
             (this.divergence4!=null &&
              this.divergence4.equals(other.getDivergence4()))) &&
            ((this.grad4==null && other.getGrad4()==null) || 
             (this.grad4!=null &&
              this.grad4.equals(other.getGrad4()))) &&
            ((this.curl4==null && other.getCurl4()==null) || 
             (this.curl4!=null &&
              this.curl4.equals(other.getCurl4()))) &&
            ((this.laplacian4==null && other.getLaplacian4()==null) || 
             (this.laplacian4!=null &&
              this.laplacian4.equals(other.getLaplacian4()))) &&
            ((this.mean4==null && other.getMean4()==null) || 
             (this.mean4!=null &&
              this.mean4.equals(other.getMean4()))) &&
            ((this.sdev4==null && other.getSdev4()==null) || 
             (this.sdev4!=null &&
              this.sdev4.equals(other.getSdev4()))) &&
            ((this.variance4==null && other.getVariance4()==null) || 
             (this.variance4!=null &&
              this.variance4.equals(other.getVariance4()))) &&
            ((this.median4==null && other.getMedian4()==null) || 
             (this.median4!=null &&
              this.median4.equals(other.getMedian4()))) &&
            ((this.mode4==null && other.getMode4()==null) || 
             (this.mode4!=null &&
              this.mode4.equals(other.getMode4()))) &&
            ((this.moment4==null && other.getMoment4()==null) || 
             (this.moment4!=null &&
              this.moment4.equals(other.getMoment4()))) &&
            ((this.momentabout4==null && other.getMomentabout4()==null) || 
             (this.momentabout4!=null &&
              this.momentabout4.equals(other.getMomentabout4()))) &&
            ((this.apply4==null && other.getApply4()==null) || 
             (this.apply4!=null &&
              this.apply4.equals(other.getApply4()))) &&
            ((this.interval4==null && other.getInterval4()==null) || 
             (this.interval4!=null &&
              this.interval4.equals(other.getInterval4()))) &&
            ((this.inverse4==null && other.getInverse4()==null) || 
             (this.inverse4!=null &&
              this.inverse4.equals(other.getInverse4()))) &&
            ((this.condition4==null && other.getCondition4()==null) || 
             (this.condition4!=null &&
              this.condition4.equals(other.getCondition4()))) &&
            ((this.declare4==null && other.getDeclare4()==null) || 
             (this.declare4!=null &&
              this.declare4.equals(other.getDeclare4()))) &&
            ((this.lambda4==null && other.getLambda4()==null) || 
             (this.lambda4!=null &&
              this.lambda4.equals(other.getLambda4()))) &&
            ((this.piecewise4==null && other.getPiecewise4()==null) || 
             (this.piecewise4!=null &&
              this.piecewise4.equals(other.getPiecewise4()))) &&
            ((this.bvar4==null && other.getBvar4()==null) || 
             (this.bvar4!=null &&
              this.bvar4.equals(other.getBvar4()))) &&
            ((this.degree4==null && other.getDegree4()==null) || 
             (this.degree4!=null &&
              this.degree4.equals(other.getDegree4()))) &&
            ((this.semantics4==null && other.getSemantics4()==null) || 
             (this.semantics4!=null &&
              this.semantics4.equals(other.getSemantics4()))) &&
            ((this.none3==null && other.getNone3()==null) || 
             (this.none3!=null &&
              this.none3.equals(other.getNone3()))) &&
            ((this.mi5==null && other.getMi5()==null) || 
             (this.mi5!=null &&
              this.mi5.equals(other.getMi5()))) &&
            ((this.mo5==null && other.getMo5()==null) || 
             (this.mo5!=null &&
              this.mo5.equals(other.getMo5()))) &&
            ((this.mn5==null && other.getMn5()==null) || 
             (this.mn5!=null &&
              this.mn5.equals(other.getMn5()))) &&
            ((this.mtext5==null && other.getMtext5()==null) || 
             (this.mtext5!=null &&
              this.mtext5.equals(other.getMtext5()))) &&
            ((this.ms5==null && other.getMs5()==null) || 
             (this.ms5!=null &&
              this.ms5.equals(other.getMs5()))) &&
            ((this.mrow5==null && other.getMrow5()==null) || 
             (this.mrow5!=null &&
              this.mrow5.equals(other.getMrow5()))) &&
            ((this.mfrac5==null && other.getMfrac5()==null) || 
             (this.mfrac5!=null &&
              this.mfrac5.equals(other.getMfrac5()))) &&
            ((this.msqrt5==null && other.getMsqrt5()==null) || 
             (this.msqrt5!=null &&
              this.msqrt5.equals(other.getMsqrt5()))) &&
            ((this.mroot5==null && other.getMroot5()==null) || 
             (this.mroot5!=null &&
              this.mroot5.equals(other.getMroot5()))) &&
            ((this.mpadded5==null && other.getMpadded5()==null) || 
             (this.mpadded5!=null &&
              this.mpadded5.equals(other.getMpadded5()))) &&
            ((this.mphantom5==null && other.getMphantom5()==null) || 
             (this.mphantom5!=null &&
              this.mphantom5.equals(other.getMphantom5()))) &&
            ((this.mfenced5==null && other.getMfenced5()==null) || 
             (this.mfenced5!=null &&
              this.mfenced5.equals(other.getMfenced5()))) &&
            ((this.menclose5==null && other.getMenclose5()==null) || 
             (this.menclose5!=null &&
              this.menclose5.equals(other.getMenclose5()))) &&
            ((this.msub5==null && other.getMsub5()==null) || 
             (this.msub5!=null &&
              this.msub5.equals(other.getMsub5()))) &&
            ((this.msup5==null && other.getMsup5()==null) || 
             (this.msup5!=null &&
              this.msup5.equals(other.getMsup5()))) &&
            ((this.msubsup5==null && other.getMsubsup5()==null) || 
             (this.msubsup5!=null &&
              this.msubsup5.equals(other.getMsubsup5()))) &&
            ((this.munder5==null && other.getMunder5()==null) || 
             (this.munder5!=null &&
              this.munder5.equals(other.getMunder5()))) &&
            ((this.mover5==null && other.getMover5()==null) || 
             (this.mover5!=null &&
              this.mover5.equals(other.getMover5()))) &&
            ((this.munderover5==null && other.getMunderover5()==null) || 
             (this.munderover5!=null &&
              this.munderover5.equals(other.getMunderover5()))) &&
            ((this.mmultiscripts5==null && other.getMmultiscripts5()==null) || 
             (this.mmultiscripts5!=null &&
              this.mmultiscripts5.equals(other.getMmultiscripts5()))) &&
            ((this.mtable5==null && other.getMtable5()==null) || 
             (this.mtable5!=null &&
              this.mtable5.equals(other.getMtable5()))) &&
            ((this.maligngroup5==null && other.getMaligngroup5()==null) || 
             (this.maligngroup5!=null &&
              this.maligngroup5.equals(other.getMaligngroup5()))) &&
            ((this.malignmark5==null && other.getMalignmark5()==null) || 
             (this.malignmark5!=null &&
              this.malignmark5.equals(other.getMalignmark5()))) &&
            ((this.mspace5==null && other.getMspace5()==null) || 
             (this.mspace5!=null &&
              this.mspace5.equals(other.getMspace5()))) &&
            ((this.maction5==null && other.getMaction5()==null) || 
             (this.maction5!=null &&
              this.maction5.equals(other.getMaction5()))) &&
            ((this.merror5==null && other.getMerror5()==null) || 
             (this.merror5!=null &&
              this.merror5.equals(other.getMerror5()))) &&
            ((this.mstyle5==null && other.getMstyle5()==null) || 
             (this.mstyle5!=null &&
              this.mstyle5.equals(other.getMstyle5()))) &&
            ((this.cn5==null && other.getCn5()==null) || 
             (this.cn5!=null &&
              this.cn5.equals(other.getCn5()))) &&
            ((this.ci5==null && other.getCi5()==null) || 
             (this.ci5!=null &&
              this.ci5.equals(other.getCi5()))) &&
            ((this.csymbol5==null && other.getCsymbol5()==null) || 
             (this.csymbol5!=null &&
              this.csymbol5.equals(other.getCsymbol5()))) &&
            ((this.abs5==null && other.getAbs5()==null) || 
             (this.abs5!=null &&
              this.abs5.equals(other.getAbs5()))) &&
            ((this.conjugate5==null && other.getConjugate5()==null) || 
             (this.conjugate5!=null &&
              this.conjugate5.equals(other.getConjugate5()))) &&
            ((this.factorial5==null && other.getFactorial5()==null) || 
             (this.factorial5!=null &&
              this.factorial5.equals(other.getFactorial5()))) &&
            ((this.arg5==null && other.getArg5()==null) || 
             (this.arg5!=null &&
              this.arg5.equals(other.getArg5()))) &&
            ((this.real5==null && other.getReal5()==null) || 
             (this.real5!=null &&
              this.real5.equals(other.getReal5()))) &&
            ((this.imaginary5==null && other.getImaginary5()==null) || 
             (this.imaginary5!=null &&
              this.imaginary5.equals(other.getImaginary5()))) &&
            ((this.floor5==null && other.getFloor5()==null) || 
             (this.floor5!=null &&
              this.floor5.equals(other.getFloor5()))) &&
            ((this.ceiling5==null && other.getCeiling5()==null) || 
             (this.ceiling5!=null &&
              this.ceiling5.equals(other.getCeiling5()))) &&
            ((this.quotient5==null && other.getQuotient5()==null) || 
             (this.quotient5!=null &&
              this.quotient5.equals(other.getQuotient5()))) &&
            ((this.divide5==null && other.getDivide5()==null) || 
             (this.divide5!=null &&
              this.divide5.equals(other.getDivide5()))) &&
            ((this.rem5==null && other.getRem5()==null) || 
             (this.rem5!=null &&
              this.rem5.equals(other.getRem5()))) &&
            ((this.minus5==null && other.getMinus5()==null) || 
             (this.minus5!=null &&
              this.minus5.equals(other.getMinus5()))) &&
            ((this.plus5==null && other.getPlus5()==null) || 
             (this.plus5!=null &&
              this.plus5.equals(other.getPlus5()))) &&
            ((this.times5==null && other.getTimes5()==null) || 
             (this.times5!=null &&
              this.times5.equals(other.getTimes5()))) &&
            ((this.power5==null && other.getPower5()==null) || 
             (this.power5!=null &&
              this.power5.equals(other.getPower5()))) &&
            ((this.root5==null && other.getRoot5()==null) || 
             (this.root5!=null &&
              this.root5.equals(other.getRoot5()))) &&
            ((this.max5==null && other.getMax5()==null) || 
             (this.max5!=null &&
              this.max5.equals(other.getMax5()))) &&
            ((this.min5==null && other.getMin5()==null) || 
             (this.min5!=null &&
              this.min5.equals(other.getMin5()))) &&
            ((this.gcd5==null && other.getGcd5()==null) || 
             (this.gcd5!=null &&
              this.gcd5.equals(other.getGcd5()))) &&
            ((this.lcm5==null && other.getLcm5()==null) || 
             (this.lcm5!=null &&
              this.lcm5.equals(other.getLcm5()))) &&
            ((this.sum5==null && other.getSum5()==null) || 
             (this.sum5!=null &&
              this.sum5.equals(other.getSum5()))) &&
            ((this.product5==null && other.getProduct5()==null) || 
             (this.product5!=null &&
              this.product5.equals(other.getProduct5()))) &&
            ((this.compose5==null && other.getCompose5()==null) || 
             (this.compose5!=null &&
              this.compose5.equals(other.getCompose5()))) &&
            ((this.domain5==null && other.getDomain5()==null) || 
             (this.domain5!=null &&
              this.domain5.equals(other.getDomain5()))) &&
            ((this.codomain5==null && other.getCodomain5()==null) || 
             (this.codomain5!=null &&
              this.codomain5.equals(other.getCodomain5()))) &&
            ((this.image5==null && other.getImage5()==null) || 
             (this.image5!=null &&
              this.image5.equals(other.getImage5()))) &&
            ((this.domainofapplication5==null && other.getDomainofapplication5()==null) || 
             (this.domainofapplication5!=null &&
              this.domainofapplication5.equals(other.getDomainofapplication5()))) &&
            ((this.ident5==null && other.getIdent5()==null) || 
             (this.ident5!=null &&
              this.ident5.equals(other.getIdent5()))) &&
            ((this.and5==null && other.getAnd5()==null) || 
             (this.and5!=null &&
              this.and5.equals(other.getAnd5()))) &&
            ((this.or5==null && other.getOr5()==null) || 
             (this.or5!=null &&
              this.or5.equals(other.getOr5()))) &&
            ((this.xor5==null && other.getXor5()==null) || 
             (this.xor5!=null &&
              this.xor5.equals(other.getXor5()))) &&
            ((this.not5==null && other.getNot5()==null) || 
             (this.not5!=null &&
              this.not5.equals(other.getNot5()))) &&
            ((this.exists5==null && other.getExists5()==null) || 
             (this.exists5!=null &&
              this.exists5.equals(other.getExists5()))) &&
            ((this.forall5==null && other.getForall5()==null) || 
             (this.forall5!=null &&
              this.forall5.equals(other.getForall5()))) &&
            ((this.implies5==null && other.getImplies5()==null) || 
             (this.implies5!=null &&
              this.implies5.equals(other.getImplies5()))) &&
            ((this.naturalnumbers5==null && other.getNaturalnumbers5()==null) || 
             (this.naturalnumbers5!=null &&
              this.naturalnumbers5.equals(other.getNaturalnumbers5()))) &&
            ((this.primes5==null && other.getPrimes5()==null) || 
             (this.primes5!=null &&
              this.primes5.equals(other.getPrimes5()))) &&
            ((this.integers5==null && other.getIntegers5()==null) || 
             (this.integers5!=null &&
              this.integers5.equals(other.getIntegers5()))) &&
            ((this.rationals5==null && other.getRationals5()==null) || 
             (this.rationals5!=null &&
              this.rationals5.equals(other.getRationals5()))) &&
            ((this.reals5==null && other.getReals5()==null) || 
             (this.reals5!=null &&
              this.reals5.equals(other.getReals5()))) &&
            ((this.complexes5==null && other.getComplexes5()==null) || 
             (this.complexes5!=null &&
              this.complexes5.equals(other.getComplexes5()))) &&
            ((this.emptyset5==null && other.getEmptyset5()==null) || 
             (this.emptyset5!=null &&
              this.emptyset5.equals(other.getEmptyset5()))) &&
            ((this.exponentiale5==null && other.getExponentiale5()==null) || 
             (this.exponentiale5!=null &&
              this.exponentiale5.equals(other.getExponentiale5()))) &&
            ((this.imaginaryi5==null && other.getImaginaryi5()==null) || 
             (this.imaginaryi5!=null &&
              this.imaginaryi5.equals(other.getImaginaryi5()))) &&
            ((this.pi5==null && other.getPi5()==null) || 
             (this.pi5!=null &&
              this.pi5.equals(other.getPi5()))) &&
            ((this.eulergamma5==null && other.getEulergamma5()==null) || 
             (this.eulergamma5!=null &&
              this.eulergamma5.equals(other.getEulergamma5()))) &&
            ((this._true5==null && other.get_true5()==null) || 
             (this._true5!=null &&
              this._true5.equals(other.get_true5()))) &&
            ((this._false5==null && other.get_false5()==null) || 
             (this._false5!=null &&
              this._false5.equals(other.get_false5()))) &&
            ((this.infinity5==null && other.getInfinity5()==null) || 
             (this.infinity5!=null &&
              this.infinity5.equals(other.getInfinity5()))) &&
            ((this.notanumber5==null && other.getNotanumber5()==null) || 
             (this.notanumber5!=null &&
              this.notanumber5.equals(other.getNotanumber5()))) &&
            ((this.set5==null && other.getSet5()==null) || 
             (this.set5!=null &&
              this.set5.equals(other.getSet5()))) &&
            ((this.list5==null && other.getList5()==null) || 
             (this.list5!=null &&
              this.list5.equals(other.getList5()))) &&
            ((this.union5==null && other.getUnion5()==null) || 
             (this.union5!=null &&
              this.union5.equals(other.getUnion5()))) &&
            ((this.intersect5==null && other.getIntersect5()==null) || 
             (this.intersect5!=null &&
              this.intersect5.equals(other.getIntersect5()))) &&
            ((this.in5==null && other.getIn5()==null) || 
             (this.in5!=null &&
              this.in5.equals(other.getIn5()))) &&
            ((this.notin5==null && other.getNotin5()==null) || 
             (this.notin5!=null &&
              this.notin5.equals(other.getNotin5()))) &&
            ((this.subset5==null && other.getSubset5()==null) || 
             (this.subset5!=null &&
              this.subset5.equals(other.getSubset5()))) &&
            ((this.prsubset5==null && other.getPrsubset5()==null) || 
             (this.prsubset5!=null &&
              this.prsubset5.equals(other.getPrsubset5()))) &&
            ((this.notsubset5==null && other.getNotsubset5()==null) || 
             (this.notsubset5!=null &&
              this.notsubset5.equals(other.getNotsubset5()))) &&
            ((this.notprsubset5==null && other.getNotprsubset5()==null) || 
             (this.notprsubset5!=null &&
              this.notprsubset5.equals(other.getNotprsubset5()))) &&
            ((this.setdiff5==null && other.getSetdiff5()==null) || 
             (this.setdiff5!=null &&
              this.setdiff5.equals(other.getSetdiff5()))) &&
            ((this.card5==null && other.getCard5()==null) || 
             (this.card5!=null &&
              this.card5.equals(other.getCard5()))) &&
            ((this.cartesianproduct5==null && other.getCartesianproduct5()==null) || 
             (this.cartesianproduct5!=null &&
              this.cartesianproduct5.equals(other.getCartesianproduct5()))) &&
            ((this.eq5==null && other.getEq5()==null) || 
             (this.eq5!=null &&
              this.eq5.equals(other.getEq5()))) &&
            ((this.neq5==null && other.getNeq5()==null) || 
             (this.neq5!=null &&
              this.neq5.equals(other.getNeq5()))) &&
            ((this.leq5==null && other.getLeq5()==null) || 
             (this.leq5!=null &&
              this.leq5.equals(other.getLeq5()))) &&
            ((this.lt5==null && other.getLt5()==null) || 
             (this.lt5!=null &&
              this.lt5.equals(other.getLt5()))) &&
            ((this.geq5==null && other.getGeq5()==null) || 
             (this.geq5!=null &&
              this.geq5.equals(other.getGeq5()))) &&
            ((this.gt5==null && other.getGt5()==null) || 
             (this.gt5!=null &&
              this.gt5.equals(other.getGt5()))) &&
            ((this.equivalent5==null && other.getEquivalent5()==null) || 
             (this.equivalent5!=null &&
              this.equivalent5.equals(other.getEquivalent5()))) &&
            ((this.approx5==null && other.getApprox5()==null) || 
             (this.approx5!=null &&
              this.approx5.equals(other.getApprox5()))) &&
            ((this.factorof5==null && other.getFactorof5()==null) || 
             (this.factorof5!=null &&
              this.factorof5.equals(other.getFactorof5()))) &&
            ((this.exp5==null && other.getExp5()==null) || 
             (this.exp5!=null &&
              this.exp5.equals(other.getExp5()))) &&
            ((this.ln5==null && other.getLn5()==null) || 
             (this.ln5!=null &&
              this.ln5.equals(other.getLn5()))) &&
            ((this.log5==null && other.getLog5()==null) || 
             (this.log5!=null &&
              this.log5.equals(other.getLog5()))) &&
            ((this.logbase5==null && other.getLogbase5()==null) || 
             (this.logbase5!=null &&
              this.logbase5.equals(other.getLogbase5()))) &&
            ((this.sin5==null && other.getSin5()==null) || 
             (this.sin5!=null &&
              this.sin5.equals(other.getSin5()))) &&
            ((this.cos5==null && other.getCos5()==null) || 
             (this.cos5!=null &&
              this.cos5.equals(other.getCos5()))) &&
            ((this.tan5==null && other.getTan5()==null) || 
             (this.tan5!=null &&
              this.tan5.equals(other.getTan5()))) &&
            ((this.sec5==null && other.getSec5()==null) || 
             (this.sec5!=null &&
              this.sec5.equals(other.getSec5()))) &&
            ((this.csc5==null && other.getCsc5()==null) || 
             (this.csc5!=null &&
              this.csc5.equals(other.getCsc5()))) &&
            ((this.cot5==null && other.getCot5()==null) || 
             (this.cot5!=null &&
              this.cot5.equals(other.getCot5()))) &&
            ((this.arcsin5==null && other.getArcsin5()==null) || 
             (this.arcsin5!=null &&
              this.arcsin5.equals(other.getArcsin5()))) &&
            ((this.arccos5==null && other.getArccos5()==null) || 
             (this.arccos5!=null &&
              this.arccos5.equals(other.getArccos5()))) &&
            ((this.arctan5==null && other.getArctan5()==null) || 
             (this.arctan5!=null &&
              this.arctan5.equals(other.getArctan5()))) &&
            ((this.arcsec5==null && other.getArcsec5()==null) || 
             (this.arcsec5!=null &&
              this.arcsec5.equals(other.getArcsec5()))) &&
            ((this.arccsc5==null && other.getArccsc5()==null) || 
             (this.arccsc5!=null &&
              this.arccsc5.equals(other.getArccsc5()))) &&
            ((this.arccot5==null && other.getArccot5()==null) || 
             (this.arccot5!=null &&
              this.arccot5.equals(other.getArccot5()))) &&
            ((this.sinh5==null && other.getSinh5()==null) || 
             (this.sinh5!=null &&
              this.sinh5.equals(other.getSinh5()))) &&
            ((this.cosh5==null && other.getCosh5()==null) || 
             (this.cosh5!=null &&
              this.cosh5.equals(other.getCosh5()))) &&
            ((this.tanh5==null && other.getTanh5()==null) || 
             (this.tanh5!=null &&
              this.tanh5.equals(other.getTanh5()))) &&
            ((this.sech5==null && other.getSech5()==null) || 
             (this.sech5!=null &&
              this.sech5.equals(other.getSech5()))) &&
            ((this.csch5==null && other.getCsch5()==null) || 
             (this.csch5!=null &&
              this.csch5.equals(other.getCsch5()))) &&
            ((this.coth5==null && other.getCoth5()==null) || 
             (this.coth5!=null &&
              this.coth5.equals(other.getCoth5()))) &&
            ((this.arccosh5==null && other.getArccosh5()==null) || 
             (this.arccosh5!=null &&
              this.arccosh5.equals(other.getArccosh5()))) &&
            ((this.arccoth5==null && other.getArccoth5()==null) || 
             (this.arccoth5!=null &&
              this.arccoth5.equals(other.getArccoth5()))) &&
            ((this.arccsch5==null && other.getArccsch5()==null) || 
             (this.arccsch5!=null &&
              this.arccsch5.equals(other.getArccsch5()))) &&
            ((this.arcsech5==null && other.getArcsech5()==null) || 
             (this.arcsech5!=null &&
              this.arcsech5.equals(other.getArcsech5()))) &&
            ((this.arcsinh5==null && other.getArcsinh5()==null) || 
             (this.arcsinh5!=null &&
              this.arcsinh5.equals(other.getArcsinh5()))) &&
            ((this.arctanh5==null && other.getArctanh5()==null) || 
             (this.arctanh5!=null &&
              this.arctanh5.equals(other.getArctanh5()))) &&
            ((this._int5==null && other.get_int5()==null) || 
             (this._int5!=null &&
              this._int5.equals(other.get_int5()))) &&
            ((this.diff5==null && other.getDiff5()==null) || 
             (this.diff5!=null &&
              this.diff5.equals(other.getDiff5()))) &&
            ((this.partialdiff5==null && other.getPartialdiff5()==null) || 
             (this.partialdiff5!=null &&
              this.partialdiff5.equals(other.getPartialdiff5()))) &&
            ((this.limit5==null && other.getLimit5()==null) || 
             (this.limit5!=null &&
              this.limit5.equals(other.getLimit5()))) &&
            ((this.lowlimit5==null && other.getLowlimit5()==null) || 
             (this.lowlimit5!=null &&
              this.lowlimit5.equals(other.getLowlimit5()))) &&
            ((this.uplimit5==null && other.getUplimit5()==null) || 
             (this.uplimit5!=null &&
              this.uplimit5.equals(other.getUplimit5()))) &&
            ((this.tendsto5==null && other.getTendsto5()==null) || 
             (this.tendsto5!=null &&
              this.tendsto5.equals(other.getTendsto5()))) &&
            ((this.vector5==null && other.getVector5()==null) || 
             (this.vector5!=null &&
              this.vector5.equals(other.getVector5()))) &&
            ((this.matrix5==null && other.getMatrix5()==null) || 
             (this.matrix5!=null &&
              this.matrix5.equals(other.getMatrix5()))) &&
            ((this.determinant5==null && other.getDeterminant5()==null) || 
             (this.determinant5!=null &&
              this.determinant5.equals(other.getDeterminant5()))) &&
            ((this.transpose5==null && other.getTranspose5()==null) || 
             (this.transpose5!=null &&
              this.transpose5.equals(other.getTranspose5()))) &&
            ((this.selector5==null && other.getSelector5()==null) || 
             (this.selector5!=null &&
              this.selector5.equals(other.getSelector5()))) &&
            ((this.vectorproduct5==null && other.getVectorproduct5()==null) || 
             (this.vectorproduct5!=null &&
              this.vectorproduct5.equals(other.getVectorproduct5()))) &&
            ((this.scalarproduct5==null && other.getScalarproduct5()==null) || 
             (this.scalarproduct5!=null &&
              this.scalarproduct5.equals(other.getScalarproduct5()))) &&
            ((this.outerproduct5==null && other.getOuterproduct5()==null) || 
             (this.outerproduct5!=null &&
              this.outerproduct5.equals(other.getOuterproduct5()))) &&
            ((this.divergence5==null && other.getDivergence5()==null) || 
             (this.divergence5!=null &&
              this.divergence5.equals(other.getDivergence5()))) &&
            ((this.grad5==null && other.getGrad5()==null) || 
             (this.grad5!=null &&
              this.grad5.equals(other.getGrad5()))) &&
            ((this.curl5==null && other.getCurl5()==null) || 
             (this.curl5!=null &&
              this.curl5.equals(other.getCurl5()))) &&
            ((this.laplacian5==null && other.getLaplacian5()==null) || 
             (this.laplacian5!=null &&
              this.laplacian5.equals(other.getLaplacian5()))) &&
            ((this.mean5==null && other.getMean5()==null) || 
             (this.mean5!=null &&
              this.mean5.equals(other.getMean5()))) &&
            ((this.sdev5==null && other.getSdev5()==null) || 
             (this.sdev5!=null &&
              this.sdev5.equals(other.getSdev5()))) &&
            ((this.variance5==null && other.getVariance5()==null) || 
             (this.variance5!=null &&
              this.variance5.equals(other.getVariance5()))) &&
            ((this.median5==null && other.getMedian5()==null) || 
             (this.median5!=null &&
              this.median5.equals(other.getMedian5()))) &&
            ((this.mode5==null && other.getMode5()==null) || 
             (this.mode5!=null &&
              this.mode5.equals(other.getMode5()))) &&
            ((this.moment5==null && other.getMoment5()==null) || 
             (this.moment5!=null &&
              this.moment5.equals(other.getMoment5()))) &&
            ((this.momentabout5==null && other.getMomentabout5()==null) || 
             (this.momentabout5!=null &&
              this.momentabout5.equals(other.getMomentabout5()))) &&
            ((this.apply5==null && other.getApply5()==null) || 
             (this.apply5!=null &&
              this.apply5.equals(other.getApply5()))) &&
            ((this.interval5==null && other.getInterval5()==null) || 
             (this.interval5!=null &&
              this.interval5.equals(other.getInterval5()))) &&
            ((this.inverse5==null && other.getInverse5()==null) || 
             (this.inverse5!=null &&
              this.inverse5.equals(other.getInverse5()))) &&
            ((this.condition5==null && other.getCondition5()==null) || 
             (this.condition5!=null &&
              this.condition5.equals(other.getCondition5()))) &&
            ((this.declare5==null && other.getDeclare5()==null) || 
             (this.declare5!=null &&
              this.declare5.equals(other.getDeclare5()))) &&
            ((this.lambda5==null && other.getLambda5()==null) || 
             (this.lambda5!=null &&
              this.lambda5.equals(other.getLambda5()))) &&
            ((this.piecewise5==null && other.getPiecewise5()==null) || 
             (this.piecewise5!=null &&
              this.piecewise5.equals(other.getPiecewise5()))) &&
            ((this.bvar5==null && other.getBvar5()==null) || 
             (this.bvar5!=null &&
              this.bvar5.equals(other.getBvar5()))) &&
            ((this.degree5==null && other.getDegree5()==null) || 
             (this.degree5!=null &&
              this.degree5.equals(other.getDegree5()))) &&
            ((this.semantics5==null && other.getSemantics5()==null) || 
             (this.semantics5!=null &&
              this.semantics5.equals(other.getSemantics5()))) &&
            ((this.none4==null && other.getNone4()==null) || 
             (this.none4!=null &&
              this.none4.equals(other.getNone4()))) &&
            ((this._class==null && other.get_class()==null) || 
             (this._class!=null &&
              this._class.equals(other.get_class()))) &&
            ((this.style==null && other.getStyle()==null) || 
             (this.style!=null &&
              this.style.equals(other.getStyle()))) &&
            ((this.xref==null && other.getXref()==null) || 
             (this.xref!=null &&
              this.xref.equals(other.getXref()))) &&
            ((this.id==null && other.getId()==null) || 
             (this.id!=null &&
              this.id.equals(other.getId()))) &&
            ((this.href==null && other.getHref()==null) || 
             (this.href!=null &&
              this.href.equals(other.getHref())));
        __equalsCalc = null;
        return _equals;
    }

    private boolean __hashCodeCalc = false;
    public synchronized int hashCode() {
        if (__hashCodeCalc) {
            return 0;
        }
        __hashCodeCalc = true;
        int _hashCode = 1;
        if (getMi() != null) {
            _hashCode += getMi().hashCode();
        }
        if (getMo() != null) {
            _hashCode += getMo().hashCode();
        }
        if (getMn() != null) {
            _hashCode += getMn().hashCode();
        }
        if (getMtext() != null) {
            _hashCode += getMtext().hashCode();
        }
        if (getMs() != null) {
            _hashCode += getMs().hashCode();
        }
        if (getMrow() != null) {
            _hashCode += getMrow().hashCode();
        }
        if (getMfrac() != null) {
            _hashCode += getMfrac().hashCode();
        }
        if (getMsqrt() != null) {
            _hashCode += getMsqrt().hashCode();
        }
        if (getMroot() != null) {
            _hashCode += getMroot().hashCode();
        }
        if (getMpadded() != null) {
            _hashCode += getMpadded().hashCode();
        }
        if (getMphantom() != null) {
            _hashCode += getMphantom().hashCode();
        }
        if (getMfenced() != null) {
            _hashCode += getMfenced().hashCode();
        }
        if (getMenclose() != null) {
            _hashCode += getMenclose().hashCode();
        }
        if (getMsub() != null) {
            _hashCode += getMsub().hashCode();
        }
        if (getMsup() != null) {
            _hashCode += getMsup().hashCode();
        }
        if (getMsubsup() != null) {
            _hashCode += getMsubsup().hashCode();
        }
        if (getMunder() != null) {
            _hashCode += getMunder().hashCode();
        }
        if (getMover() != null) {
            _hashCode += getMover().hashCode();
        }
        if (getMunderover() != null) {
            _hashCode += getMunderover().hashCode();
        }
        if (getMmultiscripts() != null) {
            _hashCode += getMmultiscripts().hashCode();
        }
        if (getMtable() != null) {
            _hashCode += getMtable().hashCode();
        }
        if (getMaligngroup() != null) {
            _hashCode += getMaligngroup().hashCode();
        }
        if (getMalignmark() != null) {
            _hashCode += getMalignmark().hashCode();
        }
        if (getMspace() != null) {
            _hashCode += getMspace().hashCode();
        }
        if (getMaction() != null) {
            _hashCode += getMaction().hashCode();
        }
        if (getMerror() != null) {
            _hashCode += getMerror().hashCode();
        }
        if (getMstyle() != null) {
            _hashCode += getMstyle().hashCode();
        }
        if (getCn() != null) {
            _hashCode += getCn().hashCode();
        }
        if (getCi() != null) {
            _hashCode += getCi().hashCode();
        }
        if (getCsymbol() != null) {
            _hashCode += getCsymbol().hashCode();
        }
        if (getAbs() != null) {
            _hashCode += getAbs().hashCode();
        }
        if (getConjugate() != null) {
            _hashCode += getConjugate().hashCode();
        }
        if (getFactorial() != null) {
            _hashCode += getFactorial().hashCode();
        }
        if (getArg() != null) {
            _hashCode += getArg().hashCode();
        }
        if (getReal() != null) {
            _hashCode += getReal().hashCode();
        }
        if (getImaginary() != null) {
            _hashCode += getImaginary().hashCode();
        }
        if (getFloor() != null) {
            _hashCode += getFloor().hashCode();
        }
        if (getCeiling() != null) {
            _hashCode += getCeiling().hashCode();
        }
        if (getQuotient() != null) {
            _hashCode += getQuotient().hashCode();
        }
        if (getDivide() != null) {
            _hashCode += getDivide().hashCode();
        }
        if (getRem() != null) {
            _hashCode += getRem().hashCode();
        }
        if (getMinus() != null) {
            _hashCode += getMinus().hashCode();
        }
        if (getPlus() != null) {
            _hashCode += getPlus().hashCode();
        }
        if (getTimes() != null) {
            _hashCode += getTimes().hashCode();
        }
        if (getPower() != null) {
            _hashCode += getPower().hashCode();
        }
        if (getRoot() != null) {
            _hashCode += getRoot().hashCode();
        }
        if (getMax() != null) {
            _hashCode += getMax().hashCode();
        }
        if (getMin() != null) {
            _hashCode += getMin().hashCode();
        }
        if (getGcd() != null) {
            _hashCode += getGcd().hashCode();
        }
        if (getLcm() != null) {
            _hashCode += getLcm().hashCode();
        }
        if (getSum() != null) {
            _hashCode += getSum().hashCode();
        }
        if (getProduct() != null) {
            _hashCode += getProduct().hashCode();
        }
        if (getCompose() != null) {
            _hashCode += getCompose().hashCode();
        }
        if (getDomain() != null) {
            _hashCode += getDomain().hashCode();
        }
        if (getCodomain() != null) {
            _hashCode += getCodomain().hashCode();
        }
        if (getImage() != null) {
            _hashCode += getImage().hashCode();
        }
        if (getDomainofapplication() != null) {
            _hashCode += getDomainofapplication().hashCode();
        }
        if (getIdent() != null) {
            _hashCode += getIdent().hashCode();
        }
        if (getAnd() != null) {
            _hashCode += getAnd().hashCode();
        }
        if (getOr() != null) {
            _hashCode += getOr().hashCode();
        }
        if (getXor() != null) {
            _hashCode += getXor().hashCode();
        }
        if (getNot() != null) {
            _hashCode += getNot().hashCode();
        }
        if (getExists() != null) {
            _hashCode += getExists().hashCode();
        }
        if (getForall() != null) {
            _hashCode += getForall().hashCode();
        }
        if (getImplies() != null) {
            _hashCode += getImplies().hashCode();
        }
        if (getNaturalnumbers() != null) {
            _hashCode += getNaturalnumbers().hashCode();
        }
        if (getPrimes() != null) {
            _hashCode += getPrimes().hashCode();
        }
        if (getIntegers() != null) {
            _hashCode += getIntegers().hashCode();
        }
        if (getRationals() != null) {
            _hashCode += getRationals().hashCode();
        }
        if (getReals() != null) {
            _hashCode += getReals().hashCode();
        }
        if (getComplexes() != null) {
            _hashCode += getComplexes().hashCode();
        }
        if (getEmptyset() != null) {
            _hashCode += getEmptyset().hashCode();
        }
        if (getExponentiale() != null) {
            _hashCode += getExponentiale().hashCode();
        }
        if (getImaginaryi() != null) {
            _hashCode += getImaginaryi().hashCode();
        }
        if (getPi() != null) {
            _hashCode += getPi().hashCode();
        }
        if (getEulergamma() != null) {
            _hashCode += getEulergamma().hashCode();
        }
        if (get_true() != null) {
            _hashCode += get_true().hashCode();
        }
        if (get_false() != null) {
            _hashCode += get_false().hashCode();
        }
        if (getInfinity() != null) {
            _hashCode += getInfinity().hashCode();
        }
        if (getNotanumber() != null) {
            _hashCode += getNotanumber().hashCode();
        }
        if (getSet() != null) {
            _hashCode += getSet().hashCode();
        }
        if (getList() != null) {
            _hashCode += getList().hashCode();
        }
        if (getUnion() != null) {
            _hashCode += getUnion().hashCode();
        }
        if (getIntersect() != null) {
            _hashCode += getIntersect().hashCode();
        }
        if (getIn() != null) {
            _hashCode += getIn().hashCode();
        }
        if (getNotin() != null) {
            _hashCode += getNotin().hashCode();
        }
        if (getSubset() != null) {
            _hashCode += getSubset().hashCode();
        }
        if (getPrsubset() != null) {
            _hashCode += getPrsubset().hashCode();
        }
        if (getNotsubset() != null) {
            _hashCode += getNotsubset().hashCode();
        }
        if (getNotprsubset() != null) {
            _hashCode += getNotprsubset().hashCode();
        }
        if (getSetdiff() != null) {
            _hashCode += getSetdiff().hashCode();
        }
        if (getCard() != null) {
            _hashCode += getCard().hashCode();
        }
        if (getCartesianproduct() != null) {
            _hashCode += getCartesianproduct().hashCode();
        }
        if (getEq() != null) {
            _hashCode += getEq().hashCode();
        }
        if (getNeq() != null) {
            _hashCode += getNeq().hashCode();
        }
        if (getLeq() != null) {
            _hashCode += getLeq().hashCode();
        }
        if (getLt() != null) {
            _hashCode += getLt().hashCode();
        }
        if (getGeq() != null) {
            _hashCode += getGeq().hashCode();
        }
        if (getGt() != null) {
            _hashCode += getGt().hashCode();
        }
        if (getEquivalent() != null) {
            _hashCode += getEquivalent().hashCode();
        }
        if (getApprox() != null) {
            _hashCode += getApprox().hashCode();
        }
        if (getFactorof() != null) {
            _hashCode += getFactorof().hashCode();
        }
        if (getExp() != null) {
            _hashCode += getExp().hashCode();
        }
        if (getLn() != null) {
            _hashCode += getLn().hashCode();
        }
        if (getLog() != null) {
            _hashCode += getLog().hashCode();
        }
        if (getLogbase() != null) {
            _hashCode += getLogbase().hashCode();
        }
        if (getSin() != null) {
            _hashCode += getSin().hashCode();
        }
        if (getCos() != null) {
            _hashCode += getCos().hashCode();
        }
        if (getTan() != null) {
            _hashCode += getTan().hashCode();
        }
        if (getSec() != null) {
            _hashCode += getSec().hashCode();
        }
        if (getCsc() != null) {
            _hashCode += getCsc().hashCode();
        }
        if (getCot() != null) {
            _hashCode += getCot().hashCode();
        }
        if (getArcsin() != null) {
            _hashCode += getArcsin().hashCode();
        }
        if (getArccos() != null) {
            _hashCode += getArccos().hashCode();
        }
        if (getArctan() != null) {
            _hashCode += getArctan().hashCode();
        }
        if (getArcsec() != null) {
            _hashCode += getArcsec().hashCode();
        }
        if (getArccsc() != null) {
            _hashCode += getArccsc().hashCode();
        }
        if (getArccot() != null) {
            _hashCode += getArccot().hashCode();
        }
        if (getSinh() != null) {
            _hashCode += getSinh().hashCode();
        }
        if (getCosh() != null) {
            _hashCode += getCosh().hashCode();
        }
        if (getTanh() != null) {
            _hashCode += getTanh().hashCode();
        }
        if (getSech() != null) {
            _hashCode += getSech().hashCode();
        }
        if (getCsch() != null) {
            _hashCode += getCsch().hashCode();
        }
        if (getCoth() != null) {
            _hashCode += getCoth().hashCode();
        }
        if (getArccosh() != null) {
            _hashCode += getArccosh().hashCode();
        }
        if (getArccoth() != null) {
            _hashCode += getArccoth().hashCode();
        }
        if (getArccsch() != null) {
            _hashCode += getArccsch().hashCode();
        }
        if (getArcsech() != null) {
            _hashCode += getArcsech().hashCode();
        }
        if (getArcsinh() != null) {
            _hashCode += getArcsinh().hashCode();
        }
        if (getArctanh() != null) {
            _hashCode += getArctanh().hashCode();
        }
        if (get_int() != null) {
            _hashCode += get_int().hashCode();
        }
        if (getDiff() != null) {
            _hashCode += getDiff().hashCode();
        }
        if (getPartialdiff() != null) {
            _hashCode += getPartialdiff().hashCode();
        }
        if (getLimit() != null) {
            _hashCode += getLimit().hashCode();
        }
        if (getLowlimit() != null) {
            _hashCode += getLowlimit().hashCode();
        }
        if (getUplimit() != null) {
            _hashCode += getUplimit().hashCode();
        }
        if (getTendsto() != null) {
            _hashCode += getTendsto().hashCode();
        }
        if (getVector() != null) {
            _hashCode += getVector().hashCode();
        }
        if (getMatrix() != null) {
            _hashCode += getMatrix().hashCode();
        }
        if (getDeterminant() != null) {
            _hashCode += getDeterminant().hashCode();
        }
        if (getTranspose() != null) {
            _hashCode += getTranspose().hashCode();
        }
        if (getSelector() != null) {
            _hashCode += getSelector().hashCode();
        }
        if (getVectorproduct() != null) {
            _hashCode += getVectorproduct().hashCode();
        }
        if (getScalarproduct() != null) {
            _hashCode += getScalarproduct().hashCode();
        }
        if (getOuterproduct() != null) {
            _hashCode += getOuterproduct().hashCode();
        }
        if (getDivergence() != null) {
            _hashCode += getDivergence().hashCode();
        }
        if (getGrad() != null) {
            _hashCode += getGrad().hashCode();
        }
        if (getCurl() != null) {
            _hashCode += getCurl().hashCode();
        }
        if (getLaplacian() != null) {
            _hashCode += getLaplacian().hashCode();
        }
        if (getMean() != null) {
            _hashCode += getMean().hashCode();
        }
        if (getSdev() != null) {
            _hashCode += getSdev().hashCode();
        }
        if (getVariance() != null) {
            _hashCode += getVariance().hashCode();
        }
        if (getMedian() != null) {
            _hashCode += getMedian().hashCode();
        }
        if (getMode() != null) {
            _hashCode += getMode().hashCode();
        }
        if (getMoment() != null) {
            _hashCode += getMoment().hashCode();
        }
        if (getMomentabout() != null) {
            _hashCode += getMomentabout().hashCode();
        }
        if (getApply() != null) {
            _hashCode += getApply().hashCode();
        }
        if (getInterval() != null) {
            _hashCode += getInterval().hashCode();
        }
        if (getInverse() != null) {
            _hashCode += getInverse().hashCode();
        }
        if (getCondition() != null) {
            _hashCode += getCondition().hashCode();
        }
        if (getDeclare() != null) {
            _hashCode += getDeclare().hashCode();
        }
        if (getLambda() != null) {
            _hashCode += getLambda().hashCode();
        }
        if (getPiecewise() != null) {
            _hashCode += getPiecewise().hashCode();
        }
        if (getBvar() != null) {
            _hashCode += getBvar().hashCode();
        }
        if (getDegree() != null) {
            _hashCode += getDegree().hashCode();
        }
        if (getSemantics() != null) {
            _hashCode += getSemantics().hashCode();
        }
        if (getMi2() != null) {
            _hashCode += getMi2().hashCode();
        }
        if (getMo2() != null) {
            _hashCode += getMo2().hashCode();
        }
        if (getMn2() != null) {
            _hashCode += getMn2().hashCode();
        }
        if (getMtext2() != null) {
            _hashCode += getMtext2().hashCode();
        }
        if (getMs2() != null) {
            _hashCode += getMs2().hashCode();
        }
        if (getMrow2() != null) {
            _hashCode += getMrow2().hashCode();
        }
        if (getMfrac2() != null) {
            _hashCode += getMfrac2().hashCode();
        }
        if (getMsqrt2() != null) {
            _hashCode += getMsqrt2().hashCode();
        }
        if (getMroot2() != null) {
            _hashCode += getMroot2().hashCode();
        }
        if (getMpadded2() != null) {
            _hashCode += getMpadded2().hashCode();
        }
        if (getMphantom2() != null) {
            _hashCode += getMphantom2().hashCode();
        }
        if (getMfenced2() != null) {
            _hashCode += getMfenced2().hashCode();
        }
        if (getMenclose2() != null) {
            _hashCode += getMenclose2().hashCode();
        }
        if (getMsub2() != null) {
            _hashCode += getMsub2().hashCode();
        }
        if (getMsup2() != null) {
            _hashCode += getMsup2().hashCode();
        }
        if (getMsubsup2() != null) {
            _hashCode += getMsubsup2().hashCode();
        }
        if (getMunder2() != null) {
            _hashCode += getMunder2().hashCode();
        }
        if (getMover2() != null) {
            _hashCode += getMover2().hashCode();
        }
        if (getMunderover2() != null) {
            _hashCode += getMunderover2().hashCode();
        }
        if (getMmultiscripts2() != null) {
            _hashCode += getMmultiscripts2().hashCode();
        }
        if (getMtable2() != null) {
            _hashCode += getMtable2().hashCode();
        }
        if (getMaligngroup2() != null) {
            _hashCode += getMaligngroup2().hashCode();
        }
        if (getMalignmark2() != null) {
            _hashCode += getMalignmark2().hashCode();
        }
        if (getMspace2() != null) {
            _hashCode += getMspace2().hashCode();
        }
        if (getMaction2() != null) {
            _hashCode += getMaction2().hashCode();
        }
        if (getMerror2() != null) {
            _hashCode += getMerror2().hashCode();
        }
        if (getMstyle2() != null) {
            _hashCode += getMstyle2().hashCode();
        }
        if (getCn2() != null) {
            _hashCode += getCn2().hashCode();
        }
        if (getCi2() != null) {
            _hashCode += getCi2().hashCode();
        }
        if (getCsymbol2() != null) {
            _hashCode += getCsymbol2().hashCode();
        }
        if (getAbs2() != null) {
            _hashCode += getAbs2().hashCode();
        }
        if (getConjugate2() != null) {
            _hashCode += getConjugate2().hashCode();
        }
        if (getFactorial2() != null) {
            _hashCode += getFactorial2().hashCode();
        }
        if (getArg2() != null) {
            _hashCode += getArg2().hashCode();
        }
        if (getReal2() != null) {
            _hashCode += getReal2().hashCode();
        }
        if (getImaginary2() != null) {
            _hashCode += getImaginary2().hashCode();
        }
        if (getFloor2() != null) {
            _hashCode += getFloor2().hashCode();
        }
        if (getCeiling2() != null) {
            _hashCode += getCeiling2().hashCode();
        }
        if (getQuotient2() != null) {
            _hashCode += getQuotient2().hashCode();
        }
        if (getDivide2() != null) {
            _hashCode += getDivide2().hashCode();
        }
        if (getRem2() != null) {
            _hashCode += getRem2().hashCode();
        }
        if (getMinus2() != null) {
            _hashCode += getMinus2().hashCode();
        }
        if (getPlus2() != null) {
            _hashCode += getPlus2().hashCode();
        }
        if (getTimes2() != null) {
            _hashCode += getTimes2().hashCode();
        }
        if (getPower2() != null) {
            _hashCode += getPower2().hashCode();
        }
        if (getRoot2() != null) {
            _hashCode += getRoot2().hashCode();
        }
        if (getMax2() != null) {
            _hashCode += getMax2().hashCode();
        }
        if (getMin2() != null) {
            _hashCode += getMin2().hashCode();
        }
        if (getGcd2() != null) {
            _hashCode += getGcd2().hashCode();
        }
        if (getLcm2() != null) {
            _hashCode += getLcm2().hashCode();
        }
        if (getSum2() != null) {
            _hashCode += getSum2().hashCode();
        }
        if (getProduct2() != null) {
            _hashCode += getProduct2().hashCode();
        }
        if (getCompose2() != null) {
            _hashCode += getCompose2().hashCode();
        }
        if (getDomain2() != null) {
            _hashCode += getDomain2().hashCode();
        }
        if (getCodomain2() != null) {
            _hashCode += getCodomain2().hashCode();
        }
        if (getImage2() != null) {
            _hashCode += getImage2().hashCode();
        }
        if (getDomainofapplication2() != null) {
            _hashCode += getDomainofapplication2().hashCode();
        }
        if (getIdent2() != null) {
            _hashCode += getIdent2().hashCode();
        }
        if (getAnd2() != null) {
            _hashCode += getAnd2().hashCode();
        }
        if (getOr2() != null) {
            _hashCode += getOr2().hashCode();
        }
        if (getXor2() != null) {
            _hashCode += getXor2().hashCode();
        }
        if (getNot2() != null) {
            _hashCode += getNot2().hashCode();
        }
        if (getExists2() != null) {
            _hashCode += getExists2().hashCode();
        }
        if (getForall2() != null) {
            _hashCode += getForall2().hashCode();
        }
        if (getImplies2() != null) {
            _hashCode += getImplies2().hashCode();
        }
        if (getNaturalnumbers2() != null) {
            _hashCode += getNaturalnumbers2().hashCode();
        }
        if (getPrimes2() != null) {
            _hashCode += getPrimes2().hashCode();
        }
        if (getIntegers2() != null) {
            _hashCode += getIntegers2().hashCode();
        }
        if (getRationals2() != null) {
            _hashCode += getRationals2().hashCode();
        }
        if (getReals2() != null) {
            _hashCode += getReals2().hashCode();
        }
        if (getComplexes2() != null) {
            _hashCode += getComplexes2().hashCode();
        }
        if (getEmptyset2() != null) {
            _hashCode += getEmptyset2().hashCode();
        }
        if (getExponentiale2() != null) {
            _hashCode += getExponentiale2().hashCode();
        }
        if (getImaginaryi2() != null) {
            _hashCode += getImaginaryi2().hashCode();
        }
        if (getPi2() != null) {
            _hashCode += getPi2().hashCode();
        }
        if (getEulergamma2() != null) {
            _hashCode += getEulergamma2().hashCode();
        }
        if (get_true2() != null) {
            _hashCode += get_true2().hashCode();
        }
        if (get_false2() != null) {
            _hashCode += get_false2().hashCode();
        }
        if (getInfinity2() != null) {
            _hashCode += getInfinity2().hashCode();
        }
        if (getNotanumber2() != null) {
            _hashCode += getNotanumber2().hashCode();
        }
        if (getSet2() != null) {
            _hashCode += getSet2().hashCode();
        }
        if (getList2() != null) {
            _hashCode += getList2().hashCode();
        }
        if (getUnion2() != null) {
            _hashCode += getUnion2().hashCode();
        }
        if (getIntersect2() != null) {
            _hashCode += getIntersect2().hashCode();
        }
        if (getIn2() != null) {
            _hashCode += getIn2().hashCode();
        }
        if (getNotin2() != null) {
            _hashCode += getNotin2().hashCode();
        }
        if (getSubset2() != null) {
            _hashCode += getSubset2().hashCode();
        }
        if (getPrsubset2() != null) {
            _hashCode += getPrsubset2().hashCode();
        }
        if (getNotsubset2() != null) {
            _hashCode += getNotsubset2().hashCode();
        }
        if (getNotprsubset2() != null) {
            _hashCode += getNotprsubset2().hashCode();
        }
        if (getSetdiff2() != null) {
            _hashCode += getSetdiff2().hashCode();
        }
        if (getCard2() != null) {
            _hashCode += getCard2().hashCode();
        }
        if (getCartesianproduct2() != null) {
            _hashCode += getCartesianproduct2().hashCode();
        }
        if (getEq2() != null) {
            _hashCode += getEq2().hashCode();
        }
        if (getNeq2() != null) {
            _hashCode += getNeq2().hashCode();
        }
        if (getLeq2() != null) {
            _hashCode += getLeq2().hashCode();
        }
        if (getLt2() != null) {
            _hashCode += getLt2().hashCode();
        }
        if (getGeq2() != null) {
            _hashCode += getGeq2().hashCode();
        }
        if (getGt2() != null) {
            _hashCode += getGt2().hashCode();
        }
        if (getEquivalent2() != null) {
            _hashCode += getEquivalent2().hashCode();
        }
        if (getApprox2() != null) {
            _hashCode += getApprox2().hashCode();
        }
        if (getFactorof2() != null) {
            _hashCode += getFactorof2().hashCode();
        }
        if (getExp2() != null) {
            _hashCode += getExp2().hashCode();
        }
        if (getLn2() != null) {
            _hashCode += getLn2().hashCode();
        }
        if (getLog2() != null) {
            _hashCode += getLog2().hashCode();
        }
        if (getLogbase2() != null) {
            _hashCode += getLogbase2().hashCode();
        }
        if (getSin2() != null) {
            _hashCode += getSin2().hashCode();
        }
        if (getCos2() != null) {
            _hashCode += getCos2().hashCode();
        }
        if (getTan2() != null) {
            _hashCode += getTan2().hashCode();
        }
        if (getSec2() != null) {
            _hashCode += getSec2().hashCode();
        }
        if (getCsc2() != null) {
            _hashCode += getCsc2().hashCode();
        }
        if (getCot2() != null) {
            _hashCode += getCot2().hashCode();
        }
        if (getArcsin2() != null) {
            _hashCode += getArcsin2().hashCode();
        }
        if (getArccos2() != null) {
            _hashCode += getArccos2().hashCode();
        }
        if (getArctan2() != null) {
            _hashCode += getArctan2().hashCode();
        }
        if (getArcsec2() != null) {
            _hashCode += getArcsec2().hashCode();
        }
        if (getArccsc2() != null) {
            _hashCode += getArccsc2().hashCode();
        }
        if (getArccot2() != null) {
            _hashCode += getArccot2().hashCode();
        }
        if (getSinh2() != null) {
            _hashCode += getSinh2().hashCode();
        }
        if (getCosh2() != null) {
            _hashCode += getCosh2().hashCode();
        }
        if (getTanh2() != null) {
            _hashCode += getTanh2().hashCode();
        }
        if (getSech2() != null) {
            _hashCode += getSech2().hashCode();
        }
        if (getCsch2() != null) {
            _hashCode += getCsch2().hashCode();
        }
        if (getCoth2() != null) {
            _hashCode += getCoth2().hashCode();
        }
        if (getArccosh2() != null) {
            _hashCode += getArccosh2().hashCode();
        }
        if (getArccoth2() != null) {
            _hashCode += getArccoth2().hashCode();
        }
        if (getArccsch2() != null) {
            _hashCode += getArccsch2().hashCode();
        }
        if (getArcsech2() != null) {
            _hashCode += getArcsech2().hashCode();
        }
        if (getArcsinh2() != null) {
            _hashCode += getArcsinh2().hashCode();
        }
        if (getArctanh2() != null) {
            _hashCode += getArctanh2().hashCode();
        }
        if (get_int2() != null) {
            _hashCode += get_int2().hashCode();
        }
        if (getDiff2() != null) {
            _hashCode += getDiff2().hashCode();
        }
        if (getPartialdiff2() != null) {
            _hashCode += getPartialdiff2().hashCode();
        }
        if (getLimit2() != null) {
            _hashCode += getLimit2().hashCode();
        }
        if (getLowlimit2() != null) {
            _hashCode += getLowlimit2().hashCode();
        }
        if (getUplimit2() != null) {
            _hashCode += getUplimit2().hashCode();
        }
        if (getTendsto2() != null) {
            _hashCode += getTendsto2().hashCode();
        }
        if (getVector2() != null) {
            _hashCode += getVector2().hashCode();
        }
        if (getMatrix2() != null) {
            _hashCode += getMatrix2().hashCode();
        }
        if (getDeterminant2() != null) {
            _hashCode += getDeterminant2().hashCode();
        }
        if (getTranspose2() != null) {
            _hashCode += getTranspose2().hashCode();
        }
        if (getSelector2() != null) {
            _hashCode += getSelector2().hashCode();
        }
        if (getVectorproduct2() != null) {
            _hashCode += getVectorproduct2().hashCode();
        }
        if (getScalarproduct2() != null) {
            _hashCode += getScalarproduct2().hashCode();
        }
        if (getOuterproduct2() != null) {
            _hashCode += getOuterproduct2().hashCode();
        }
        if (getDivergence2() != null) {
            _hashCode += getDivergence2().hashCode();
        }
        if (getGrad2() != null) {
            _hashCode += getGrad2().hashCode();
        }
        if (getCurl2() != null) {
            _hashCode += getCurl2().hashCode();
        }
        if (getLaplacian2() != null) {
            _hashCode += getLaplacian2().hashCode();
        }
        if (getMean2() != null) {
            _hashCode += getMean2().hashCode();
        }
        if (getSdev2() != null) {
            _hashCode += getSdev2().hashCode();
        }
        if (getVariance2() != null) {
            _hashCode += getVariance2().hashCode();
        }
        if (getMedian2() != null) {
            _hashCode += getMedian2().hashCode();
        }
        if (getMode2() != null) {
            _hashCode += getMode2().hashCode();
        }
        if (getMoment2() != null) {
            _hashCode += getMoment2().hashCode();
        }
        if (getMomentabout2() != null) {
            _hashCode += getMomentabout2().hashCode();
        }
        if (getApply2() != null) {
            _hashCode += getApply2().hashCode();
        }
        if (getInterval2() != null) {
            _hashCode += getInterval2().hashCode();
        }
        if (getInverse2() != null) {
            _hashCode += getInverse2().hashCode();
        }
        if (getCondition2() != null) {
            _hashCode += getCondition2().hashCode();
        }
        if (getDeclare2() != null) {
            _hashCode += getDeclare2().hashCode();
        }
        if (getLambda2() != null) {
            _hashCode += getLambda2().hashCode();
        }
        if (getPiecewise2() != null) {
            _hashCode += getPiecewise2().hashCode();
        }
        if (getBvar2() != null) {
            _hashCode += getBvar2().hashCode();
        }
        if (getDegree2() != null) {
            _hashCode += getDegree2().hashCode();
        }
        if (getSemantics2() != null) {
            _hashCode += getSemantics2().hashCode();
        }
        if (getNone() != null) {
            _hashCode += getNone().hashCode();
        }
        if (getMi3() != null) {
            _hashCode += getMi3().hashCode();
        }
        if (getMo3() != null) {
            _hashCode += getMo3().hashCode();
        }
        if (getMn3() != null) {
            _hashCode += getMn3().hashCode();
        }
        if (getMtext3() != null) {
            _hashCode += getMtext3().hashCode();
        }
        if (getMs3() != null) {
            _hashCode += getMs3().hashCode();
        }
        if (getMrow3() != null) {
            _hashCode += getMrow3().hashCode();
        }
        if (getMfrac3() != null) {
            _hashCode += getMfrac3().hashCode();
        }
        if (getMsqrt3() != null) {
            _hashCode += getMsqrt3().hashCode();
        }
        if (getMroot3() != null) {
            _hashCode += getMroot3().hashCode();
        }
        if (getMpadded3() != null) {
            _hashCode += getMpadded3().hashCode();
        }
        if (getMphantom3() != null) {
            _hashCode += getMphantom3().hashCode();
        }
        if (getMfenced3() != null) {
            _hashCode += getMfenced3().hashCode();
        }
        if (getMenclose3() != null) {
            _hashCode += getMenclose3().hashCode();
        }
        if (getMsub3() != null) {
            _hashCode += getMsub3().hashCode();
        }
        if (getMsup3() != null) {
            _hashCode += getMsup3().hashCode();
        }
        if (getMsubsup3() != null) {
            _hashCode += getMsubsup3().hashCode();
        }
        if (getMunder3() != null) {
            _hashCode += getMunder3().hashCode();
        }
        if (getMover3() != null) {
            _hashCode += getMover3().hashCode();
        }
        if (getMunderover3() != null) {
            _hashCode += getMunderover3().hashCode();
        }
        if (getMmultiscripts3() != null) {
            _hashCode += getMmultiscripts3().hashCode();
        }
        if (getMtable3() != null) {
            _hashCode += getMtable3().hashCode();
        }
        if (getMaligngroup3() != null) {
            _hashCode += getMaligngroup3().hashCode();
        }
        if (getMalignmark3() != null) {
            _hashCode += getMalignmark3().hashCode();
        }
        if (getMspace3() != null) {
            _hashCode += getMspace3().hashCode();
        }
        if (getMaction3() != null) {
            _hashCode += getMaction3().hashCode();
        }
        if (getMerror3() != null) {
            _hashCode += getMerror3().hashCode();
        }
        if (getMstyle3() != null) {
            _hashCode += getMstyle3().hashCode();
        }
        if (getCn3() != null) {
            _hashCode += getCn3().hashCode();
        }
        if (getCi3() != null) {
            _hashCode += getCi3().hashCode();
        }
        if (getCsymbol3() != null) {
            _hashCode += getCsymbol3().hashCode();
        }
        if (getAbs3() != null) {
            _hashCode += getAbs3().hashCode();
        }
        if (getConjugate3() != null) {
            _hashCode += getConjugate3().hashCode();
        }
        if (getFactorial3() != null) {
            _hashCode += getFactorial3().hashCode();
        }
        if (getArg3() != null) {
            _hashCode += getArg3().hashCode();
        }
        if (getReal3() != null) {
            _hashCode += getReal3().hashCode();
        }
        if (getImaginary3() != null) {
            _hashCode += getImaginary3().hashCode();
        }
        if (getFloor3() != null) {
            _hashCode += getFloor3().hashCode();
        }
        if (getCeiling3() != null) {
            _hashCode += getCeiling3().hashCode();
        }
        if (getQuotient3() != null) {
            _hashCode += getQuotient3().hashCode();
        }
        if (getDivide3() != null) {
            _hashCode += getDivide3().hashCode();
        }
        if (getRem3() != null) {
            _hashCode += getRem3().hashCode();
        }
        if (getMinus3() != null) {
            _hashCode += getMinus3().hashCode();
        }
        if (getPlus3() != null) {
            _hashCode += getPlus3().hashCode();
        }
        if (getTimes3() != null) {
            _hashCode += getTimes3().hashCode();
        }
        if (getPower3() != null) {
            _hashCode += getPower3().hashCode();
        }
        if (getRoot3() != null) {
            _hashCode += getRoot3().hashCode();
        }
        if (getMax3() != null) {
            _hashCode += getMax3().hashCode();
        }
        if (getMin3() != null) {
            _hashCode += getMin3().hashCode();
        }
        if (getGcd3() != null) {
            _hashCode += getGcd3().hashCode();
        }
        if (getLcm3() != null) {
            _hashCode += getLcm3().hashCode();
        }
        if (getSum3() != null) {
            _hashCode += getSum3().hashCode();
        }
        if (getProduct3() != null) {
            _hashCode += getProduct3().hashCode();
        }
        if (getCompose3() != null) {
            _hashCode += getCompose3().hashCode();
        }
        if (getDomain3() != null) {
            _hashCode += getDomain3().hashCode();
        }
        if (getCodomain3() != null) {
            _hashCode += getCodomain3().hashCode();
        }
        if (getImage3() != null) {
            _hashCode += getImage3().hashCode();
        }
        if (getDomainofapplication3() != null) {
            _hashCode += getDomainofapplication3().hashCode();
        }
        if (getIdent3() != null) {
            _hashCode += getIdent3().hashCode();
        }
        if (getAnd3() != null) {
            _hashCode += getAnd3().hashCode();
        }
        if (getOr3() != null) {
            _hashCode += getOr3().hashCode();
        }
        if (getXor3() != null) {
            _hashCode += getXor3().hashCode();
        }
        if (getNot3() != null) {
            _hashCode += getNot3().hashCode();
        }
        if (getExists3() != null) {
            _hashCode += getExists3().hashCode();
        }
        if (getForall3() != null) {
            _hashCode += getForall3().hashCode();
        }
        if (getImplies3() != null) {
            _hashCode += getImplies3().hashCode();
        }
        if (getNaturalnumbers3() != null) {
            _hashCode += getNaturalnumbers3().hashCode();
        }
        if (getPrimes3() != null) {
            _hashCode += getPrimes3().hashCode();
        }
        if (getIntegers3() != null) {
            _hashCode += getIntegers3().hashCode();
        }
        if (getRationals3() != null) {
            _hashCode += getRationals3().hashCode();
        }
        if (getReals3() != null) {
            _hashCode += getReals3().hashCode();
        }
        if (getComplexes3() != null) {
            _hashCode += getComplexes3().hashCode();
        }
        if (getEmptyset3() != null) {
            _hashCode += getEmptyset3().hashCode();
        }
        if (getExponentiale3() != null) {
            _hashCode += getExponentiale3().hashCode();
        }
        if (getImaginaryi3() != null) {
            _hashCode += getImaginaryi3().hashCode();
        }
        if (getPi3() != null) {
            _hashCode += getPi3().hashCode();
        }
        if (getEulergamma3() != null) {
            _hashCode += getEulergamma3().hashCode();
        }
        if (get_true3() != null) {
            _hashCode += get_true3().hashCode();
        }
        if (get_false3() != null) {
            _hashCode += get_false3().hashCode();
        }
        if (getInfinity3() != null) {
            _hashCode += getInfinity3().hashCode();
        }
        if (getNotanumber3() != null) {
            _hashCode += getNotanumber3().hashCode();
        }
        if (getSet3() != null) {
            _hashCode += getSet3().hashCode();
        }
        if (getList3() != null) {
            _hashCode += getList3().hashCode();
        }
        if (getUnion3() != null) {
            _hashCode += getUnion3().hashCode();
        }
        if (getIntersect3() != null) {
            _hashCode += getIntersect3().hashCode();
        }
        if (getIn3() != null) {
            _hashCode += getIn3().hashCode();
        }
        if (getNotin3() != null) {
            _hashCode += getNotin3().hashCode();
        }
        if (getSubset3() != null) {
            _hashCode += getSubset3().hashCode();
        }
        if (getPrsubset3() != null) {
            _hashCode += getPrsubset3().hashCode();
        }
        if (getNotsubset3() != null) {
            _hashCode += getNotsubset3().hashCode();
        }
        if (getNotprsubset3() != null) {
            _hashCode += getNotprsubset3().hashCode();
        }
        if (getSetdiff3() != null) {
            _hashCode += getSetdiff3().hashCode();
        }
        if (getCard3() != null) {
            _hashCode += getCard3().hashCode();
        }
        if (getCartesianproduct3() != null) {
            _hashCode += getCartesianproduct3().hashCode();
        }
        if (getEq3() != null) {
            _hashCode += getEq3().hashCode();
        }
        if (getNeq3() != null) {
            _hashCode += getNeq3().hashCode();
        }
        if (getLeq3() != null) {
            _hashCode += getLeq3().hashCode();
        }
        if (getLt3() != null) {
            _hashCode += getLt3().hashCode();
        }
        if (getGeq3() != null) {
            _hashCode += getGeq3().hashCode();
        }
        if (getGt3() != null) {
            _hashCode += getGt3().hashCode();
        }
        if (getEquivalent3() != null) {
            _hashCode += getEquivalent3().hashCode();
        }
        if (getApprox3() != null) {
            _hashCode += getApprox3().hashCode();
        }
        if (getFactorof3() != null) {
            _hashCode += getFactorof3().hashCode();
        }
        if (getExp3() != null) {
            _hashCode += getExp3().hashCode();
        }
        if (getLn3() != null) {
            _hashCode += getLn3().hashCode();
        }
        if (getLog3() != null) {
            _hashCode += getLog3().hashCode();
        }
        if (getLogbase3() != null) {
            _hashCode += getLogbase3().hashCode();
        }
        if (getSin3() != null) {
            _hashCode += getSin3().hashCode();
        }
        if (getCos3() != null) {
            _hashCode += getCos3().hashCode();
        }
        if (getTan3() != null) {
            _hashCode += getTan3().hashCode();
        }
        if (getSec3() != null) {
            _hashCode += getSec3().hashCode();
        }
        if (getCsc3() != null) {
            _hashCode += getCsc3().hashCode();
        }
        if (getCot3() != null) {
            _hashCode += getCot3().hashCode();
        }
        if (getArcsin3() != null) {
            _hashCode += getArcsin3().hashCode();
        }
        if (getArccos3() != null) {
            _hashCode += getArccos3().hashCode();
        }
        if (getArctan3() != null) {
            _hashCode += getArctan3().hashCode();
        }
        if (getArcsec3() != null) {
            _hashCode += getArcsec3().hashCode();
        }
        if (getArccsc3() != null) {
            _hashCode += getArccsc3().hashCode();
        }
        if (getArccot3() != null) {
            _hashCode += getArccot3().hashCode();
        }
        if (getSinh3() != null) {
            _hashCode += getSinh3().hashCode();
        }
        if (getCosh3() != null) {
            _hashCode += getCosh3().hashCode();
        }
        if (getTanh3() != null) {
            _hashCode += getTanh3().hashCode();
        }
        if (getSech3() != null) {
            _hashCode += getSech3().hashCode();
        }
        if (getCsch3() != null) {
            _hashCode += getCsch3().hashCode();
        }
        if (getCoth3() != null) {
            _hashCode += getCoth3().hashCode();
        }
        if (getArccosh3() != null) {
            _hashCode += getArccosh3().hashCode();
        }
        if (getArccoth3() != null) {
            _hashCode += getArccoth3().hashCode();
        }
        if (getArccsch3() != null) {
            _hashCode += getArccsch3().hashCode();
        }
        if (getArcsech3() != null) {
            _hashCode += getArcsech3().hashCode();
        }
        if (getArcsinh3() != null) {
            _hashCode += getArcsinh3().hashCode();
        }
        if (getArctanh3() != null) {
            _hashCode += getArctanh3().hashCode();
        }
        if (get_int3() != null) {
            _hashCode += get_int3().hashCode();
        }
        if (getDiff3() != null) {
            _hashCode += getDiff3().hashCode();
        }
        if (getPartialdiff3() != null) {
            _hashCode += getPartialdiff3().hashCode();
        }
        if (getLimit3() != null) {
            _hashCode += getLimit3().hashCode();
        }
        if (getLowlimit3() != null) {
            _hashCode += getLowlimit3().hashCode();
        }
        if (getUplimit3() != null) {
            _hashCode += getUplimit3().hashCode();
        }
        if (getTendsto3() != null) {
            _hashCode += getTendsto3().hashCode();
        }
        if (getVector3() != null) {
            _hashCode += getVector3().hashCode();
        }
        if (getMatrix3() != null) {
            _hashCode += getMatrix3().hashCode();
        }
        if (getDeterminant3() != null) {
            _hashCode += getDeterminant3().hashCode();
        }
        if (getTranspose3() != null) {
            _hashCode += getTranspose3().hashCode();
        }
        if (getSelector3() != null) {
            _hashCode += getSelector3().hashCode();
        }
        if (getVectorproduct3() != null) {
            _hashCode += getVectorproduct3().hashCode();
        }
        if (getScalarproduct3() != null) {
            _hashCode += getScalarproduct3().hashCode();
        }
        if (getOuterproduct3() != null) {
            _hashCode += getOuterproduct3().hashCode();
        }
        if (getDivergence3() != null) {
            _hashCode += getDivergence3().hashCode();
        }
        if (getGrad3() != null) {
            _hashCode += getGrad3().hashCode();
        }
        if (getCurl3() != null) {
            _hashCode += getCurl3().hashCode();
        }
        if (getLaplacian3() != null) {
            _hashCode += getLaplacian3().hashCode();
        }
        if (getMean3() != null) {
            _hashCode += getMean3().hashCode();
        }
        if (getSdev3() != null) {
            _hashCode += getSdev3().hashCode();
        }
        if (getVariance3() != null) {
            _hashCode += getVariance3().hashCode();
        }
        if (getMedian3() != null) {
            _hashCode += getMedian3().hashCode();
        }
        if (getMode3() != null) {
            _hashCode += getMode3().hashCode();
        }
        if (getMoment3() != null) {
            _hashCode += getMoment3().hashCode();
        }
        if (getMomentabout3() != null) {
            _hashCode += getMomentabout3().hashCode();
        }
        if (getApply3() != null) {
            _hashCode += getApply3().hashCode();
        }
        if (getInterval3() != null) {
            _hashCode += getInterval3().hashCode();
        }
        if (getInverse3() != null) {
            _hashCode += getInverse3().hashCode();
        }
        if (getCondition3() != null) {
            _hashCode += getCondition3().hashCode();
        }
        if (getDeclare3() != null) {
            _hashCode += getDeclare3().hashCode();
        }
        if (getLambda3() != null) {
            _hashCode += getLambda3().hashCode();
        }
        if (getPiecewise3() != null) {
            _hashCode += getPiecewise3().hashCode();
        }
        if (getBvar3() != null) {
            _hashCode += getBvar3().hashCode();
        }
        if (getDegree3() != null) {
            _hashCode += getDegree3().hashCode();
        }
        if (getSemantics3() != null) {
            _hashCode += getSemantics3().hashCode();
        }
        if (getNone2() != null) {
            _hashCode += getNone2().hashCode();
        }
        if (getMprescripts() != null) {
            _hashCode += getMprescripts().hashCode();
        }
        if (getMi4() != null) {
            _hashCode += getMi4().hashCode();
        }
        if (getMo4() != null) {
            _hashCode += getMo4().hashCode();
        }
        if (getMn4() != null) {
            _hashCode += getMn4().hashCode();
        }
        if (getMtext4() != null) {
            _hashCode += getMtext4().hashCode();
        }
        if (getMs4() != null) {
            _hashCode += getMs4().hashCode();
        }
        if (getMrow4() != null) {
            _hashCode += getMrow4().hashCode();
        }
        if (getMfrac4() != null) {
            _hashCode += getMfrac4().hashCode();
        }
        if (getMsqrt4() != null) {
            _hashCode += getMsqrt4().hashCode();
        }
        if (getMroot4() != null) {
            _hashCode += getMroot4().hashCode();
        }
        if (getMpadded4() != null) {
            _hashCode += getMpadded4().hashCode();
        }
        if (getMphantom4() != null) {
            _hashCode += getMphantom4().hashCode();
        }
        if (getMfenced4() != null) {
            _hashCode += getMfenced4().hashCode();
        }
        if (getMenclose4() != null) {
            _hashCode += getMenclose4().hashCode();
        }
        if (getMsub4() != null) {
            _hashCode += getMsub4().hashCode();
        }
        if (getMsup4() != null) {
            _hashCode += getMsup4().hashCode();
        }
        if (getMsubsup4() != null) {
            _hashCode += getMsubsup4().hashCode();
        }
        if (getMunder4() != null) {
            _hashCode += getMunder4().hashCode();
        }
        if (getMover4() != null) {
            _hashCode += getMover4().hashCode();
        }
        if (getMunderover4() != null) {
            _hashCode += getMunderover4().hashCode();
        }
        if (getMmultiscripts4() != null) {
            _hashCode += getMmultiscripts4().hashCode();
        }
        if (getMtable4() != null) {
            _hashCode += getMtable4().hashCode();
        }
        if (getMaligngroup4() != null) {
            _hashCode += getMaligngroup4().hashCode();
        }
        if (getMalignmark4() != null) {
            _hashCode += getMalignmark4().hashCode();
        }
        if (getMspace4() != null) {
            _hashCode += getMspace4().hashCode();
        }
        if (getMaction4() != null) {
            _hashCode += getMaction4().hashCode();
        }
        if (getMerror4() != null) {
            _hashCode += getMerror4().hashCode();
        }
        if (getMstyle4() != null) {
            _hashCode += getMstyle4().hashCode();
        }
        if (getCn4() != null) {
            _hashCode += getCn4().hashCode();
        }
        if (getCi4() != null) {
            _hashCode += getCi4().hashCode();
        }
        if (getCsymbol4() != null) {
            _hashCode += getCsymbol4().hashCode();
        }
        if (getAbs4() != null) {
            _hashCode += getAbs4().hashCode();
        }
        if (getConjugate4() != null) {
            _hashCode += getConjugate4().hashCode();
        }
        if (getFactorial4() != null) {
            _hashCode += getFactorial4().hashCode();
        }
        if (getArg4() != null) {
            _hashCode += getArg4().hashCode();
        }
        if (getReal4() != null) {
            _hashCode += getReal4().hashCode();
        }
        if (getImaginary4() != null) {
            _hashCode += getImaginary4().hashCode();
        }
        if (getFloor4() != null) {
            _hashCode += getFloor4().hashCode();
        }
        if (getCeiling4() != null) {
            _hashCode += getCeiling4().hashCode();
        }
        if (getQuotient4() != null) {
            _hashCode += getQuotient4().hashCode();
        }
        if (getDivide4() != null) {
            _hashCode += getDivide4().hashCode();
        }
        if (getRem4() != null) {
            _hashCode += getRem4().hashCode();
        }
        if (getMinus4() != null) {
            _hashCode += getMinus4().hashCode();
        }
        if (getPlus4() != null) {
            _hashCode += getPlus4().hashCode();
        }
        if (getTimes4() != null) {
            _hashCode += getTimes4().hashCode();
        }
        if (getPower4() != null) {
            _hashCode += getPower4().hashCode();
        }
        if (getRoot4() != null) {
            _hashCode += getRoot4().hashCode();
        }
        if (getMax4() != null) {
            _hashCode += getMax4().hashCode();
        }
        if (getMin4() != null) {
            _hashCode += getMin4().hashCode();
        }
        if (getGcd4() != null) {
            _hashCode += getGcd4().hashCode();
        }
        if (getLcm4() != null) {
            _hashCode += getLcm4().hashCode();
        }
        if (getSum4() != null) {
            _hashCode += getSum4().hashCode();
        }
        if (getProduct4() != null) {
            _hashCode += getProduct4().hashCode();
        }
        if (getCompose4() != null) {
            _hashCode += getCompose4().hashCode();
        }
        if (getDomain4() != null) {
            _hashCode += getDomain4().hashCode();
        }
        if (getCodomain4() != null) {
            _hashCode += getCodomain4().hashCode();
        }
        if (getImage4() != null) {
            _hashCode += getImage4().hashCode();
        }
        if (getDomainofapplication4() != null) {
            _hashCode += getDomainofapplication4().hashCode();
        }
        if (getIdent4() != null) {
            _hashCode += getIdent4().hashCode();
        }
        if (getAnd4() != null) {
            _hashCode += getAnd4().hashCode();
        }
        if (getOr4() != null) {
            _hashCode += getOr4().hashCode();
        }
        if (getXor4() != null) {
            _hashCode += getXor4().hashCode();
        }
        if (getNot4() != null) {
            _hashCode += getNot4().hashCode();
        }
        if (getExists4() != null) {
            _hashCode += getExists4().hashCode();
        }
        if (getForall4() != null) {
            _hashCode += getForall4().hashCode();
        }
        if (getImplies4() != null) {
            _hashCode += getImplies4().hashCode();
        }
        if (getNaturalnumbers4() != null) {
            _hashCode += getNaturalnumbers4().hashCode();
        }
        if (getPrimes4() != null) {
            _hashCode += getPrimes4().hashCode();
        }
        if (getIntegers4() != null) {
            _hashCode += getIntegers4().hashCode();
        }
        if (getRationals4() != null) {
            _hashCode += getRationals4().hashCode();
        }
        if (getReals4() != null) {
            _hashCode += getReals4().hashCode();
        }
        if (getComplexes4() != null) {
            _hashCode += getComplexes4().hashCode();
        }
        if (getEmptyset4() != null) {
            _hashCode += getEmptyset4().hashCode();
        }
        if (getExponentiale4() != null) {
            _hashCode += getExponentiale4().hashCode();
        }
        if (getImaginaryi4() != null) {
            _hashCode += getImaginaryi4().hashCode();
        }
        if (getPi4() != null) {
            _hashCode += getPi4().hashCode();
        }
        if (getEulergamma4() != null) {
            _hashCode += getEulergamma4().hashCode();
        }
        if (get_true4() != null) {
            _hashCode += get_true4().hashCode();
        }
        if (get_false4() != null) {
            _hashCode += get_false4().hashCode();
        }
        if (getInfinity4() != null) {
            _hashCode += getInfinity4().hashCode();
        }
        if (getNotanumber4() != null) {
            _hashCode += getNotanumber4().hashCode();
        }
        if (getSet4() != null) {
            _hashCode += getSet4().hashCode();
        }
        if (getList4() != null) {
            _hashCode += getList4().hashCode();
        }
        if (getUnion4() != null) {
            _hashCode += getUnion4().hashCode();
        }
        if (getIntersect4() != null) {
            _hashCode += getIntersect4().hashCode();
        }
        if (getIn4() != null) {
            _hashCode += getIn4().hashCode();
        }
        if (getNotin4() != null) {
            _hashCode += getNotin4().hashCode();
        }
        if (getSubset4() != null) {
            _hashCode += getSubset4().hashCode();
        }
        if (getPrsubset4() != null) {
            _hashCode += getPrsubset4().hashCode();
        }
        if (getNotsubset4() != null) {
            _hashCode += getNotsubset4().hashCode();
        }
        if (getNotprsubset4() != null) {
            _hashCode += getNotprsubset4().hashCode();
        }
        if (getSetdiff4() != null) {
            _hashCode += getSetdiff4().hashCode();
        }
        if (getCard4() != null) {
            _hashCode += getCard4().hashCode();
        }
        if (getCartesianproduct4() != null) {
            _hashCode += getCartesianproduct4().hashCode();
        }
        if (getEq4() != null) {
            _hashCode += getEq4().hashCode();
        }
        if (getNeq4() != null) {
            _hashCode += getNeq4().hashCode();
        }
        if (getLeq4() != null) {
            _hashCode += getLeq4().hashCode();
        }
        if (getLt4() != null) {
            _hashCode += getLt4().hashCode();
        }
        if (getGeq4() != null) {
            _hashCode += getGeq4().hashCode();
        }
        if (getGt4() != null) {
            _hashCode += getGt4().hashCode();
        }
        if (getEquivalent4() != null) {
            _hashCode += getEquivalent4().hashCode();
        }
        if (getApprox4() != null) {
            _hashCode += getApprox4().hashCode();
        }
        if (getFactorof4() != null) {
            _hashCode += getFactorof4().hashCode();
        }
        if (getExp4() != null) {
            _hashCode += getExp4().hashCode();
        }
        if (getLn4() != null) {
            _hashCode += getLn4().hashCode();
        }
        if (getLog4() != null) {
            _hashCode += getLog4().hashCode();
        }
        if (getLogbase4() != null) {
            _hashCode += getLogbase4().hashCode();
        }
        if (getSin4() != null) {
            _hashCode += getSin4().hashCode();
        }
        if (getCos4() != null) {
            _hashCode += getCos4().hashCode();
        }
        if (getTan4() != null) {
            _hashCode += getTan4().hashCode();
        }
        if (getSec4() != null) {
            _hashCode += getSec4().hashCode();
        }
        if (getCsc4() != null) {
            _hashCode += getCsc4().hashCode();
        }
        if (getCot4() != null) {
            _hashCode += getCot4().hashCode();
        }
        if (getArcsin4() != null) {
            _hashCode += getArcsin4().hashCode();
        }
        if (getArccos4() != null) {
            _hashCode += getArccos4().hashCode();
        }
        if (getArctan4() != null) {
            _hashCode += getArctan4().hashCode();
        }
        if (getArcsec4() != null) {
            _hashCode += getArcsec4().hashCode();
        }
        if (getArccsc4() != null) {
            _hashCode += getArccsc4().hashCode();
        }
        if (getArccot4() != null) {
            _hashCode += getArccot4().hashCode();
        }
        if (getSinh4() != null) {
            _hashCode += getSinh4().hashCode();
        }
        if (getCosh4() != null) {
            _hashCode += getCosh4().hashCode();
        }
        if (getTanh4() != null) {
            _hashCode += getTanh4().hashCode();
        }
        if (getSech4() != null) {
            _hashCode += getSech4().hashCode();
        }
        if (getCsch4() != null) {
            _hashCode += getCsch4().hashCode();
        }
        if (getCoth4() != null) {
            _hashCode += getCoth4().hashCode();
        }
        if (getArccosh4() != null) {
            _hashCode += getArccosh4().hashCode();
        }
        if (getArccoth4() != null) {
            _hashCode += getArccoth4().hashCode();
        }
        if (getArccsch4() != null) {
            _hashCode += getArccsch4().hashCode();
        }
        if (getArcsech4() != null) {
            _hashCode += getArcsech4().hashCode();
        }
        if (getArcsinh4() != null) {
            _hashCode += getArcsinh4().hashCode();
        }
        if (getArctanh4() != null) {
            _hashCode += getArctanh4().hashCode();
        }
        if (get_int4() != null) {
            _hashCode += get_int4().hashCode();
        }
        if (getDiff4() != null) {
            _hashCode += getDiff4().hashCode();
        }
        if (getPartialdiff4() != null) {
            _hashCode += getPartialdiff4().hashCode();
        }
        if (getLimit4() != null) {
            _hashCode += getLimit4().hashCode();
        }
        if (getLowlimit4() != null) {
            _hashCode += getLowlimit4().hashCode();
        }
        if (getUplimit4() != null) {
            _hashCode += getUplimit4().hashCode();
        }
        if (getTendsto4() != null) {
            _hashCode += getTendsto4().hashCode();
        }
        if (getVector4() != null) {
            _hashCode += getVector4().hashCode();
        }
        if (getMatrix4() != null) {
            _hashCode += getMatrix4().hashCode();
        }
        if (getDeterminant4() != null) {
            _hashCode += getDeterminant4().hashCode();
        }
        if (getTranspose4() != null) {
            _hashCode += getTranspose4().hashCode();
        }
        if (getSelector4() != null) {
            _hashCode += getSelector4().hashCode();
        }
        if (getVectorproduct4() != null) {
            _hashCode += getVectorproduct4().hashCode();
        }
        if (getScalarproduct4() != null) {
            _hashCode += getScalarproduct4().hashCode();
        }
        if (getOuterproduct4() != null) {
            _hashCode += getOuterproduct4().hashCode();
        }
        if (getDivergence4() != null) {
            _hashCode += getDivergence4().hashCode();
        }
        if (getGrad4() != null) {
            _hashCode += getGrad4().hashCode();
        }
        if (getCurl4() != null) {
            _hashCode += getCurl4().hashCode();
        }
        if (getLaplacian4() != null) {
            _hashCode += getLaplacian4().hashCode();
        }
        if (getMean4() != null) {
            _hashCode += getMean4().hashCode();
        }
        if (getSdev4() != null) {
            _hashCode += getSdev4().hashCode();
        }
        if (getVariance4() != null) {
            _hashCode += getVariance4().hashCode();
        }
        if (getMedian4() != null) {
            _hashCode += getMedian4().hashCode();
        }
        if (getMode4() != null) {
            _hashCode += getMode4().hashCode();
        }
        if (getMoment4() != null) {
            _hashCode += getMoment4().hashCode();
        }
        if (getMomentabout4() != null) {
            _hashCode += getMomentabout4().hashCode();
        }
        if (getApply4() != null) {
            _hashCode += getApply4().hashCode();
        }
        if (getInterval4() != null) {
            _hashCode += getInterval4().hashCode();
        }
        if (getInverse4() != null) {
            _hashCode += getInverse4().hashCode();
        }
        if (getCondition4() != null) {
            _hashCode += getCondition4().hashCode();
        }
        if (getDeclare4() != null) {
            _hashCode += getDeclare4().hashCode();
        }
        if (getLambda4() != null) {
            _hashCode += getLambda4().hashCode();
        }
        if (getPiecewise4() != null) {
            _hashCode += getPiecewise4().hashCode();
        }
        if (getBvar4() != null) {
            _hashCode += getBvar4().hashCode();
        }
        if (getDegree4() != null) {
            _hashCode += getDegree4().hashCode();
        }
        if (getSemantics4() != null) {
            _hashCode += getSemantics4().hashCode();
        }
        if (getNone3() != null) {
            _hashCode += getNone3().hashCode();
        }
        if (getMi5() != null) {
            _hashCode += getMi5().hashCode();
        }
        if (getMo5() != null) {
            _hashCode += getMo5().hashCode();
        }
        if (getMn5() != null) {
            _hashCode += getMn5().hashCode();
        }
        if (getMtext5() != null) {
            _hashCode += getMtext5().hashCode();
        }
        if (getMs5() != null) {
            _hashCode += getMs5().hashCode();
        }
        if (getMrow5() != null) {
            _hashCode += getMrow5().hashCode();
        }
        if (getMfrac5() != null) {
            _hashCode += getMfrac5().hashCode();
        }
        if (getMsqrt5() != null) {
            _hashCode += getMsqrt5().hashCode();
        }
        if (getMroot5() != null) {
            _hashCode += getMroot5().hashCode();
        }
        if (getMpadded5() != null) {
            _hashCode += getMpadded5().hashCode();
        }
        if (getMphantom5() != null) {
            _hashCode += getMphantom5().hashCode();
        }
        if (getMfenced5() != null) {
            _hashCode += getMfenced5().hashCode();
        }
        if (getMenclose5() != null) {
            _hashCode += getMenclose5().hashCode();
        }
        if (getMsub5() != null) {
            _hashCode += getMsub5().hashCode();
        }
        if (getMsup5() != null) {
            _hashCode += getMsup5().hashCode();
        }
        if (getMsubsup5() != null) {
            _hashCode += getMsubsup5().hashCode();
        }
        if (getMunder5() != null) {
            _hashCode += getMunder5().hashCode();
        }
        if (getMover5() != null) {
            _hashCode += getMover5().hashCode();
        }
        if (getMunderover5() != null) {
            _hashCode += getMunderover5().hashCode();
        }
        if (getMmultiscripts5() != null) {
            _hashCode += getMmultiscripts5().hashCode();
        }
        if (getMtable5() != null) {
            _hashCode += getMtable5().hashCode();
        }
        if (getMaligngroup5() != null) {
            _hashCode += getMaligngroup5().hashCode();
        }
        if (getMalignmark5() != null) {
            _hashCode += getMalignmark5().hashCode();
        }
        if (getMspace5() != null) {
            _hashCode += getMspace5().hashCode();
        }
        if (getMaction5() != null) {
            _hashCode += getMaction5().hashCode();
        }
        if (getMerror5() != null) {
            _hashCode += getMerror5().hashCode();
        }
        if (getMstyle5() != null) {
            _hashCode += getMstyle5().hashCode();
        }
        if (getCn5() != null) {
            _hashCode += getCn5().hashCode();
        }
        if (getCi5() != null) {
            _hashCode += getCi5().hashCode();
        }
        if (getCsymbol5() != null) {
            _hashCode += getCsymbol5().hashCode();
        }
        if (getAbs5() != null) {
            _hashCode += getAbs5().hashCode();
        }
        if (getConjugate5() != null) {
            _hashCode += getConjugate5().hashCode();
        }
        if (getFactorial5() != null) {
            _hashCode += getFactorial5().hashCode();
        }
        if (getArg5() != null) {
            _hashCode += getArg5().hashCode();
        }
        if (getReal5() != null) {
            _hashCode += getReal5().hashCode();
        }
        if (getImaginary5() != null) {
            _hashCode += getImaginary5().hashCode();
        }
        if (getFloor5() != null) {
            _hashCode += getFloor5().hashCode();
        }
        if (getCeiling5() != null) {
            _hashCode += getCeiling5().hashCode();
        }
        if (getQuotient5() != null) {
            _hashCode += getQuotient5().hashCode();
        }
        if (getDivide5() != null) {
            _hashCode += getDivide5().hashCode();
        }
        if (getRem5() != null) {
            _hashCode += getRem5().hashCode();
        }
        if (getMinus5() != null) {
            _hashCode += getMinus5().hashCode();
        }
        if (getPlus5() != null) {
            _hashCode += getPlus5().hashCode();
        }
        if (getTimes5() != null) {
            _hashCode += getTimes5().hashCode();
        }
        if (getPower5() != null) {
            _hashCode += getPower5().hashCode();
        }
        if (getRoot5() != null) {
            _hashCode += getRoot5().hashCode();
        }
        if (getMax5() != null) {
            _hashCode += getMax5().hashCode();
        }
        if (getMin5() != null) {
            _hashCode += getMin5().hashCode();
        }
        if (getGcd5() != null) {
            _hashCode += getGcd5().hashCode();
        }
        if (getLcm5() != null) {
            _hashCode += getLcm5().hashCode();
        }
        if (getSum5() != null) {
            _hashCode += getSum5().hashCode();
        }
        if (getProduct5() != null) {
            _hashCode += getProduct5().hashCode();
        }
        if (getCompose5() != null) {
            _hashCode += getCompose5().hashCode();
        }
        if (getDomain5() != null) {
            _hashCode += getDomain5().hashCode();
        }
        if (getCodomain5() != null) {
            _hashCode += getCodomain5().hashCode();
        }
        if (getImage5() != null) {
            _hashCode += getImage5().hashCode();
        }
        if (getDomainofapplication5() != null) {
            _hashCode += getDomainofapplication5().hashCode();
        }
        if (getIdent5() != null) {
            _hashCode += getIdent5().hashCode();
        }
        if (getAnd5() != null) {
            _hashCode += getAnd5().hashCode();
        }
        if (getOr5() != null) {
            _hashCode += getOr5().hashCode();
        }
        if (getXor5() != null) {
            _hashCode += getXor5().hashCode();
        }
        if (getNot5() != null) {
            _hashCode += getNot5().hashCode();
        }
        if (getExists5() != null) {
            _hashCode += getExists5().hashCode();
        }
        if (getForall5() != null) {
            _hashCode += getForall5().hashCode();
        }
        if (getImplies5() != null) {
            _hashCode += getImplies5().hashCode();
        }
        if (getNaturalnumbers5() != null) {
            _hashCode += getNaturalnumbers5().hashCode();
        }
        if (getPrimes5() != null) {
            _hashCode += getPrimes5().hashCode();
        }
        if (getIntegers5() != null) {
            _hashCode += getIntegers5().hashCode();
        }
        if (getRationals5() != null) {
            _hashCode += getRationals5().hashCode();
        }
        if (getReals5() != null) {
            _hashCode += getReals5().hashCode();
        }
        if (getComplexes5() != null) {
            _hashCode += getComplexes5().hashCode();
        }
        if (getEmptyset5() != null) {
            _hashCode += getEmptyset5().hashCode();
        }
        if (getExponentiale5() != null) {
            _hashCode += getExponentiale5().hashCode();
        }
        if (getImaginaryi5() != null) {
            _hashCode += getImaginaryi5().hashCode();
        }
        if (getPi5() != null) {
            _hashCode += getPi5().hashCode();
        }
        if (getEulergamma5() != null) {
            _hashCode += getEulergamma5().hashCode();
        }
        if (get_true5() != null) {
            _hashCode += get_true5().hashCode();
        }
        if (get_false5() != null) {
            _hashCode += get_false5().hashCode();
        }
        if (getInfinity5() != null) {
            _hashCode += getInfinity5().hashCode();
        }
        if (getNotanumber5() != null) {
            _hashCode += getNotanumber5().hashCode();
        }
        if (getSet5() != null) {
            _hashCode += getSet5().hashCode();
        }
        if (getList5() != null) {
            _hashCode += getList5().hashCode();
        }
        if (getUnion5() != null) {
            _hashCode += getUnion5().hashCode();
        }
        if (getIntersect5() != null) {
            _hashCode += getIntersect5().hashCode();
        }
        if (getIn5() != null) {
            _hashCode += getIn5().hashCode();
        }
        if (getNotin5() != null) {
            _hashCode += getNotin5().hashCode();
        }
        if (getSubset5() != null) {
            _hashCode += getSubset5().hashCode();
        }
        if (getPrsubset5() != null) {
            _hashCode += getPrsubset5().hashCode();
        }
        if (getNotsubset5() != null) {
            _hashCode += getNotsubset5().hashCode();
        }
        if (getNotprsubset5() != null) {
            _hashCode += getNotprsubset5().hashCode();
        }
        if (getSetdiff5() != null) {
            _hashCode += getSetdiff5().hashCode();
        }
        if (getCard5() != null) {
            _hashCode += getCard5().hashCode();
        }
        if (getCartesianproduct5() != null) {
            _hashCode += getCartesianproduct5().hashCode();
        }
        if (getEq5() != null) {
            _hashCode += getEq5().hashCode();
        }
        if (getNeq5() != null) {
            _hashCode += getNeq5().hashCode();
        }
        if (getLeq5() != null) {
            _hashCode += getLeq5().hashCode();
        }
        if (getLt5() != null) {
            _hashCode += getLt5().hashCode();
        }
        if (getGeq5() != null) {
            _hashCode += getGeq5().hashCode();
        }
        if (getGt5() != null) {
            _hashCode += getGt5().hashCode();
        }
        if (getEquivalent5() != null) {
            _hashCode += getEquivalent5().hashCode();
        }
        if (getApprox5() != null) {
            _hashCode += getApprox5().hashCode();
        }
        if (getFactorof5() != null) {
            _hashCode += getFactorof5().hashCode();
        }
        if (getExp5() != null) {
            _hashCode += getExp5().hashCode();
        }
        if (getLn5() != null) {
            _hashCode += getLn5().hashCode();
        }
        if (getLog5() != null) {
            _hashCode += getLog5().hashCode();
        }
        if (getLogbase5() != null) {
            _hashCode += getLogbase5().hashCode();
        }
        if (getSin5() != null) {
            _hashCode += getSin5().hashCode();
        }
        if (getCos5() != null) {
            _hashCode += getCos5().hashCode();
        }
        if (getTan5() != null) {
            _hashCode += getTan5().hashCode();
        }
        if (getSec5() != null) {
            _hashCode += getSec5().hashCode();
        }
        if (getCsc5() != null) {
            _hashCode += getCsc5().hashCode();
        }
        if (getCot5() != null) {
            _hashCode += getCot5().hashCode();
        }
        if (getArcsin5() != null) {
            _hashCode += getArcsin5().hashCode();
        }
        if (getArccos5() != null) {
            _hashCode += getArccos5().hashCode();
        }
        if (getArctan5() != null) {
            _hashCode += getArctan5().hashCode();
        }
        if (getArcsec5() != null) {
            _hashCode += getArcsec5().hashCode();
        }
        if (getArccsc5() != null) {
            _hashCode += getArccsc5().hashCode();
        }
        if (getArccot5() != null) {
            _hashCode += getArccot5().hashCode();
        }
        if (getSinh5() != null) {
            _hashCode += getSinh5().hashCode();
        }
        if (getCosh5() != null) {
            _hashCode += getCosh5().hashCode();
        }
        if (getTanh5() != null) {
            _hashCode += getTanh5().hashCode();
        }
        if (getSech5() != null) {
            _hashCode += getSech5().hashCode();
        }
        if (getCsch5() != null) {
            _hashCode += getCsch5().hashCode();
        }
        if (getCoth5() != null) {
            _hashCode += getCoth5().hashCode();
        }
        if (getArccosh5() != null) {
            _hashCode += getArccosh5().hashCode();
        }
        if (getArccoth5() != null) {
            _hashCode += getArccoth5().hashCode();
        }
        if (getArccsch5() != null) {
            _hashCode += getArccsch5().hashCode();
        }
        if (getArcsech5() != null) {
            _hashCode += getArcsech5().hashCode();
        }
        if (getArcsinh5() != null) {
            _hashCode += getArcsinh5().hashCode();
        }
        if (getArctanh5() != null) {
            _hashCode += getArctanh5().hashCode();
        }
        if (get_int5() != null) {
            _hashCode += get_int5().hashCode();
        }
        if (getDiff5() != null) {
            _hashCode += getDiff5().hashCode();
        }
        if (getPartialdiff5() != null) {
            _hashCode += getPartialdiff5().hashCode();
        }
        if (getLimit5() != null) {
            _hashCode += getLimit5().hashCode();
        }
        if (getLowlimit5() != null) {
            _hashCode += getLowlimit5().hashCode();
        }
        if (getUplimit5() != null) {
            _hashCode += getUplimit5().hashCode();
        }
        if (getTendsto5() != null) {
            _hashCode += getTendsto5().hashCode();
        }
        if (getVector5() != null) {
            _hashCode += getVector5().hashCode();
        }
        if (getMatrix5() != null) {
            _hashCode += getMatrix5().hashCode();
        }
        if (getDeterminant5() != null) {
            _hashCode += getDeterminant5().hashCode();
        }
        if (getTranspose5() != null) {
            _hashCode += getTranspose5().hashCode();
        }
        if (getSelector5() != null) {
            _hashCode += getSelector5().hashCode();
        }
        if (getVectorproduct5() != null) {
            _hashCode += getVectorproduct5().hashCode();
        }
        if (getScalarproduct5() != null) {
            _hashCode += getScalarproduct5().hashCode();
        }
        if (getOuterproduct5() != null) {
            _hashCode += getOuterproduct5().hashCode();
        }
        if (getDivergence5() != null) {
            _hashCode += getDivergence5().hashCode();
        }
        if (getGrad5() != null) {
            _hashCode += getGrad5().hashCode();
        }
        if (getCurl5() != null) {
            _hashCode += getCurl5().hashCode();
        }
        if (getLaplacian5() != null) {
            _hashCode += getLaplacian5().hashCode();
        }
        if (getMean5() != null) {
            _hashCode += getMean5().hashCode();
        }
        if (getSdev5() != null) {
            _hashCode += getSdev5().hashCode();
        }
        if (getVariance5() != null) {
            _hashCode += getVariance5().hashCode();
        }
        if (getMedian5() != null) {
            _hashCode += getMedian5().hashCode();
        }
        if (getMode5() != null) {
            _hashCode += getMode5().hashCode();
        }
        if (getMoment5() != null) {
            _hashCode += getMoment5().hashCode();
        }
        if (getMomentabout5() != null) {
            _hashCode += getMomentabout5().hashCode();
        }
        if (getApply5() != null) {
            _hashCode += getApply5().hashCode();
        }
        if (getInterval5() != null) {
            _hashCode += getInterval5().hashCode();
        }
        if (getInverse5() != null) {
            _hashCode += getInverse5().hashCode();
        }
        if (getCondition5() != null) {
            _hashCode += getCondition5().hashCode();
        }
        if (getDeclare5() != null) {
            _hashCode += getDeclare5().hashCode();
        }
        if (getLambda5() != null) {
            _hashCode += getLambda5().hashCode();
        }
        if (getPiecewise5() != null) {
            _hashCode += getPiecewise5().hashCode();
        }
        if (getBvar5() != null) {
            _hashCode += getBvar5().hashCode();
        }
        if (getDegree5() != null) {
            _hashCode += getDegree5().hashCode();
        }
        if (getSemantics5() != null) {
            _hashCode += getSemantics5().hashCode();
        }
        if (getNone4() != null) {
            _hashCode += getNone4().hashCode();
        }
        if (get_class() != null) {
            _hashCode += get_class().hashCode();
        }
        if (getStyle() != null) {
            _hashCode += getStyle().hashCode();
        }
        if (getXref() != null) {
            _hashCode += getXref().hashCode();
        }
        if (getId() != null) {
            _hashCode += getId().hashCode();
        }
        if (getHref() != null) {
            _hashCode += getHref().hashCode();
        }
        __hashCodeCalc = false;
        return _hashCode;
    }

    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(MmultiscriptsType.class, true);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        org.apache.axis.description.AttributeDesc attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("_class");
        attrField.setXmlName(new javax.xml.namespace.QName("", "class"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "NMTOKENS"));
        typeDesc.addFieldDesc(attrField);
        attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("style");
        attrField.setXmlName(new javax.xml.namespace.QName("", "style"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        typeDesc.addFieldDesc(attrField);
        attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("xref");
        attrField.setXmlName(new javax.xml.namespace.QName("", "xref"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "IDREF"));
        typeDesc.addFieldDesc(attrField);
        attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("id");
        attrField.setXmlName(new javax.xml.namespace.QName("", "id"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "ID"));
        typeDesc.addFieldDesc(attrField);
        attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("href");
        attrField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1999/xlink", "href"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"));
        typeDesc.addFieldDesc(attrField);
        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mo");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtext");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ms");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mrow");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfrac");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msqrt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mroot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mpadded");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mphantom");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfenced");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("menclose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msub");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msubsup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munder");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munderover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mmultiscripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtable");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maligngroup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("malignmark");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mspace");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maction");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("merror");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mstyle");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ci");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csymbol");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("abs");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "abs"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("conjugate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "conjugate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorial");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorial"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arg");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arg"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("real");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "real"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginary");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginary"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("floor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "floor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ceiling");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ceiling"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("quotient");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "quotient"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divide");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divide"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rem");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rem"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("minus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "minus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("plus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "plus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("times");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "times"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("power");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "power"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("root");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "root"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("max");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "max"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("min");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "min"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gcd");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gcd"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lcm");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lcm"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sum");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sum"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("product");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "product"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("compose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "compose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("codomain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "codomain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("image");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "image"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domainofapplication");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ident");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ident"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("and");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "and"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("or");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "or"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("xor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "xor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("not");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "not"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exists");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exists"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("forall");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "forall"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("implies");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "implies"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("naturalnumbers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("primes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "primes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("integers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "integers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rationals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rationals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("reals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "reals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("complexes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "complexes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("emptyset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "emptyset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exponentiale");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exponentiale"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginaryi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginaryi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("pi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "pi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eulergamma");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eulergamma"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_true");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "true"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_false");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "false"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("infinity");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "infinity"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notanumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notanumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("set");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("list");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("union");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intersect");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("in");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notprsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("setdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("card");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cartesianproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("neq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "neq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("leq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "leq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("geq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "geq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("equivalent");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "equivalent"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approx");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "approx"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorof");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorof"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exp");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exp"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ln");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ln"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("log");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "log"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("logbase");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("coth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "coth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccoth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccoth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_int");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("diff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("partialdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("limit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lowlimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("uplimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tendsto");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("matrix");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("determinant");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("transpose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("selector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vectorproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scalarproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("outerproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divergence");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("grad");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("curl");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("laplacian");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mean");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sdev");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("variance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("median");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("moment");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("momentabout");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("apply");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("interval");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("inverse");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("condition");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("declare");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lambda");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("piecewise");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("bvar");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("degree");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("semantics");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mo");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtext");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ms");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mrow");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfrac");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msqrt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mroot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mpadded");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mphantom");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfenced");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("menclose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msub");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msubsup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munder");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munderover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mmultiscripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtable");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maligngroup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("malignmark");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mspace");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maction");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("merror");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mstyle");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ci");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csymbol");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("abs");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "abs"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("conjugate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "conjugate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorial");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorial"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arg");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arg"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("real");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "real"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginary");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginary"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("floor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "floor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ceiling");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ceiling"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("quotient");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "quotient"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divide");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divide"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rem");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rem"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("minus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "minus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("plus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "plus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("times");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "times"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("power");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "power"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("root");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "root"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("max");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "max"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("min");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "min"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gcd");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gcd"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lcm");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lcm"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sum");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sum"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("product");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "product"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("compose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "compose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("codomain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "codomain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("image");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "image"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domainofapplication");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ident");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ident"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("and");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "and"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("or");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "or"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("xor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "xor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("not");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "not"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exists");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exists"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("forall");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "forall"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("implies");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "implies"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("naturalnumbers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("primes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "primes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("integers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "integers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rationals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rationals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("reals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "reals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("complexes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "complexes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("emptyset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "emptyset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exponentiale");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exponentiale"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginaryi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginaryi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("pi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "pi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eulergamma");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eulergamma"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_true");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "true"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_false");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "false"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("infinity");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "infinity"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notanumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notanumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("set");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("list");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("union");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intersect");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("in");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notprsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("setdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("card");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cartesianproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("neq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "neq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("leq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "leq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("geq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "geq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("equivalent");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "equivalent"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approx");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "approx"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorof");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorof"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exp");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exp"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ln");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ln"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("log");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "log"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("logbase");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("coth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "coth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccoth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccoth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_int");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("diff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("partialdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("limit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lowlimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("uplimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tendsto");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("matrix");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("determinant");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("transpose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("selector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vectorproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scalarproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("outerproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divergence");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("grad");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("curl");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("laplacian");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mean");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sdev");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("variance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("median");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("moment");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("momentabout");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("apply");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("interval");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("inverse");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("condition");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("declare");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lambda");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("piecewise");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("bvar");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("degree");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("semantics");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("none");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mo");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtext");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ms");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mrow");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfrac");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msqrt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mroot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mpadded");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mphantom");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfenced");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("menclose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msub");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msubsup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munder");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munderover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mmultiscripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtable");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maligngroup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("malignmark");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mspace");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maction");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("merror");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mstyle");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ci");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csymbol");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("abs");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "abs"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("conjugate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "conjugate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorial");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorial"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arg");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arg"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("real");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "real"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginary");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginary"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("floor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "floor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ceiling");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ceiling"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("quotient");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "quotient"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divide");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divide"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rem");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rem"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("minus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "minus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("plus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "plus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("times");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "times"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("power");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "power"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("root");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "root"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("max");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "max"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("min");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "min"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gcd");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gcd"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lcm");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lcm"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sum");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sum"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("product");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "product"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("compose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "compose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("codomain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "codomain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("image");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "image"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domainofapplication");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ident");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ident"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("and");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "and"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("or");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "or"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("xor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "xor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("not");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "not"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exists");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exists"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("forall");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "forall"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("implies");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "implies"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("naturalnumbers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("primes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "primes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("integers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "integers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rationals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rationals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("reals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "reals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("complexes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "complexes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("emptyset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "emptyset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exponentiale");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exponentiale"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginaryi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginaryi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("pi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "pi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eulergamma");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eulergamma"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_true");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "true"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_false");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "false"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("infinity");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "infinity"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notanumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notanumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("set");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("list");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("union");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intersect");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("in");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notprsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("setdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("card");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cartesianproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("neq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "neq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("leq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "leq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("geq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "geq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("equivalent");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "equivalent"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approx");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "approx"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorof");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorof"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exp");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exp"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ln");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ln"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("log");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "log"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("logbase");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("coth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "coth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccoth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccoth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_int");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("diff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("partialdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("limit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lowlimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("uplimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tendsto");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("matrix");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("determinant");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("transpose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("selector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vectorproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scalarproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("outerproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divergence");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("grad");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("curl");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("laplacian");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mean");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sdev");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("variance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("median");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("moment");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("momentabout");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("apply");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("interval");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("inverse");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("condition");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("declare");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lambda");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("piecewise");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("bvar");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("degree");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("semantics");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("none");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mprescripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mprescripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mprescripts.type"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mo");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtext");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ms");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mrow");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfrac");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msqrt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mroot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mpadded");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mphantom");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfenced");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("menclose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msub");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msubsup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munder");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munderover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mmultiscripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtable");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maligngroup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("malignmark");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mspace");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maction");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("merror");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mstyle");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ci");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csymbol");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("abs");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "abs"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("conjugate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "conjugate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorial");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorial"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arg");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arg"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("real");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "real"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginary");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginary"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("floor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "floor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ceiling");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ceiling"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("quotient");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "quotient"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divide");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divide"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rem");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rem"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("minus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "minus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("plus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "plus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("times");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "times"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("power");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "power"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("root");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "root"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("max");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "max"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("min");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "min"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gcd");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gcd"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lcm");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lcm"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sum");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sum"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("product");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "product"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("compose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "compose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("codomain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "codomain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("image");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "image"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domainofapplication");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ident");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ident"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("and");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "and"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("or");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "or"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("xor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "xor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("not");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "not"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exists");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exists"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("forall");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "forall"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("implies");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "implies"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("naturalnumbers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("primes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "primes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("integers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "integers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rationals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rationals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("reals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "reals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("complexes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "complexes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("emptyset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "emptyset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exponentiale");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exponentiale"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginaryi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginaryi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("pi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "pi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eulergamma");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eulergamma"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_true");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "true"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_false");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "false"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("infinity");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "infinity"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notanumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notanumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("set");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("list");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("union");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intersect");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("in");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notprsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("setdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("card");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cartesianproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("neq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "neq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("leq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "leq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("geq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "geq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("equivalent");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "equivalent"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approx");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "approx"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorof");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorof"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exp");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exp"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ln");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ln"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("log");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "log"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("logbase");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("coth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "coth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccoth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccoth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_int");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("diff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("partialdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("limit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lowlimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("uplimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tendsto");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("matrix");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("determinant");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("transpose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("selector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vectorproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scalarproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("outerproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divergence");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("grad");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("curl");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("laplacian");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mean");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sdev");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("variance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("median");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("moment");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("momentabout");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("apply");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("interval");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("inverse");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("condition");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("declare");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lambda");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("piecewise");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("bvar");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("degree");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("semantics");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("none");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mi.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mo");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mo.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtext");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtext.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ms");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ms.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mrow");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mrow.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfrac");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfrac.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msqrt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msqrt.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mroot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mroot.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mpadded");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mpadded.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mphantom");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mphantom.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mfenced");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mfenced.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("menclose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "menclose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msub");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msub.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("msubsup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "msubsup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munder");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munder.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("munderover");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "munderover.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mmultiscripts");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mmultiscripts.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mtable");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mtable.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maligngroup");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maligngroup.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("malignmark");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "malignmark.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mspace");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mspace.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maction");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "maction.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("merror");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "merror.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mstyle");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mstyle.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cn");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cn.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ci");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ci.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csymbol");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csymbol.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("abs");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "abs"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("conjugate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "conjugate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorial");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorial"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arg");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arg"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("real");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "real"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginary");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginary"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("floor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "floor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ceiling");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ceiling"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("quotient");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "quotient"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divide");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divide"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rem");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rem"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("minus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "minus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("plus");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "plus"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("times");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "times"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("power");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "power"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("root");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "root"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("max");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "max"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("min");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "min"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gcd");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gcd"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lcm");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lcm"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sum");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sum"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("product");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "product"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Arith.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("compose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "compose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("codomain");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "codomain"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("image");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "image"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("domainofapplication");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "domainofapplication.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ident");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ident"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("and");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "and"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("or");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "or"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("xor");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "xor"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("not");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "not"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exists");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exists"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("forall");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "forall"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("implies");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "implies"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Logic.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("naturalnumbers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "naturalnumbers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("primes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "primes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("integers");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "integers"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("rationals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "rationals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("reals");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "reals"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("complexes");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "complexes"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("emptyset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "emptyset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exponentiale");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exponentiale"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("imaginaryi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "imaginaryi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("pi");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "pi"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eulergamma");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eulergamma"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_true");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "true"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_false");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "false"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("infinity");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "infinity"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notanumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notanumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Constant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("set");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "set.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("list");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "list.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("union");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "union.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("intersect");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "intersect.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("in");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "in.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notin.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "subset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "prsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("notprsubset");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "notprsubset.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("setdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "setdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("card");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "card.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cartesianproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cartesianproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("eq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "eq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("neq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "neq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("leq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "leq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("geq");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "geq"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("gt");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "gt"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("equivalent");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "equivalent"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approx");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "approx"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("factorof");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "factorof"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Relations.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("exp");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "exp"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("ln");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "ln"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("log");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "log"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("logbase");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "logbase.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsin");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsin"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccos");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccos"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctan");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctan"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsec");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsec"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsc");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsc"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccot");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccot"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "cosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("csch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "csch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("coth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "coth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccosh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccosh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccoth");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccoth"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arccsch");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arccsch"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsech");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsech"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arcsinh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arcsinh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("arctanh");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "arctanh"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "Elementary-functions.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("_int");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "int.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("diff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "diff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("partialdiff");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "partialdiff.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("limit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "limit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lowlimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lowlimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("uplimit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "uplimit.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("tendsto");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "tendsto.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("matrix");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "matrix.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("determinant");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "determinant.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("transpose");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "transpose.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("selector");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "selector.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("vectorproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "vectorproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("scalarproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "scalarproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("outerproduct");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "outerproduct.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("divergence");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "divergence.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("grad");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "grad.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("curl");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "curl.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("laplacian");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "laplacian.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mean");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mean.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("sdev");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "sdev.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("variance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "variance.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("median");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "median.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("mode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "mode.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("moment");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "moment.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("momentabout");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "momentabout.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("apply");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "apply.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("interval");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "interval.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("inverse");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "inverse.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("condition");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "condition.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("declare");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "declare.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("lambda");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "lambda.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("piecewise");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "piecewise.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("bvar");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "bvar.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("degree");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "degree.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("semantics");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "semantics.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("none");
        elemField.setXmlName(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/1998/Math/MathML", "none.type"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
    }

    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

    /**
     * Get Custom Serializer
     */
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanSerializer(
            _javaType, _xmlType, typeDesc);
    }

    /**
     * Get Custom Deserializer
     */
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanDeserializer(
            _javaType, _xmlType, typeDesc);
    }

}
